{
  "data": {
    "averageCompleteTime": 508.0,
    "subjectList": [
      {
        "id": "8241",
        "version": 1,
        "type": 1,
        "title": "列表L1中全是整数,小明想将其中所有奇数都增加1,偶数不变,于是编写了如下图所示的代码. 请问,图中红线处,代码应该是?( )",
        "optionA": "x || 2",
        "optionB": "x ^ 2",
        "optionC": "x && 2",
        "optionD": "x % 2",
        "answer": "D",
        "analyzeContent": "本题代码中,for x in L1 是在L1列表中循环,每次取出的值x交给if语句进行判断,如果除以2的余数不等于0,就是奇数,则x+1,若等于0则x值不变.取余数的运算符是%,所以正确答案就是D.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8243",
        "version": 0,
        "type": 1,
        "title": "小明为了学习选择排序的算法,编写了下面的代码.针对代码中红色文字所示的 一,二,三 处,下面说法正确的是?( ) a = [8,4,11,3,9] count = len(a) for i in range(count-1): mi = i for j in range(i+1,count): if a[mi] > a[j]:   #代码一 mi = j   #代码二 if i!=mi: a[mi],a[i] = a[i],a[mi]   #代码三 print(a)",
        "optionA": "如果找到更大的元素,则记录它的索引号.",
        "optionB": "如果找到更小的元素,则记录它的索引号.",
        "optionC": "在一趟选择排序后,不管是否找到更小的元素,mi所在元素都得与i所在的元素发生交换.",
        "optionD": "代码三所在的行必然要运行.",
        "answer": "B",
        "analyzeContent": "",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "排序算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8245",
        "version": 0,
        "type": 1,
        "title": "小明编写了一段演示插入排序的代码,代码如下.请问红色\"缺失代码\"处,应该填写哪段代码?( ) a = [8,4,11,3,9] count = len(a) for i in range(1, count): j = i b = a[i] while j>0 and b",
        "optionA": "j=j-1",
        "optionB": "j=j+1",
        "optionC": "j=i+1",
        "optionD": "缺失代码\"处,应该填写哪段代码?( ) a = [8,4,11,3,9] count = len(a) for i in range(1, count): j = i b = a[i] while j>0 and b<a[j-1] : a[j] = a[j-1] 缺失代码 a[j] = b print(a) j=j-1j=j+1j=i+1j=i-1 j=i-1",
        "answer": "A",
        "analyzeContent": "本题考查学生对插入排序算法的理解.当前位置数字需要通过循环,逐个与之前位置的数字进行比较,所以正确答案是A,j=j-1,用于下一次循环时,获取前一个数字.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "排序算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8248",
        "version": 0,
        "type": 1,
        "title": "在计算机中,信息都是采用什么进行存储?( )",
        "optionA": "二进制数",
        "optionB": "八进制数",
        "optionC": "十进制数",
        "optionD": "十六进制数",
        "answer": "A",
        "analyzeContent": "信息的二进制存储.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8250",
        "version": 0,
        "type": 1,
        "title": "十进制数(100) 10 ,转化为二进制数为( ) 2 ?",
        "optionA": "0010011",
        "optionB": "1010001",
        "optionC": "1100100",
        "optionD": "0101100",
        "answer": "C",
        "analyzeContent": "十进制与二进制转化问题.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8254",
        "version": 0,
        "type": 1,
        "title": "十六进制数每一位至多可以表示几位二进制位?( )",
        "optionA": "2",
        "optionB": "3",
        "optionC": "4",
        "optionD": "16",
        "answer": "C",
        "analyzeContent": "十六进制数与二进制数的关系.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8256",
        "version": 0,
        "type": 1,
        "title": "八进制数(35) 8 ,转化为十进制数为( ) 10 ?",
        "optionA": "100011",
        "optionB": "110001",
        "optionC": "232",
        "optionD": "29",
        "answer": "D",
        "analyzeContent": "A是二进制数;B是二进制数,没有倒排;C是十进制数,展开的权错了;D正确.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8258",
        "version": 0,
        "type": 1,
        "title": "执行代码a=min(3,2,4.3),变量a的值是?( )",
        "optionA": "3",
        "optionB": "2",
        "optionC": "4.3",
        "optionD": "4",
        "answer": "B",
        "analyzeContent": "min(3,2,4.3)中最小值为2,赋值给a",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8259",
        "version": 0,
        "type": 1,
        "title": "print(max('python+'))的运行结果是?( )",
        "optionA": "'p'",
        "optionB": "p",
        "optionC": "'y'",
        "optionD": "y",
        "answer": "D",
        "analyzeContent": "max('python+'),字母中'y'最大,print('y')的结果为y.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8261",
        "version": 0,
        "type": 1,
        "title": "a=5.12596 print(round(a,2))运行结果是?( )",
        "optionA": "5",
        "optionB": "5.1",
        "optionC": "5.12",
        "optionD": "5.13",
        "answer": "D",
        "analyzeContent": "保留2位小数,四舍五入,所以结果是5.13.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8263",
        "version": 0,
        "type": 1,
        "title": "type([{2.6}])运行的结果是?( )",
        "optionA": "float",
        "optionB": "dict",
        "optionC": "True",
        "optionD": "list",
        "answer": "D",
        "analyzeContent": "type([{2.6}])运行的结果是list.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8266",
        "version": 0,
        "type": 1,
        "title": "执行如下代码 a=[1,2,3,4] print(list(enumerate(a))) 运行结果是?( )",
        "optionA": "((0, 1), (1, 2), (2, 3), (3, 4))",
        "optionB": "[(0, 1), (1, 2), (2, 3), (3, 4)]",
        "optionC": "[1,2,3,4]",
        "optionD": "(1,2,3,4)",
        "answer": "B",
        "analyzeContent": "enumerate() 函数用于将一个可遍历的数据对象(如列表,元组或字符串)组合为一个索引序列,同时列出数据和数据下标.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "enumerate() 函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8269",
        "version": 0,
        "type": 1,
        "title": "set('hello')运行结果是?( )",
        "optionA": "('h', 'e', 'l', 'l','o')",
        "optionB": "{'h', 'e', 'l', 'l','o'}",
        "optionC": "{'e', 'h', 'l', 'o'}",
        "optionD": "('e', 'h', 'l', 'o')",
        "answer": "C",
        "analyzeContent": "集合去重,所以结果为{'e', 'h', 'l', 'o'}.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8271",
        "version": 0,
        "type": 1,
        "title": "print(sum([5,10,min(7,4,6)]))的运行结果是?( )",
        "optionA": "22",
        "optionB": "21",
        "optionC": "4",
        "optionD": "19",
        "answer": "D",
        "analyzeContent": "先求出min(7,4,6)中最小值4,再进行sum(5,10,4)求和,得出19.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8275",
        "version": 0,
        "type": 1,
        "title": "divmod(100,3)的执行结果是?( )",
        "optionA": "(1, 33)",
        "optionB": "(33, 1)",
        "optionC": "[33,1]",
        "optionD": "[1,33]",
        "answer": "B",
        "analyzeContent": "divmod(100,3)的运行结果为(33, 1).",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8276",
        "version": 0,
        "type": 1,
        "title": "下列表达式结果是False的是?( )",
        "optionA": "all({})",
        "optionB": "all([10])",
        "optionC": "all(['1','2','3',''])",
        "optionD": "all(['1','2','3'])",
        "answer": "C",
        "analyzeContent": "all() 函数用于判断给定的可迭代参数 iterable 中的所有元素是否都为 True,如果是返回 True,否则返回 False. 元素除了是 0,空,None,False 外都算 True.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8277",
        "version": 0,
        "type": 1,
        "title": "将字符串或数字转换为浮点数的函数是?( )",
        "optionA": "chr()",
        "optionB": "float()",
        "optionC": "int()",
        "optionD": "str()",
        "answer": "B",
        "analyzeContent": "float() 函数用于将整数和字符串转换成浮点数.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8278",
        "version": 0,
        "type": 1,
        "title": "以下表达式的值为True是?( )",
        "optionA": "bool(2022)",
        "optionB": "bool(0)",
        "optionC": "bool()",
        "optionD": "bool({})",
        "answer": "A",
        "analyzeContent": "bool() 函数用于将给定参数转换为布尔类型,如果没有参数,返回 False.bool({2022})中间有元素,所以为True.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8279",
        "version": 0,
        "type": 1,
        "title": "有这样一段程序: a=[\"香蕉\",\"苹果\",\"草莓\",\"哈密瓜\"] fs=open(\"fruits.csv\",\"w\") fs.write(\",\".join(a)+'\\n') fs.close() 该段程序执行后,该csv文件中的内容是?( )",
        "optionA": "香蕉 苹果 草莓 哈密瓜",
        "optionB": "香蕉,苹果,草莓,哈密瓜",
        "optionC": "香蕉苹果草莓哈密瓜",
        "optionD": "[\"香蕉\",\"苹果\",\"草莓\",\"哈密瓜\"]",
        "answer": "B",
        "analyzeContent": "open(\"fruits.csv\",\"w\")表示打开CSV文件,进行写入操作(\"w\"表示可覆盖写入).\",\".join(a)表示将a列表中的元素取出,并用\",\"连接成新的字符串,写入文件.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8280",
        "version": 0,
        "type": 1,
        "title": "关于文件的读写操作,下列说法不正确的是?( )",
        "optionA": "read( )函数读取文件内容后,生成的是一个字符串 .",
        "optionB": "readline( )每次只读取文件中的一行,并返回字符串类型数据.",
        "optionC": "readlines( )函数每次按行读取整个文件的内容,并返回list类型数据.",
        "optionD": "读取文件内容只能用reader( )对象.",
        "answer": "D",
        "analyzeContent": "文件内容的读取可以视不同情况选择不同的函数,reader()也是其中之一.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8281",
        "version": 0,
        "type": 1,
        "title": "关于下列列表,说法正确的是?( ) s=[ [\"佩奇\",\"100\",\"86\",\"85\",\"90\"], [\"苏西\",\"78\",\"88\",\"98\",\"89\"], [\"佩德罗\",\"80\",\"66\",\"80\",\"92\"]]",
        "optionA": "这是一组二维数据",
        "optionB": "这样的数据不能存储到CSV文件中",
        "optionC": "无法读取[\"佩奇\",\"100\",\"86\",\"85\",\"90\"]这条数据",
        "optionD": "必须手动写入到CSV文件中",
        "answer": "A",
        "analyzeContent": "二维列表的每个元素本身也是列表.可通过循环读取元素并写入CSV文件.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理,列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8282",
        "version": 0,
        "type": 1,
        "title": "有关于write()函数的说法正确的是?( )",
        "optionA": "write( )函数只能向文件中写入一行数据",
        "optionB": "write( )函数的参数不是字符串类型",
        "optionC": "write( )函数也可以向文件中写入多行数据",
        "optionD": "write( )函数和writelines( )函数完全相同",
        "answer": "C",
        "analyzeContent": "write()函数可向文件中写入一行或多行数据.其参数必须为字符串,而writelines( )函数既可以传入字符串也可以传入一个字符序列,并写入文件.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8283",
        "version": 0,
        "type": 1,
        "title": "对于在csv文件中追加数据,下列说法正确的是?( )",
        "optionA": "只能以单行方式追加数据",
        "optionB": "只能以多行方式追加数据",
        "optionC": "多行数据追加的函数是writerow( )",
        "optionD": "以单行方式或多行方式追加都可以",
        "answer": "D",
        "analyzeContent": "在CSV中追加数据可以用writerow( )函数进行一行一行写入,也可以用writerows( )函数进行多行写入数据.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8284",
        "version": 0,
        "type": 1,
        "title": "Python的异常处理try....except...else...finally机制中,以下哪部分语句一定能得到全部执行?( )",
        "optionA": "try子句",
        "optionB": "except子句",
        "optionC": "else子句",
        "optionD": "finally子句",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8285",
        "version": 0,
        "type": 1,
        "title": "Python的异常处理机制中,以下表述哪项是错误的?( )",
        "optionA": "如果当try中的语句执行时发生异常,Python就执行匹配该异常的except子句.",
        "optionB": "如果当try中的语句执行时发生异常,try代码块的剩余语句将不会被执行.",
        "optionC": "如果在try子句执行时没有发生异常,Python将执行else语句后的语句.",
        "optionD": "异常处理结构能够发现程序段中的语法错误.",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8286",
        "version": 0,
        "type": 3,
        "title": "二进制数转化为十进制数的方法是:按权展开,逐项相加,如:(101) 2 =(10) 10 .( )",
        "answer": "0",
        "analyzeContent": "末位的权应为0.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8287",
        "version": 0,
        "type": 3,
        "title": "语句print(round(2.785, 2))运行后的结果是2.79.( )",
        "answer": "1",
        "analyzeContent": "round(2.785, 2)保留两位小数,运行后为2.79.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8288",
        "version": 0,
        "type": 3,
        "title": "map() 不会根据提供的函数对指定序列做映射.( )",
        "answer": "0",
        "analyzeContent": "map() 会根据提供的函数对指定序列做映射.第一个参数 function 以参数序列中的每一个元素调用 function 函数,返回包含每次 function 函数返回值的新列表.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8289",
        "version": 0,
        "type": 3,
        "title": "语句print(tuple(range(5)))的输出结果是(0, 1, 2, 3, 4).( )",
        "answer": "1",
        "analyzeContent": "语句tuple(range(5))的输出结果是(0, 1, 2, 3, 4).",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8290",
        "version": 0,
        "type": 3,
        "title": "运行语句set('2022'),其输出结果是{'2','0','2','2'} ( )",
        "answer": "0",
        "analyzeContent": "运行语句set('2022'),其输出结果是{'0', '2'}.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8291",
        "version": 0,
        "type": 3,
        "title": "f=open('ss.csv','r') n=f.read().strip(\"\\n\").split(\",\") f.close() 这段代码的功能是读取文件中的数据到列表.( )",
        "answer": "1",
        "analyzeContent": "考核read()函数的用法.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8292",
        "version": 0,
        "type": 3,
        "title": "一维数组可以用列表实现,二维数组则不能用列表实现.( )",
        "answer": "0",
        "analyzeContent": "一维数组和二维数组都可以用列表实现.二维数组通过列表嵌套列表实现.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8293",
        "version": 0,
        "type": 3,
        "title": "用with open ('fruits.csv','r')as f 语句,打开fruits.csv文件,在处理结束后不会自动关闭被打开的文件,因此需要写上f.close( )语句.( )",
        "answer": "0",
        "analyzeContent": "用with语句打开文件,处理结束后会自动关闭被打开的文件.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8294",
        "version": 0,
        "type": 3,
        "title": "异常处理结构中,finally程序段中的语句不一定都会得到执行.( )",
        "answer": "0",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8295",
        "version": 0,
        "type": 3,
        "title": "在计算机中,每一个二进制位可以表示0和1两种信息 .( )",
        "answer": "1",
        "analyzeContent": "二进制数的表示.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8296",
        "version": 1,
        "type": 4,
        "title": "下面程序实现对二维数据的处理,请你补全代码. f=open('/data/score2.csv','r') a=[] for i in f: a.append(i.strip().split(',')) f.close() ① for i in a: s='' for j in i: ② print(s) 程序执行结果为: [['王鑫', '86', '90', '92', '99', '94', '95'], ['杨小虹', '93', '97', '95', '90', '86', '85'], ['李静', '89', '98', '99', '94', '90', '85']] 王鑫 86 90 92 99 94 95 杨小虹 93 97 95 90 86 85 李静 89 98 99 94 90 85",
        "answer": "<p><strong><span>参考程序:</span></strong></p><p>f=open('/data/score2.csv','r')</p><p><span>a=[]</span><br><span>for i in f:</span><br><span>&nbsp; &nbsp; a.append(i.strip().split(','))</span><br><span>f.close()</span><br><span>print(a,'\\n')</span><br><span>for i in a:</span><br><span>&nbsp; &nbsp; s=''</span><br><span>&nbsp; &nbsp; for j in i:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span>s=s+'{:6}\\t'.format(j)</span><br><span>&nbsp; &nbsp; print(s)</span></p>",
        "analyzeContent": "评分标准: (1) print(a,'\\n')或等效答案;(2分) (2) s=s+'{:6}\\t'.format(j)或等效答案.(2分)",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8297",
        "version": 0,
        "type": 4,
        "title": "在三位数的自然数中,找出至少有一位数字是 5 的,至少能被 3 整除的所有整数,并统计个数,具体代码如下 : count=0 lst=[] for i in range( ① ): if i%3==0: a=i%10 b=i//10%10 c= ② if ③ : count+=1 lst.append(i) print(\" 这样的三位数有: \",lst) print(\" 总数量有: \",count)",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p class=\"MsoNormal\"><span>count=0</span></p><p class=\"MsoNormal\"><span>lst=[]</span></p><p class=\"MsoNormal\"><span>for i in range(<span>100,1000</span></span><span>):</span></p><p class=\"MsoNormal\"><span>&nbsp;&nbsp;&nbsp; if i%3==0:</span></p><p class=\"MsoNormal\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a=i%10</span></p><p class=\"MsoNormal\"><span>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;b=i//10%10</span></p><p class=\"MsoNormal\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c=<span>i//100</span></span></p><p class=\"MsoNormal\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;<span>a==5 or b==5 or c==5</span></span><span>:</span></p><p class=\"MsoNormal\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count+=1</span></p><p class=\"MsoNormal\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lst.append(i)</span></p><p class=\"MsoNormal\"><span>print(\"</span>这样的三位数有:<span>\",lst)</span></p><p class=\"MsoNormal\"><span>print(\"</span>总数量有:<span>\",count)</span></p>",
        "analyzeContent": "评分标准: (1) 100,1000 或者100,1000,1 ;(3分) (2) i//100 ;(3分) (3) a==5 or b==5 or c==5 .(4分)",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8298",
        "version": 0,
        "type": 4,
        "title": "输入一个正数,以下代码编程求出它的平方根.请你补全代码. in_var = float(input(\"请输入一个需要开方的正数,可以使用2位小数:\\n x = \")) if in_var < 0: x = - in_var else: x = in_var low = 0.0 high = x s_root = ① if x > 0 and x < 1: high = 1.0 low = 0 s_root = ② if x >= 0: while abs( ③ ) > 0.0001: if x > 1.0: if s_root ** 2 < x: low = s_root else: high = s_root s_root = ④ if x == 1.0 and x == 0.0: s_root = x else: if s_root ** 2 < x: low = s_root else: high = s_root s_root = ⑤ if in_var >= 0: print(\"所求数的平方根为:s_root = %.1f\"%(s_root))",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p>in_var = float(input(\"请输入一个需要开方的正数,可以使用2位小数:\\n x = \"))&nbsp;</p><p>if in_var &lt; 0:&nbsp;</p><p>&nbsp; &nbsp; x = - in_var&nbsp;</p><p>else:&nbsp;</p><p>&nbsp; &nbsp; x = in_var&nbsp;</p><p>low = 0.0&nbsp;</p><p>high = x&nbsp;</p><p>s_root =<span>(low + high) / 2</span></p><p>if x &gt; 0 and x &lt; 1:&nbsp;</p><p>&nbsp; &nbsp; high = 1.0&nbsp;</p><p>&nbsp; &nbsp; low = 0&nbsp;</p><p>&nbsp; &nbsp; s_root =<span>(<span>low + high) / 2</span></span></p><p>if x &gt;= 0:&nbsp;</p><p>&nbsp; &nbsp; while abs(&nbsp;<span>s_root ** 2 - x</span>) &gt; 0.0001:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;if x &gt; 1.0:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if s_root ** 2 &lt; x:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; low = s_root&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; high = s_root&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s_root =<span>(low + high) / 2</span><span>&nbsp;</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp; if x == 1.0 and x == 0.0:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s_root = x&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if s_root ** 2 &lt; x:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; low = s_root&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; high = s_root&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; s_root =<span>(low + high) / 2</span><span>&nbsp;</span>&nbsp;</p><p>if in_var &gt;= 0:&nbsp;</p><p>&nbsp; &nbsp; print(\"所求数的平方根为:s_root = %.1f\"%(s_root))</p>",
        "analyzeContent": "评分标准: (1) (low + high) / 2 ;   (2分) (2) (low + high) / 2 ; (2分) (3) s_root ** 2 - x ; (4分) (4) (low + high) / 2 ; (4分) (5) (low + high) / 2. (4分)",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      }
    ],
    "calculatePercentage": 0.0,
    "completeTime": "1",
    "answerScore": 0.0,
    "title": "202212Python三级真题",
    "averageScore": 18
  },
  "code": 200,
  "msg": "操作成功"
}