{
  "data": {
    "averageCompleteTime": 715.0,
    "subjectList": [
      {
        "id": "8835",
        "version": 0,
        "type": 1,
        "title": "十进制数111转换成二进制数是?( )",
        "optionA": "111",
        "optionB": "1111011",
        "optionC": "101111",
        "optionD": "1101111",
        "answer": "D",
        "analyzeContent": "十进制转二进制,采用除二倒取余数,直到商为0为止.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8836",
        "version": 0,
        "type": 1,
        "title": "某班有36人,王老师想给每位同学分配一个二进制的学号,那么该学号至少需要多少位?( )",
        "optionA": "36",
        "optionB": "5",
        "optionC": "6",
        "optionD": "7",
        "answer": "C",
        "analyzeContent": "1个二进制位可以编制2个号码,即0,1,2个二进制位可以编制2×2个号码,即00,01,10,11, 3个二进制位可以编制2×2×2个号码,即000,001,010,011,100,101,110,111,依次类推,5个2相乘可以得到32个号码,不够用,故需要6位.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8837",
        "version": 0,
        "type": 1,
        "title": "数据的存储形式多种多样,如s1=[[\"李亮\",\"98\"],[\"王宁宁\",\"95\"],[\"莫晓珍\",\"88\"]],s2=[\"李亮\",\"98\",\"王宁宁\",\"95\",\"莫晓珍\",\"88\"],有关s1与s2下列说法正确的是?( )",
        "optionA": "都是用列表实现的",
        "optionB": "s1是一维列表",
        "optionC": "s2是二维列表",
        "optionD": "要取出\"王宁宁\"同学的成绩,方法是一样的,用s1[4]或s2[4]",
        "answer": "A",
        "analyzeContent": "Python中列表用[ ]表示.s1是二维列表,s2是一维列表.S[1]中用s1[1][1]取出\"王宁宁\"同学的成绩,s2中可用s2[3]取出\"王宁宁\"同学的成绩.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8838",
        "version": 0,
        "type": 1,
        "title": "a=[\"跳绳\",\"跳高\",\"跳远\",\"铅球\"] fs=open(\"sports.csv\",\"w\") fs.write(\" \".join(a)+'\\n') fs.close() 关于上述代码,下列说法正确的是?( )",
        "optionA": "若\"sports.csv\"文件不存在,则程序出错",
        "optionB": "程序的最后结果是:跳绳 跳高 跳远 铅球",
        "optionC": "程序中的fs.close()代码可有可无",
        "optionD": "\"w\"参数表示不能修改原csv文件",
        "answer": "B",
        "analyzeContent": "程序段的功能是表示将a列表中各项元素用空格符进行连接,并写入到sports.csv文件中,\"w\"表示可写入.若文件不存在,可自动创建.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8839",
        "version": 0,
        "type": 1,
        "title": "现有水果价格数据jg=[['草莓',15],['梨子',9],['苹果',10],['桔子',4]],需要将其打印成二维表格数据形式,程序代码如下: jg=[['草莓',15],['梨子',9],['苹果',10],['桔子',4]] for row in range(len(jg)): for col in range(len(jg[row])): print(____________,\"\\t\") 上述划线处代码是?( )",
        "optionA": "jg[row]",
        "optionB": "jg[col]",
        "optionC": "jg[col][row]",
        "optionD": "jg[row][col]",
        "answer": "D",
        "analyzeContent": "外循环遍历每个子列表的索引,内循环遍历子列表中每项元素的索引.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8840",
        "version": 0,
        "type": 1,
        "title": "运行下列程序段: try: a=int(input(\"请输入被除数:\")) b=int(input(\"请输入除数:\")) x=a/b print(\"商是:\",x) except: print(\"输入有错!请检查.\") else: print(\"正确!\") finally: print(\"程序结束.\") 若输入a为8,b为4,则输出结果是?( )",
        "optionA": "商是:2 正确!",
        "optionB": "商是:2 正确! 程序结束.",
        "optionC": "商是:2.0 程序结束.",
        "optionD": "商是:2.0 正确! 程序结束.",
        "answer": "D",
        "analyzeContent": "当try语句块正确时,执行try代码块结束,将执行else语句块,最后执行finally语句块.当输入有误,则执行except语句块和finally语句块.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8841",
        "version": 0,
        "type": 1,
        "title": "已知A的ASCII码值为65, s=\"China\" k=abs(-4.8) 则表达式ord(min(s))+k的值是?( )",
        "optionA": "71.8",
        "optionB": "63",
        "optionC": "61",
        "optionD": "62",
        "answer": "A",
        "analyzeContent": "min()取最小值,ord()求得对应字符的ASCII码值,abs()则为绝对值函数.C的ASCII码值为67,67+4.8=71.8.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8842",
        "version": 0,
        "type": 1,
        "title": "divmod(8,5)的结果是?( )",
        "optionA": "1",
        "optionB": "3",
        "optionC": "(1,3)",
        "optionD": "[1,3]",
        "answer": "C",
        "analyzeContent": "divmod()函数返回的是商和余数组成的元组,而不是列表,也不是单个的商或余数.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8843",
        "version": 0,
        "type": 1,
        "title": "若有代码: name=[\"李明\",\"王宁\",\"朱倩\"] for a,i in enumerate(name): print(a,i) 则显示的结果是?( )",
        "optionA": "0  李明 1  王宁 2  朱倩",
        "optionB": "李明 王宁 朱倩",
        "optionC": "李明,王宁,朱倩",
        "optionD": "1 李明 2 王宁 3 朱倩",
        "answer": "A",
        "analyzeContent": "enumerate()函数用于将序列对象组合为索引与数据元素的元组.程序中的a和i分别遍历元组中的索引和数据元素.索引从0开始.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8844",
        "version": 0,
        "type": 1,
        "title": "有关于print()语句的运用,下列输出结果有误的是?( )",
        "optionA": "print(\"Happy!\")",
        "optionB": "print(李明)",
        "optionC": "print('Happy!')",
        "optionD": "print(2023)",
        "answer": "B",
        "analyzeContent": "print()是输出语句.Python中字符串带单引号,双引号或三引号,变量名不带引号,\"李明\"这个变量并没有进行赋值,故直接输出将发生错误.2023是数值类型,可直接输出.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "字符串",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8845",
        "version": 0,
        "type": 1,
        "title": "若s=\"y\\nea\\tr\",则len(s)的值为?( )",
        "optionA": "8",
        "optionB": "4",
        "optionC": "6",
        "optionD": "5",
        "answer": "C",
        "analyzeContent": "len()表示求字符串长度,\\n和\\t是转义字符,分别占一个字符长度.其它各为一个长度.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8846",
        "version": 0,
        "type": 1,
        "title": "b=[1,2,3,4,5],则sum(b)的值是?( )",
        "optionA": "10",
        "optionB": "14",
        "optionC": "15",
        "optionD": "12",
        "answer": "C",
        "analyzeContent": "sum()函数表示求和,因此1+2+3+4+5=15.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8847",
        "version": 1,
        "type": 1,
        "title": "",
        "optionA": "顺序结构",
        "optionB": "分支结构",
        "optionC": "树形结构",
        "optionD": "循环结构",
        "answer": "D",
        "analyzeContent": "算法的基本结构有顺序结构,分支结构(也叫选择结构),循环结构.循环结构的特点是在满足某一条件的情况下,重复进行某些操作,直到条件不满足.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "算法基础",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8848",
        "version": 0,
        "type": 1,
        "title": "有如下代码: a=[25,37,49,64,73,75,85,91] t=i=0 j=len(a)-1 key=int(input()) while i<=j: m=(i+j)//2 if  a[m]==key: break elif a[m]>key: j=m-1 else: i=m+1 t+=1 print(t) 若输入的key值是73,则程序输出的结果是?( )",
        "optionA": "5",
        "optionB": "1",
        "optionC": "2",
        "optionD": "3",
        "answer": "C",
        "analyzeContent": "这是一道对分查找算法题.主要功能是在列表a中查找数字73,输出查找次数.根据i,j的初始值,m=(0+7)//2=3,第一次对分访问的数据是64,由于64<73,第二次查找范围是i=4,j=7不变,此时t=1;第二次对分访问的是5号索引位上的75,由于75>73,第三次查找的范围是i=4不变,j=4,此时t=2;第三次对分访问的是4号索引位的73,由于73==73,执行break中断整个循环,故t+=1不执行,最后t的值为2.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "对分查找",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8849",
        "version": 0,
        "type": 1,
        "title": "hex函数可以将十进制数转换成十六进制数.在Python交互式编程环境下,执行语句hex(2023)后,显示的运行结果是?( )",
        "optionA": "\"0x7e3\"",
        "optionB": "\"0x7e6\"",
        "optionC": "\"0x7e7\"",
        "optionD": "\"0x7e8\"",
        "answer": "C",
        "analyzeContent": "考查将十进制数转换成十六进制数的计算方法.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8850",
        "version": 0,
        "type": 1,
        "title": "int() 函数用于将一个字符串或数字转换为整型.在Python交互式编程环境下执行以下语句,会出现错误的一项是?( )",
        "optionA": "int()",
        "optionB": "int(1.0)",
        "optionC": "int(0x20,16)",
        "optionD": "int('2023',8)",
        "answer": "C",
        "analyzeContent": "int() 函数用于将一个字符串或数字转换为整型,C项缺引号.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8851",
        "version": 0,
        "type": 1,
        "title": "一维数据可以存储在CSV格式文件中,下列描述正确的是?( )",
        "optionA": "必须采用逗号分隔数据元素",
        "optionB": "必须采用空格来分隔数据元素",
        "optionC": "必须采用分号分隔数据元素",
        "optionD": "允许采用特殊字符来分隔数据元素",
        "answer": "D",
        "analyzeContent": "CSV格式文件允许采用特殊字符来分隔数据元素.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8852",
        "version": 0,
        "type": 1,
        "title": "如果需要使用open函数以可读可写的方式打开一个存储二维数据的CSV文件,则open函数的文件打开模式不能设置成?( )",
        "optionA": "rw",
        "optionB": "r+",
        "optionC": "w+",
        "optionD": "a+",
        "answer": "A",
        "analyzeContent": "open函数没有rw打开文件的模式.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8853",
        "version": 0,
        "type": 1,
        "title": "在try....except...else...finally异常处理机制中,如果发生异常则完全不会被执行的代码块是?( )",
        "optionA": "try代码块",
        "optionB": "except代码块",
        "optionC": "else代码块",
        "optionD": "finally代码块",
        "answer": "C",
        "analyzeContent": "Python异常处理机制中,如果发生异常则完全不会被执行的代码块是else代码块.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8854",
        "version": 0,
        "type": 1,
        "title": "下列数据对象中,不能使用len()函数获取数据对象长度的是?( )",
        "optionA": "2023",
        "optionB": "[2, 0, 2, 3]",
        "optionC": "[\"Go\", \"China!\"]",
        "optionD": "(\"Go\", \"China!\")",
        "answer": "A",
        "analyzeContent": "len函数用于返回字符串,列表,字典,元组等的长度.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8855",
        "version": 0,
        "type": 1,
        "title": "在Python交互式编程环境下,输入print(list(range(0,5,2)))语句,执行的结果是?( )",
        "optionA": "存在语法错误,不能执行",
        "optionB": "[0,1]",
        "optionC": "[0, 1,2, 3,4,5]",
        "optionD": "[0, 2, 4]",
        "answer": "D",
        "analyzeContent": "重点考查range()函数的用法.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8856",
        "version": 0,
        "type": 1,
        "title": "在交互式编程环境下,执行all([0,1,2,3])语句后,返回的值是?( )",
        "optionA": "True",
        "optionB": "False",
        "optionC": "1",
        "optionD": "4",
        "answer": "B",
        "analyzeContent": "",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8857",
        "version": 0,
        "type": 1,
        "title": "在交互式编程环境下,输入float(\"1\")语句,执行的结果是?( )",
        "optionA": "1",
        "optionB": "1.0",
        "optionC": "'1'",
        "optionD": "传入参数错误,不能执行",
        "answer": "B",
        "analyzeContent": "",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8858",
        "version": 0,
        "type": 1,
        "title": "在交互式编程环境下,输入max([(1,2),(2,3),(3,4),(2,6)])语句,执行的结果是?( )",
        "optionA": "6",
        "optionB": "(3, 4)",
        "optionC": "(2,6)",
        "optionD": "(3,6)",
        "answer": "B",
        "analyzeContent": "",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8859",
        "version": 0,
        "type": 1,
        "title": "\"鸡兔同笼\"是一个古老的数学问题,可以应用枚举法求解,也可以利用二元一次方程进行求解.以下是使用计算机解决\"鸡兔同笼\"问题的几个步骤: ①编写Python程序,用计算机进行处理. ②设计\"鸡兔同笼\"求解算法. ③验证算法的功能和性能. ④分析问题,确定解题任务. 使用计算机解决\"鸡兔同笼\"问题,正确的步骤是?( )",
        "optionA": "②④①③",
        "optionB": "④①②③",
        "optionC": "④②③①",
        "optionD": "④②①③",
        "answer": "D",
        "analyzeContent": "使用计算机解决问题的一般过程是分析问题,设计算法,编写程序,验证算法等.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "枚举算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8860",
        "version": 0,
        "type": 3,
        "title": "若name为若干元素的列表对象,file为CSV文件,则file.write(','.join(name)+'\\n')语句可确保列表中每个写入CSV文件的数据,在表格软件打开时作为一个单元格存在.( )",
        "answer": "1",
        "analyzeContent": "列表中的数据元素以','合并成字符串,最后在末位加换行符.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8861",
        "version": 0,
        "type": 3,
        "title": "当程序发生异常时,我们可以用try...except...语句进行异常处理.但每个try模块只能有一个except语句块.( )",
        "answer": "0",
        "analyzeContent": "一个try语句模块可以设定多个except语句模块.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8862",
        "version": 0,
        "type": 3,
        "title": "float()函数可将整数转换为浮点类型数据,但不能将字符串中的数字转换为浮点类型数据.( )",
        "answer": "0",
        "analyzeContent": "内建函数float()用于将整数和字符串数字转换为浮点数.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8863",
        "version": 0,
        "type": 3,
        "title": "在执行语句x=input()的过程中,若键盘输入23并按下回车键,则x的值就被赋值为整数23.( )",
        "answer": "0",
        "analyzeContent": "input()用于接收键盘输入数据,默认为字符串类型,即键盘输入数字23,最终得到的是字符串\"23\",若要得到整数23,需用int()进行转换.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8864",
        "version": 0,
        "type": 3,
        "title": "input()用于接收键盘输入数据,默认为字符串类型,即键盘输入数字23,最终得到的是字符串\"23\",若要得到整数23,需用int()进行转换.",
        "answer": "0",
        "analyzeContent": "bin() 返回一个整数或者长整数的二进制表示.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8865",
        "version": 0,
        "type": 3,
        "title": "任何二维数据都可以用二维列表来表示.( )",
        "answer": "1",
        "analyzeContent": "二维数据可以用二维列表来表示.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8866",
        "version": 0,
        "type": 3,
        "title": "执行语句wq=[[0]*19]*19可以创建一个19行及19列的二维表.( )",
        "answer": "1",
        "analyzeContent": "执行[[0]*19]*19将创建19行X19列的空二维表.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8867",
        "version": 0,
        "type": 3,
        "title": "bool()函数用于将给定参数或表达式转换为布尔类型.语句bool(-1)返回的是False值.( )",
        "answer": "0",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8868",
        "version": 0,
        "type": 3,
        "title": "enumerate()函数用于将列表,元组或字符串等可遍历的数据对象组合为一个索引序列.( )",
        "answer": "1",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8869",
        "version": 0,
        "type": 3,
        "title": "十六进制9E的二进制数是8位.( )",
        "answer": "1",
        "analyzeContent": "十六进制转二进制,每1位十六进制数转换为4位二进制数,高位最左边的0可省略.E->1110,9->1001.共8位.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8870",
        "version": 0,
        "type": 4,
        "title": "百钱买百鸡是我国古代数学家张丘建在<算经>一书中提出的数学问题,问题的原文是:鸡翁一值钱五,鸡母一值钱三,鸡雏三值钱一.百钱买百鸡,问鸡翁,鸡母,鸡雏各几何?这个问题用现代文描述起来就是:公鸡5文钱1只,母鸡3文钱1只,小鸡3只1文钱.如果用100文钱买100只鸡,那么公鸡,母鸡和小鸡各应该买多少只呢?请完成下面程序中空白处的语句,实现对问题的求解,找出所有符合题目要求的买鸡方案,并输出. #设cock,hen,chicken分别为公鸡,母鸡和小鸡的数量,num为符合题目要求的方案数目. num=0 for cock in range(1,21): for hen in range(1,34): for chicken in ① : if ② == 100 and cock*5 + hen*3 + chicken/3 == ③ : num = ④ print(f'第 {num} 种方案是:公鸡{cock}只,母鸡{hen}只,小鸡{chicken}只')",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p>#设cock,hen,chicken分别为公鸡,母鸡和小鸡的数量,num为符合题目要求的方案数目.<br>num=0<br>for cock in range(1,21):<br>&nbsp; &nbsp; for hen in range(1,34):<br>&nbsp; &nbsp; &nbsp; &nbsp; for chicken in&nbsp;<span><strong>range(1,101)</strong></span>:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;<span><strong>cock+hen+chicken</strong></span>&nbsp;== 100 and cock*5 + hen*3 + chicken/3 ==&nbsp;<span><strong>100</strong></span>:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; num =&nbsp;<span><strong>num +1</strong></span><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(f'第 {num} 种方案是:公鸡{cock}只,母鸡{hen}只,小鸡{chicken}只')</p>",
        "analyzeContent": "评分标准: (1)range(1,101)或等效答案 ;(3分) (2)cock+hen+chicken或等效答案 ;(3分) (3)100或等效答案 ;(2分) (4)num +1或等效答案 .(2分)",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8871",
        "version": 1,
        "type": 4,
        "title": "妙妙学校举行了知识竞赛,有一,二,三 3 个班分别派出最优秀的 5 名代表参加此次竞赛.这 15 名代表的成绩存放于 \"jscj.csv \"文件中,现在妙妙读取了其中的数据,数据内容如图所示: 下列代码实现了读取竞赛分数信息,并输出各班平均分的情况,请你补全代码. import csv with open(\"/data/jscj.csv\",encoding=\"utf-8\")as f: rows=list( ① (f)) sum=[0,0,0] for row in rows[1:]: if int(row[0])==1: sum[0]+=int(row[2]) elif int( ② )==2: sum[1]+=int(row[2]) else: sum[2]+=int(row[2]) for i in range(1,4): print(str(i)+\" 班的平均分为: \",round( ③ /5,2))",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p class=\"MsoListParagraph\">import csv</p><p class=\"MsoListParagraph\">with open(\"/data/jscj.csv\",encoding=\"utf-8\")as f:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; rows=list(<span><strong>csv.reader</strong></span><span>(f)</span>)</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; sum=[0,0,0]</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; for row in rows[1:]:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if int(row[0])==1:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum[0]+=int(row[2])</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; elif int(<span><strong>row[0]</strong></span>)==2:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum[1]+=int(row[2])</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum[2]+=int(row[2])</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; for i in range(1,4):</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(str(i)+\"班的平均分为:\",round(<span><strong>sum[i-1]</strong></span><span><strong>)</strong></span><span>/5</span>,2))</p><p>本题主要考查文件的读取操作和计算思维.第一空为利用csv模块的reader对象读取文件内容;第二空属于分支结构的第二个分支,由第一个分支可知这里为讨论班级是否是2班,因此仍然是读取row[0]的数据;第三空是计算每个班的平均分,班级和循环变量i有关,sum中对应班级的索引和循环变量i相差1,故为sum[i-1].</p>",
        "analyzeContent": "评分标准: (1)csv.reader ;(1分) (2)row[0] ;(1分) (3)sum[i-1]. (2分)",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8872",
        "version": 1,
        "type": 4,
        "title": "若要生成一个由若干小写字母组成的互不重复的随机数组,已知小写字母的ASCII码值为97~122整数范围,并将其进行从小到大输出,如图所示,请将相关程序补充完整. import random  #random是随机数模块 n=int(input(\"请输入元素个数(不超过26):\")) a=[] #产生不重复的随机数组 for i in range(n): x=random.randint(97,122)  #产生97-122之间的随机整数 while chr(x) in a: x=random.randint(97,122) a.append( ① ) print(a) #将各个元素进行排序输出 for i in range(n-1): k=i for j in range( ② ,n): if a[k]>a[j]: k= ③ if i!=k: a[i],a[k]= ④ print(\"该随机数组从小到大排列为:\",a)",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p class=\"MsoListParagraph\">import random&nbsp; #random是随机数模块</p><p class=\"MsoListParagraph\">n=int(input(\"请输入元素个数(不超过26):\"))</p><p class=\"MsoListParagraph\">a=[]</p><p class=\"MsoListParagraph\">#产生不重复的随机数组</p><p class=\"MsoListParagraph\">for i in range(n):</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; x=random.randint(97,122)&nbsp; #产生97-122之间的随机整数</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; while chr(x) in a:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=random.randint(97,122)</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; a.append(<span><strong>chr(x)</strong></span>)</p><p class=\"MsoListParagraph\">print(a)</p><p class=\"MsoListParagraph\">#将各个元素进行排序输出</p><p class=\"MsoListParagraph\">for i in range(n-1):</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; k=i</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; for j in range(<span><strong>i+1</strong></span>,n):</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if a[k]&gt;a[j]:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; k=<span><strong>j</strong></span></p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp; if i!=k:</p><p class=\"MsoListParagraph\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[i],a[k]=<span><strong>a[k],a[i]</strong></span></p><p class=\"MsoListParagraph\">print(\"该随机数组从小到大排列为:\",a)</p><p>本题主要考查选择排序.程序的第一部分是产生不重复的字母组成的数组.由于x是97~122中的随机整数,故追加到a列表中的元素应在x的基础上将其转化为字符,故①空填写chr(x);在选择排序中,外循环控制排序趟数,内循环控制排序次数,不难看出,i的取值范围为0~n-2,因此j每次从i的下一个位置开始至最后,故②处填写i+1;根据选择排序的原理,在j位置上找到比k位置更小的元素,则k移至该位置,故③处填写为j;在某趟排序过程中,当全部元素比较结束,应在最小元素位置上,需要将其交换到相应的i位置上,故④位置答案应为a[k],a[i].</p>",
        "analyzeContent": "评分标准: (1)chr(x) ;(4分) (2)i+1 ;(4分) (3)j ;(4分) (4)a[k],a[i]. (4分)",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      }
    ],
    "calculatePercentage": 0.0,
    "completeTime": "1",
    "answerScore": 0.0,
    "title": "202303Python三级真题",
    "averageScore": 17
  },
  "code": 200,
  "msg": "操作成功"
}