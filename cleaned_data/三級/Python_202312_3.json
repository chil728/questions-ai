{
  "data": {
    "averageCompleteTime": 673.0,
    "subjectList": [
      {
        "id": "10391",
        "version": 4,
        "type": 1,
        "title": "1. 一个非零的二进制正整数,在其末尾添加两个\"0\",则该新数将是原数的?( )",
        "optionA": "10倍",
        "optionB": "2倍",
        "optionC": "4倍",
        "optionD": "8倍",
        "answer": "C",
        "analyzeContent": "二进制进位规则是逢二进一,因此末尾添加一个0,是扩大2倍,添加两个0,是扩大4倍.如二进制1->10->100,其大小分别为1,2,4.",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10392",
        "version": 4,
        "type": 1,
        "title": "2023年亚运会将在杭州举办.关于2023,若将其转换为二进制数,则末位数字为?( )",
        "optionA": "0",
        "optionB": "1",
        "optionC": "3",
        "optionD": "不确定",
        "answer": "B",
        "analyzeContent": "由于2023是单数(奇数),因此第一次除以2的余数将是1,根据十进制转二进制方法,该余数为二进制的最低位.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10393",
        "version": 4,
        "type": 1,
        "title": "二进制数10010,转换为十进制数和十六进制数分别为?( )",
        "optionA": "18和12",
        "optionB": "36和1A",
        "optionC": "50和1A",
        "optionD": "36和12",
        "answer": "A",
        "analyzeContent": "二进制转十进制是按权展开相加法,(10010)2=1*24+1*21=(18)10,二进制转十六进制是从低位开始,每四位二进制数转换为一位十六进制数,故为12.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10394",
        "version": 4,
        "type": 1,
        "title": "在Python中,int('1010',8)语句的作用是?( )",
        "optionA": "将十进制数1010转化为八进制数1010",
        "optionB": "将二进制数1010转化为八进制数12",
        "optionC": "将八进制字符串\"1010\"转化为八进制整数",
        "optionD": "将八进制数\"1010\"转化为十进制整数",
        "answer": "D",
        "analyzeContent": "int('1010',8)语句的作用是将八进制数\"1010\"转化为十进制整数.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10395",
        "version": 5,
        "type": 1,
        "title": "f = open('cai.csv', 'r')",
        "optionA": "[['肉','15'],['白菜','8']]",
        "optionB": "['肉','15','白菜','8']",
        "optionC": "['肉','15'],['白菜','8']",
        "optionD": "'肉','15','白菜','8'",
        "answer": "A",
        "analyzeContent": "从csv格式文件读取数据,得到的是列表对象.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10396",
        "version": 5,
        "type": 1,
        "title": "2023年中国航天事业再次刷新纪录,主要事件记录在abc.txt文件中,具体内容如下图所示,程序运行后s值是?( ) f = open(r'abc.txt','r') s = f.readline() print(s)",
        "optionA": "5月11日,天舟六号",
        "optionB": "5月30日,神舟十六",
        "optionC": "6月 7日,力箭一号",
        "optionD": "6月16日,长征二号",
        "answer": "A",
        "analyzeContent": "readline()是只读取一行,所以答案是A;而read()是读取全部内容.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10397",
        "version": 5,
        "type": 1,
        "title": "Python是强大的数据处理工具,能方便读写文件. 打开D:\\test.csv,文件的内容如下图所示, >>>f=open(r\"D:\\test.csv\",'r') >>>s1=f.read() >>>s2=f.read() >>>f.close() 运行上述程序,说法正确的是?( )",
        "optionA": ">>>s1 'hello python!'",
        "optionB": ">>>s1 'hello word!'",
        "optionC": ">>>s1 'hello python!\\nhello word!\\n'",
        "optionD": ">>>s2 'hello python!\\nhello word!\\n'",
        "answer": "C",
        "analyzeContent": "试题解析: read()函数的使用 >>>f=open(r\"D:\\test.csv\",'r') >>>s1=f.read() #从文件指针所在位置,读到文件结尾 >>>s2=f.read()#读取到了0个字节,因为文件指针已经读到文件尾部 >>>f.close() >>>s1 'hello word!\\nhello word!\\n' >>>s2",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10398",
        "version": 4,
        "type": 1,
        "title": "Python是强大的数据处理工具,目前受到大家青睐.下列说法错误的是?( )",
        "optionA": "数据文件格式丰富,常见的有一维数据,二维数据和多维数据",
        "optionB": "read()函数可以读取整个文件的内容",
        "optionC": "write()函数向文件中可以写入列表,字符串,整型等数据类型内容",
        "optionD": "python中有许多函数,能够直接对csv,excel,txt等文件内容读写,删除等操作",
        "answer": "C",
        "analyzeContent": "write()函数只能写入字符串类型的数据,如果要写入其他类型的数据,需要先将其转换为字符串类型.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10399",
        "version": 4,
        "type": 1,
        "title": "运行下面一段程序,说法正确的是?( ) f = open('yayun.txt', 'w') f.write('迎亚运,创未来\\nHeart to Heart\\n') f.close()",
        "optionA": "运行程序后,打印: '迎亚运,创未来\\nHeart to Heart\\n'",
        "optionB": "运行程序后,打印: 迎亚运,创未来",
        "optionC": "本段程序的功能是打开yayun.txt",
        "optionD": "如果python程序同目录下不存在yayun.txt,将创建yayun.txt",
        "answer": "D",
        "analyzeContent": "考察学生对文件写入的理解,如果没有yayun.txt,将创建一个新的文件yayun.txt,如果之前已有文件,则会覆盖文件内容. \\n换行,所以文件的内容是: 迎亚运,创未来 Heart to Hear",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10400",
        "version": 4,
        "type": 1,
        "title": "语句print(chr(ord('a')+5))的运行结果是?( )",
        "optionA": "66",
        "optionB": "e",
        "optionC": "f",
        "optionD": "g",
        "answer": "C",
        "analyzeContent": "ord('a')可以获取字符a的ascii码,将该ascii码加5后再转chr,即可获得从a开始,按顺序向后数5个的字符,即f.答案选择C.",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10401",
        "version": 4,
        "type": 1,
        "title": "表达式sum(map(int,'12345'))的返回值是?( )",
        "optionA": "[1, 2, 3, 4, 5]",
        "optionB": "['1', '2', '3', '4', '5']",
        "optionC": "10",
        "optionD": "15",
        "answer": "D",
        "analyzeContent": "map可以把序列'12345'中的每个字符转成int类型,结果是一个包含数字1,2,3,4,5的迭代器.sum可以对上述结果进行求和,所以结果是1+2+3+4+5的和,即15,选择D.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10402",
        "version": 4,
        "type": 1,
        "title": "下列选项中,结果与其他三项不同的是?( )",
        "optionA": "print(list(range(1, 10, 2)))",
        "optionB": "print(list(range(1, 11, 2)))",
        "optionC": "print(list('13579'))",
        "optionD": "print(list(map(int,['1', '3', '5', '7', '9'])))",
        "answer": "C",
        "analyzeContent": "range(1, 10, 2)可以生成包含第1个参数,不包含第2个参数,间隔为第3个参数的序列,所以range(1, 10, 2)生成的序列为1,3,5,7,9,用list函数转换为列表[1,3,5,7,9]. range(1, 11, 2)生成的序列也是1,3,5,7,9,不包含11,所以AB选项的结果相同. list('13579')可以将字符串中的每个字符保存到列表中,但是数据类型是字符串,与AB结果不同. D选项中,map函数将列表['1', '3', '5', '7', '9']中的每个元素都转成整数,最后保存成列表,与AB选项相同. 所以选择C",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "列表,核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10403",
        "version": 4,
        "type": 1,
        "title": "divmod(-9, 2)的结果是?( )",
        "optionA": "(-5, 1)",
        "optionB": "(-1, -4)",
        "optionC": "(-4, -1)",
        "optionD": "(1, -5)",
        "answer": "A",
        "analyzeContent": "divmod函数的结果是一个元组,包含两个数字,分别表示第1个参数除以第2个参数的整数部分和余数部分. -9除以2的整数部分是-5,余数为1,余数的符号与除数的符号相同.所以结果为(-5,1),选择A.",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10404",
        "version": 4,
        "type": 1,
        "title": "下列代码创建了4个变量,其中变量值最大的是?( ) a = round(3.65) b = int(max('123')) c = 7/2 d = abs(-3.9)",
        "optionA": "a",
        "optionB": "b",
        "optionC": "c",
        "optionD": "d",
        "answer": "A",
        "analyzeContent": "round函数的作用是四舍五入取整,所以round(3.65)的结果是4; max('123'))的结果是'3',转整数后是3; 7/2的结果是3.5; abs(-3.9)将负数变成正数,结果是3.9; 综上所述,4最大,所以选择A.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10405",
        "version": 4,
        "type": 1,
        "title": "bool(0)的结果是?( )",
        "optionA": "True",
        "optionB": "False",
        "optionC": "1",
        "optionD": "0",
        "answer": "B",
        "analyzeContent": "0的布尔值是False.",
        "examDots": "12,",
        "difficultyLevel": "1",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10421",
        "version": 4,
        "type": 1,
        "title": "语句set('2023')的返回值是?( )",
        "optionA": "{2, 0, 2, 3}",
        "optionB": "{0, 2, 3}",
        "optionC": "{'2', '0', '2', '3'}",
        "optionD": "{'0', '2', '3'}",
        "answer": "D",
        "analyzeContent": "set函数可以去掉序列中的重复元素,所以选择D.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10423",
        "version": 4,
        "type": 1,
        "title": "a=[1,2,3,4,5],则sum(a)的值是?( )",
        "optionA": "'[1,2,3,4,5]'",
        "optionB": "'15'",
        "optionC": "15",
        "optionD": "'12345'",
        "answer": "C",
        "analyzeContent": "sum()求列表a各元素的和,和为15.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10424",
        "version": 4,
        "type": 1,
        "title": "表达式str([1,2,3])的返回值是?( )",
        "optionA": "['1', '2', '3']",
        "optionB": "'[1, 2, 3]'",
        "optionC": "['123']",
        "optionD": "str函数只能将数字转换成字符串,表达式中的参数是一个列表,运行报错",
        "answer": "B",
        "analyzeContent": "如果str中的参数是一个列表,str函数会将列表看做一个字符串返回结果.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "列表,字符串,核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10425",
        "version": 4,
        "type": 1,
        "title": "下列选项中,对help函数的说法错误的是?( )",
        "optionA": "可以使用help函数查看某个数据类型的帮助信息",
        "optionB": "可以使用help函数查看某个函数的帮助信",
        "optionC": "可以使用help函数查看某个模块的帮助信息",
        "optionD": "对于自己定义的变量,不可以使用help函数查看自定义变量的帮助信息",
        "answer": "D",
        "analyzeContent": "help函数可以获取某个变量,数据类型,函数,模块的帮助信息,所以选项D说法错误,选择D.",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10426",
        "version": 4,
        "type": 1,
        "title": "通过input()函数输入的数据类型是?( )",
        "optionA": "int",
        "optionB": "float",
        "optionC": "str",
        "optionD": "list",
        "answer": "C",
        "analyzeContent": "使用input函数输入的数据类型是string字符串类型.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数,字符串",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10427",
        "version": 4,
        "type": 1,
        "title": "运行下面程序,错误的输入和输出数据是?( ) try: x=int(input()) y=int(input()) m=divmod(x,y) print(m) except: print('error') else: print('right') finally: print('OK')",
        "optionA": "输入 1 0 输出 error OK",
        "optionB": "输入 0 5 输出 (0, 0) right OK",
        "optionC": "输入 5 1 输出 (5, 0) right OK",
        "optionD": "输入 5 0 输出 0 right OK",
        "answer": "D",
        "analyzeContent": "考核 try...except...else...finally...格式.",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10428",
        "version": 4,
        "type": 1,
        "title": "运行下面程序,错误的输入和输出数据是?( ) try: x=eval(input()) c=abs(x) print(c) except NameError: print('NameError!') except: print('Other error!')",
        "optionA": "输入 0 输出 Other error!",
        "optionB": "输入 -2.5 输出 2.5",
        "optionC": "输入 6 输出 6",
        "optionD": "输入 abc 输出 NameError!",
        "answer": "A",
        "analyzeContent": "考核 try...except...格式和 abs()函数.",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理,核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10429",
        "version": 4,
        "type": 1,
        "title": "以下关于算法的描述错误的是?( )",
        "optionA": "算法可以用自然语言,流程图,伪代码,编程语言等多种方式进行表示",
        "optionB": "顺序结构,选择结构,循环结构是算法的3种基本结构",
        "optionC": "算法可以没有输出,但必须有输入",
        "optionD": "算法的执行步骤是有限的",
        "answer": "C",
        "analyzeContent": "算法可以没有输入,但必须有输出.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "算法基础",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10430",
        "version": 4,
        "type": 1,
        "title": "用冒泡排序对4,5,6,3,2,1进行从小到大排序,第二趟排序后的状态是?( )",
        "optionA": "4 5 3 2 1 6",
        "optionB": "4 3 2 1 5 6",
        "optionC": "3 2 1 4 5 6",
        "optionD": "2 1 3 4 5 6",
        "answer": "B",
        "analyzeContent": "冒泡排序的基本思想是从头到尾依次比较相邻的两个元素,如果前一个元素大于后一个元素,则交换它们的位置.第一趟排序后,最大的元素6已经排到了最后面,数组变为4,5,3,2,1,6.第二趟排序时,从头到尾依次比较相邻的元素,发现4比5小,因此不需要交换它们的位置;5比3大,需要交换它们的位置,数组变为4,3,5,2,1,6;5比2大,需要交换它们的位置,数组变为4,3,2,5,1,6;5比1大,需要交换它们的位置,数组变为4,3,2,1,5,6;最后,6比5大,不需要交换它们的位置,数组变为4,3,2,1,5,6.因此,第二趟排序后的状态为4,3,2,1,5,6,选项B正确.",
        "examDots": "12,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "冒泡算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10431",
        "version": 4,
        "type": 1,
        "title": "在对n个元素进行直接插入排序的过程中,一般共需要进行几趟?( )",
        "optionA": "2",
        "optionB": "n-1",
        "optionC": "n",
        "optionD": "n+1",
        "answer": "B",
        "analyzeContent": "直接插入排序的基本思想是将一个记录插入到已经排好序的有序表中,从而得到一个新的,记录数增加1的有序表.在排序过程中,需要进行n-1趟插入操作,每一趟插入操作都会将一个记录插入到已经排好序的有序表中,因此共需要进行n-1趟插入操作.因此,选项B正确.",
        "examDots": "12,",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "直接插入排序",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10432",
        "version": 4,
        "type": 3,
        "title": "十六进制数转换成十进制数,其位数一定变多.( )",
        "answer": "0",
        "analyzeContent": "0~9范围内的数字在转换过程中,其位数不变.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10433",
        "version": 4,
        "type": 3,
        "title": "表达式int(\"ob110\",8)的结果应是72.( )",
        "answer": "0",
        "analyzeContent": "该表达式是错误的,\"0b\"表示二进制,\"8\"表示八进制,矛盾.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10434",
        "version": 4,
        "type": 3,
        "title": "在Python中,readlines()每次按行读取文件内容,通常将读取到的内容放到一个字符串变量中,返回str类型数据.( )",
        "answer": "0",
        "analyzeContent": "readlines()每次按行读取全部文件内容,通常将读取到的内容放到一个列表中,返回list类型数据.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10435",
        "version": 4,
        "type": 3,
        "title": "下列程序的功能是将列表对象输出到CSV文件.( ) shuig=['苹果','香蕉','桃子','西瓜'] f=open('shuiguo.csv','w') f.write(','.join(shuig)+'\\n') f.close()",
        "answer": "1",
        "analyzeContent": "write()方法将shuig列表转化为字符串后写入到shuiguo.csv文件中.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10436",
        "version": 4,
        "type": 3,
        "title": "CSV格式存储数据采用逗号分隔元素,也可以存储二维数据.( )",
        "answer": "1",
        "analyzeContent": "CSV格式可以储存二维数据.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10437",
        "version": 4,
        "type": 3,
        "title": "以下代码的运行结果是False.( ) a = any([None,[],(),[{}]]) print(a)",
        "answer": "0",
        "analyzeContent": "[{}]是包含一个空字典的列表,列表不为空,所以any的结果是True.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10438",
        "version": 4,
        "type": 3,
        "title": "range(6)和range(0,6)的结果相同.( )",
        "answer": "1",
        "analyzeContent": "range(6)和range(0,6)的运行效果相同,省略了第1个参数.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10439",
        "version": 4,
        "type": 3,
        "title": "运行下列代码后,列表a中保存的元素是从小到大按顺序排列的.( ) a = [5, 6, 4, 8, 2, 7, 3, 1] sorted(a)",
        "answer": "0",
        "analyzeContent": "sorted()函数的作用是将序列排序,默认从小到大排序,但是不会修改原来序列中的元素排序,所以列表a不变,还是乱序的.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10440",
        "version": 4,
        "type": 3,
        "title": "使用min函数可以获取多个数字中的最小值.( )",
        "answer": "1",
        "analyzeContent": "min函数的作用是计算序列中的最小值.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10441",
        "version": 4,
        "type": 3,
        "title": "try: x=int(input()) y=int(input()) n=x%y print(n) except ValueError: print('ValueError!') except ZeroDivisionError: print('ZeroDivisionError!') except: print('Other error!') 当程序输入: 0 0 程序的运行结果是: Other error!",
        "answer": "0",
        "analyzeContent": "正确运行结果是:ZeroDivisionError! 考核try...except...except...格式 和识记关键字\"ValueError\"和\"ZeroDivisionError\".",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10442",
        "version": 4,
        "type": 4,
        "title": "学校图书馆为了方便查找管理书籍,给每本书编写了号码,[8,9,10,12,13,14,16,17,25,27],输入号码提示这本书号码排第几. 例如:输入 12 ,输出:要查找的书号 12 排第 4 . 请完善程序: lst=[8,9,10,12,13,14,16,17,25,27] hm=int(input(' 请输入书本号码 ')) ① i,j=0,n-1 b=-1 while ② : m=(i+j)//2 if ③ : b=m break elif hm>lst[m]: ④ else: j=m-1 if b==-1: print('要查找的书号['+str(hm)+']不在列表lst中.') else: print('要查找的书号['+str(hm)+']排第'+ ⑤ )",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p class=\"p\">lst=[8,9,10,12,13,14,16,17,25,27]<br>hm=int(input('请输入书本号码'))<br><span><strong>n=len(lst)</strong></span><br>i,j=0,n-1<br>b=-1<br>while&nbsp;<span><strong>i&lt;=j</strong></span>:<br>&nbsp; &nbsp; m=(i+j)//2<br>&nbsp; &nbsp; if&nbsp;<span><strong>hm==lst[m]</strong></span>:<br>&nbsp; &nbsp; &nbsp; &nbsp; b=m<br>&nbsp; &nbsp; &nbsp; &nbsp; break<br>&nbsp; &nbsp; elif hm&gt;lst[m]:<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><strong>i=m+1</strong></span><br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; j=m-1<br>if b==-1:<br>&nbsp; &nbsp; print('要查找的书号['+str(hm)+']不在列表lst中.')<br>else:<br>&nbsp; &nbsp; print('要查找的书号['+str(hm)+']排第'+<span><strong>str(b+1)</strong></span>)</p>",
        "analyzeContent": "评分标准: (1)n=len(lst)或等效答案;(3分) (2)i<=j或等效答案;(3分) (3)hm==lst[m]或等效答案;(3分) (4)i=m+1或等效答案;(3分) (5)str(b+1))或等效答案.(4分)",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10443",
        "version": 5,
        "type": 4,
        "title": "有一个\"/data/书籍存单.csv\"文件,内容如下图所示.小明编写代码,想查询小说<封神榜>的价格,请补充代码中缺失的部分. with open('/data/书籍存单.csv', 'r', encoding='utf-8') as f: for line in f.readlines(): a = ① .split(\",\") if a[0] == \"封神榜\" : print( ② )",
        "answer": "<p><strong><span>参考程序:</span></strong></p><p>with open('/data/书籍存单.csv', 'r', encoding='utf-8') as f:<br>&nbsp; &nbsp; for line in f.readlines():<br>&nbsp; &nbsp; &nbsp; &nbsp; a =<strong><span>&nbsp;line</span></strong>.split(\",\")<br>&nbsp; &nbsp; &nbsp; &nbsp; if a[0] == \"封神榜\" :<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(<strong><span>a[1]</span></strong>)</p>",
        "analyzeContent": "试题解析: 评分标准: (1)line或等效答案;(2分) (2)a[1]或等效答案.(2分) 本题考查列表中数据位置的问题.a[1]对应的就是\"价格\".",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "10444",
        "version": 5,
        "type": 4,
        "title": "当我们过马路的时候,经常会遇到红绿灯,你知道这些信号灯的时长是怎么来的吗?若要用python分析计算人行马路最短绿灯时长,我们需要知道马路的宽度s,行人的步行速度v以及行人的反应时长t0,因为绿灯的最短时长计算公式为t=s/v+t0. 不同的人有不同的行走速度.通常在正常成人,老人,小孩的步行速度中,应选取 老人 或者 小孩 的数据进行计算比较合理. 用Python模拟编写绿灯最短时长程序和测试输出结果(测试输入马路宽度为15)分别如下,请补全划线处代码: v=1.2    #设置行走速度 t0=1      #设置行人反应时长 s=int(input(\"请输入马路的宽度(米):\")) t= ① print(t) #观察发现,在实际生活中,绿灯显示时长不可能为小数,因此若要上述输出结果正常,可以修改print(t)语句,那么你会如何修改?请在下方填入你的代码. if t>int(t): print( ② ) elif t==int(t): print( ③ )",
        "answer": "<p><br></p><table tag=\"question\" is_child_question=\"\" id=\"question_ea8fca34-7020-464b-a571-f79632f323b4\" question_uid=\"ea8fca34-7020-464b-a571-f79632f323b4\" question_type_code=\"program\" question_type_name=\"编程题\" question_score=\"10.00\" parent_question_uid=\"\" tag_question=\"\" class=\"layui-table\"><tbody><tr><td>标准答案:<p class=\"MsoNormal\" align=\"left\"><span><strong>参考程序:</strong></span></p><p class=\"MsoNormal\" align=\"left\">v=1.2&nbsp; &nbsp; #设置行走速度</p><p class=\"MsoNormal\" align=\"left\">t0=1&nbsp; &nbsp; &nbsp; #设置行人反应时长<br>s=int(input(\"请输入马路的宽度(米):\"))<br>t=<span><strong>s/v+t0&nbsp;</strong>&nbsp;&nbsp;</span><br><span></span></p><p class=\"MsoNormal\" align=\"left\"><span>if t&gt;int(t):</span></p><p class=\"MsoNormal\" align=\"left\"><span>&nbsp;&nbsp;&nbsp;<strong><span>&nbsp;<span>print(</span><span><span>int(t)+1</span>)</span></span></strong>&nbsp;&nbsp;</span></p><p class=\"MsoNormal\" align=\"left\"><span>elif t==int(t):</span></p><p class=\"MsoNormal\" align=\"left\"><span>print(<span><strong>int(t)</strong></span>)</span></p></td></tr></tbody></table>",
        "analyzeContent": "试题解析: 评分标准: (1)s/v+t0或等效答案;(4分) (2)int(t)+1 或等效答案;(3分) (3)int(t)或等效答案.(3分) 解析:(1)处根据题目给出的条件可知,绿灯时长t=s/v+t0,显然此处已知条件都已具备,且根据输出结果来看,计算的结果为浮点类型,因此将公式表达为Python表达式即可,即s/v+t0. (2)处由于绿灯的显示时长一般为整数,若计算的结果为13.5,那么实际时长应从14开始, 若结果恰好为13.0,那么实际显示数据应是13,即在计算公式保持不变的情况下,我们应使得计算结果向上取整.从分支语句来看,划线处可以使用int(t)+1替代原来的print(t)语句. (3)处无需加1.",
        "examDots": "12,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      }
    ],
    "calculatePercentage": 0.0,
    "completeTime": "1",
    "answerScore": 0.0,
    "title": "202312Python三级真题",
    "averageScore": 19
  },
  "code": 200,
  "msg": "操作成功"
}