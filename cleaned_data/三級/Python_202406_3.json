{
  "data": {
    "averageCompleteTime": 774.0,
    "subjectList": [
      {
        "id": "1815935589329575938",
        "version": 0,
        "type": 1,
        "title": "现有一组初始记录无序的数据\"5,8,6,3,9,2\",使用冒泡排序算法,按从小到大的顺序排列,第一轮排序的结果为?( )",
        "optionA": "5,6,3,8,9,2",
        "optionB": "5,6,3,8,2,9",
        "optionC": "5,6,8,3,2,9",
        "optionD": "5,8,3,6,9,2",
        "answer": "B",
        "analyzeContent": "冒泡排序的思想:依次比较相邻的两个数将小数放在前面,大数放在后面.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "冒泡算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815935758330286082",
        "version": 0,
        "type": 1,
        "title": "列表l=[9,2,8,6,3,4],采用选择排序进行升序排序,第二轮排序后的结果是?( )",
        "optionA": "2,3,4,6,8,9",
        "optionB": "2,3,4,6,9,8",
        "optionC": "2,3,8,6,4,9",
        "optionD": "2,3,8,6,9,4",
        "answer": "D",
        "analyzeContent": "选择排序的思想:第1轮排序从第1个到第n元素中找到最小元素,如果最小元素不是第1个元素,就交换它和第1个元素的位置,所以第1轮排序的结果是:2,9,8,6,3,4;第2轮排序在第2个元素到第n个元素中找到最小元素,如果最小元素不是第2个元素,就交换它和第2个元素的位置,第2轮排序的结果是:2,3,8,6,9,4.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815935899330584577",
        "version": 0,
        "type": 1,
        "title": "经典的韩信点兵问题出自<孙子算经>,译文为:有一些不清楚数量的物品,如果三个为一组的数剩下两个,如果五个为一组的数剩下三个,如果七个为一组的数剩下两个,问这些物品共有多少个.解决此问题可以用哪种算法?( )",
        "optionA": "解析算法",
        "optionB": "枚举算法",
        "optionC": "排序算法",
        "optionD": "查找算法",
        "answer": "B",
        "analyzeContent": "枚举算法的思想:罗列每一个可能的解,并进行条件判断,确定哪些为真正的解",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "枚举算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815936054997602306",
        "version": 0,
        "type": 1,
        "title": "运行下列程序段: try: a=6 b = int(input('输入一个数')) m=a/b print('商是:',m) except: print('输入错误!') else: print('正确!') finally: print('程序结束!') 下面说法正确的是?( )",
        "optionA": "当输入0时程序出错无法运行",
        "optionB": "当输入1时,输出结果为:商是:6",
        "optionC": "当输入6时,输出结果为:商是:1.0 正确!",
        "optionD": "不管输入什么内容都会输出:程序结束!",
        "answer": "D",
        "analyzeContent": "当try语句块正确时,执行try代码块结束,将执行else语句块,最后执行finally语句块.当输入有误,则执行except语句块和finally语句块.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815936704079110145",
        "version": 0,
        "type": 1,
        "title": "Python的异常处理try....except...else...finally机制中,以下表述哪项是错误的?( )",
        "optionA": "当碰到错误语句时,try代码块的剩余代码将会被忽略,执行except语句块",
        "optionB": "当try语句块正确时,try代码块执行完毕,不执行else语句块,执行finally语句",
        "optionC": "不管try代码块正确与否,finally代码都要执行",
        "optionD": "except程序段中语句可能会被执行,也可能不会被执行",
        "answer": "B",
        "analyzeContent": "当try语句块正确时,try代码块执行完毕,执行else语句块.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "异常处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815936819569270785",
        "version": 0,
        "type": 1,
        "title": "十进制数25,转化为二进制数为?( )",
        "optionA": "10011",
        "optionB": "11001",
        "optionC": "11000",
        "optionD": "11011",
        "answer": "B",
        "analyzeContent": "十进制与二进制转化问题.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815936916288098305",
        "version": 0,
        "type": 1,
        "title": "八进制数30,转化为十进制数为?( )",
        "optionA": "24",
        "optionB": "30",
        "optionC": "64",
        "optionD": "192",
        "answer": "A",
        "analyzeContent": "八进制与十进制转化问题.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815937040164114433",
        "version": 0,
        "type": 1,
        "title": "十进制数90,转化为十六进制数为?( )",
        "optionA": "50",
        "optionB": "1A",
        "optionC": "A5",
        "optionD": "5A",
        "answer": "D",
        "analyzeContent": "十进制与十六进制转化问题.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815937152672505857",
        "version": 0,
        "type": 1,
        "title": "下面转化结果与十六进制数3C不相等的是?( )",
        "optionA": "十进制数60",
        "optionB": "八进制数74",
        "optionC": "二进制数111110",
        "optionD": "hex(60)",
        "answer": "C",
        "analyzeContent": "与十六进制数3C相等的二进制数为111100.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "编码,数制",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815937287240732673",
        "version": 0,
        "type": 1,
        "title": "用python存储某餐馆菜单信息如下: menu=['花雕醉湖蟹','三鲜汤','西湖醋鱼','酸辣土豆丝'] price=[78,36,118,28] for i in range(len(menu)): print(menu[i]+':'+str(price[i])) 关于该段程序,下列说法正确的是?( )",
        "optionA": "menu和price组成了一个二维数组",
        "optionB": "该段程序一共输出4行结果",
        "optionC": "若menu和price的元素数量不相同,程序也不受影响",
        "optionD": "程序中len(menu)改成len(price),其他不变,结果将不一样",
        "answer": "B",
        "analyzeContent": "menu和price是两个列表形式表现的一维数组,相互独立,故A错;程序的功能是遍历数组中的每个位置,输出该位置上对应的菜名与价格,由于两个数组都是四个元素,故输出四次,共4行,B正确;只有两个数组(列表)元素个数相同,程序才能对位输出,否则将发生溢出错误,C错;由于len(menu)和len(price)值相同,故修改后结果不受影响,D不正确.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理,列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815937659858505729",
        "version": 0,
        "type": 1,
        "title": "有如下程序: color=['红','橙','黄','绿','青','蓝','紫'] f=open('color.csv','w') f.write(';'.join(color)+'\\n') f.close() 下列说法正确的是?( )",
        "optionA": "这段程序没有输出",
        "optionB": "这段程序没有输出",
        "optionC": "f.close()语句可有可无",
        "optionD": "color.csv的结果内容是:红;橙;黄;绿;青;蓝;紫",
        "answer": "D",
        "analyzeContent": "算法程序必有输出,这段程序的输出是color.csv文件,A错;color列表可理解成一个一维数组,B错;程序中文件没有用with语句打开,处理结束后不会自动关闭相应的文件,因此需要f.close()语句关闭文件,C错;程序功能是将各元素以\";\"的形式连接在一起并输出,D正确.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "算法基础,列表,文件和数据处理",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815987846867374082",
        "version": 0,
        "type": 1,
        "title": "已知二维列表gz中存储了某单位部门部分人员的工资数据,如下所示:gz=[['a1','李明',6200],['a2','吴海',5600],['a3','殷小飞',6536]],那么想要查询'殷小飞'的工资情况可使用?( )",
        "optionA": "gz(3)",
        "optionB": "gz[3]",
        "optionC": "gz(2,2)",
        "optionD": "gz[2][2]",
        "answer": "D",
        "analyzeContent": "这个二维列表中,'殷小飞'相关数据在第三项子列表中,由于Python中列表索引从0开始,且由[]表示,故应选择gz[2]得到['a3','殷小飞',6536],工资6536仍然是该项中的第三项,因此最后可由gz[2][2]得到.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理,列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815988014852001793",
        "version": 0,
        "type": 1,
        "title": "有关数据处理,下列说法正确的是?( )",
        "optionA": "一维数据通常采用列表形式来表示",
        "optionB": "二维数据只能通过CSV文件进行存储处理",
        "optionC": "列表不能表示二维数据",
        "optionD": "存储在列表中的数据,不可以写入到CSV文件中",
        "answer": "A",
        "analyzeContent": "在Python中,通常采用列表来表示一维数据,二维数据也可以用二维列表来表示,A正确,B错误;CSV文件可存储一,二维数据,列表也是,C错误;列表中的数据可以通过遍历逐个写入CSV文件,D错误.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理,列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815988203689398274",
        "version": 0,
        "type": 1,
        "title": "观察下列程序代码并思考回答: word=['I','really','like','the','cat','!'] f=open('words.csv','w') f.write(' '.join(word)) f.close() 有关该段程序,下列说法正确的是?( )",
        "optionA": "'words.csv'文件需事先创建好,否则open()语句会出错",
        "optionB": "变量f表示该CSV文件对象",
        "optionC": "最终f对象中的内容是:I.really.like.the.cat.!",
        "optionD": "程序的主要目的是写入内容,因此f.close()最好不写",
        "answer": "B",
        "analyzeContent": "'w'参数表示只写,默认创建一个新文件,若文件已存在则覆盖写入数据,A错误;f.write(' '.join(word))表示将word中的数据元素以空格符进行连接成字符串,并写入到f文件对象中,C错误;未妥善关闭文件容易导致数据丢失或受损,D错误.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "文件和数据处理,字符串",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815990338727104513",
        "version": 0,
        "type": 1,
        "title": "下面代码中,运行结果不等于9,会出错的,是哪项?( )",
        "optionA": "sum([3,2,1],int('3'))",
        "optionB": "sum([3,2,1],max(1,2,3))",
        "optionC": "sum([3,2,1],[3])",
        "optionD": "sum([1,2,3,2,1])",
        "answer": "C",
        "analyzeContent": "考查学生对常见内置函数的掌握情况.ABD三个选项运行结果都等于9,C末尾的3是列表中的元素,不能直接参与计算,所以会报错.",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数,列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815990487748354049",
        "version": 0,
        "type": 1,
        "title": "小明想得到整数9除以2的商和余数,所以他写下了表达式: x = divmod(9, 2)请问,表达式中的 x 是什么类型?( )",
        "optionA": "浮点数",
        "optionB": "整数",
        "optionC": "列表",
        "optionD": "元组",
        "answer": "D",
        "analyzeContent": "本题考查学生对divmod()函数的理解,divmod()函数返回参数的商和余数,商和余数以元组的形式返回,所以x的类型,是元组.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数,元组",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815991380048781313",
        "version": 0,
        "type": 1,
        "title": "下面两行代码运行的结果是?( ) x=['a','b','c','d'] print(list(enumerate(x)) )",
        "optionA": "( {'a','b','c','d'} )",
        "optionB": "[(0, 'a'), (1, 'b'), (2, 'c'), (3, 'd')]",
        "optionC": "['a','b','c','d']",
        "optionD": "(['a','b','c','d'] )",
        "answer": "B",
        "analyzeContent": "enumerate() 函数用于将一个可遍历的数据对象组合为一个索引序列,同时列出数据和数据下标,所以正确答案为选项 B.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815991591047057409",
        "version": 0,
        "type": 1,
        "title": "min()函数用于获取参数中的最小值,如果 a = min('654') ,请问下面表达式中,正确的是?( )",
        "optionA": "print(max(chr(a),3,2))",
        "optionB": "print(max(bin(a),3,2))",
        "optionC": "print(max(float(a),3,2))",
        "optionD": "print(max(hex(a),3,2))",
        "answer": "C",
        "analyzeContent": "正确答案选C .因为 min('654') 得到的是一个字符,而chr(),bin(),hex()三个函数的参数都必须是整数,所以唯一正确的是选项C ,float()函数可以将字符转换成浮点数.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815991782731325441",
        "version": 0,
        "type": 1,
        "title": "小明编写了如下3行代码,请问代码运行后print()打印出的结果是?( ) a = set('大家好我是小明') b = set('你好我是大明') print(a & b)",
        "optionA": "{'大', '好', '我', '是', '明'}",
        "optionB": "{'大','家','好','我','是','小','明','你','好','我','是','大','明'}",
        "optionC": "{'家', '小', '你'}",
        "optionD": "{'好', '我', '是', '大', '明', '家', '小', '你'}",
        "answer": "A",
        "analyzeContent": "本题是求两串字符的交集,选项A中的5个字,在两个字符串中都存在,所以答案是选项A.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "字符串",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815993194125381634",
        "version": 0,
        "type": 1,
        "title": "如下3行代码,运行之后打印出来的结果是?( ) b = (6,9,2,7,5) b = sorted(b,reverse=1) print(b)",
        "optionA": "[2, 5, 6, 7, 9]",
        "optionB": "(2, 5, 6, 7, 9)",
        "optionC": "(9, 7, 6, 5, 2)",
        "optionD": "[9, 7, 6, 5, 2]",
        "answer": "D",
        "analyzeContent": "本题考查学生对sorted()排序函数的理解与掌握.题中的两个要点.一:虽然原题中变量b是元组,但排序后打印出来是列表;二:sorted()函数的参数reverse=1为降序排列,reverse=0为升序排列,所以本题正确答案为D.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815993331867766785",
        "version": 0,
        "type": 1,
        "title": "执行下面代码: print(bool(4)+3) 结果应该是?( )",
        "optionA": "会报错!",
        "optionB": "6",
        "optionC": "4",
        "optionD": "7",
        "answer": "C",
        "analyzeContent": "bool函数是int子类型,如果有参数,会返回True也就是整数1,所以正确答案是选项C,也就是数字4.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815993500615757825",
        "version": 0,
        "type": 1,
        "title": "小明编写了如下4行代码,请问,代码中两次print()函数打印的结果,是什么状态?( ) a = [9,3,7,5,8,4] print(sorted(a)) a.sort() print(a)",
        "optionA": "第1次print(sorted(a)),a会降序排列;第2次print(a),a也会降序排列.",
        "optionB": "第1次print(sorted(a)),a会降序排列;第2次print(a),a会升序排列.",
        "optionC": "第1次print(sorted(a)),a会升序排列;第2次print(a),a也会升序排列.",
        "optionD": "第1次print(sorted(a)),a会升序排列;第2次print(a),a会降序排列.",
        "answer": "C",
        "analyzeContent": "内置函数sorted()默认将列表中的数据升序排列;列表的sort()方法,默认也是将列表的值进行升序排列,所以正确答案是C.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数,列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815993822848798721",
        "version": 0,
        "type": 1,
        "title": "有如下两行代码,请问代码运行之后,打印出的结果是?( ) a = [1,2,3,4,3,2,3,4,2,1,4] print(list(set(a)))",
        "optionA": "[1,2,3,4,3,2,3,4,2,1,4]",
        "optionB": "{[1,2,3,4,3,2,3,4,2,1,4]}",
        "optionC": "{[1,2,3,4]}",
        "optionD": "[1,2,3,4]",
        "answer": "D",
        "analyzeContent": "set()函数将列表a转为集合之后,会自动去除重复的元素,再次使用list()函数将集合转为列表,那么打印出来的结果就是选项D .",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "核心内置函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815994717557137410",
        "version": 0,
        "type": 1,
        "title": "下列四个表达式,值最大的选项是?( )",
        "optionA": "round(5.2)",
        "optionB": "pow(1,8)",
        "optionC": "max(2,3,4,5,6)",
        "optionD": "len([2,3,4,5,6])",
        "answer": "C",
        "analyzeContent": "round(5.2) 四舍五入结果是5;len([2,3,4,5,6])计算元素个数,结果也是5;max(2,3,4,5,6)找出元素中最大的数,结果是6;pow(1,8)计算1的8次方,结果是1.所以本题答案是选项C.",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "元组,列表",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815994900969857025",
        "version": 0,
        "type": 1,
        "title": "下面两行代码执行结果是?( ) a = '0123456789' print(min(a)+max(a))",
        "optionA": "9",
        "optionB": "0",
        "optionC": "09",
        "optionD": "a为字符串,不能获取大小值,代码会报错!",
        "answer": "C",
        "analyzeContent": "a='0123456789',min(a)='0',max(a)='9',所以结果为两个字符串相连,正确答案为:09,也就是选项C.",
        "difficultyLevel": "2",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "字符串",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995093844926466",
        "version": 0,
        "type": 3,
        "title": "bin(10)的运行结果'0b1010';int(\"1101\",2)的运行结果是13.( )",
        "answer": "1",
        "analyzeContent": "考核bin()将十进制整数转换为二进制数字符串,int()将二进制数字字符串转换为十进制数.",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995194012913665",
        "version": 0,
        "type": 3,
        "title": "oct(10)和hex(10)的结果相等.( )",
        "answer": "0",
        "analyzeContent": "oct(10)='0o12' 是将十进制整数转换为八进制数字符串. hex(10)='0xa' 是将十进制整数转换为十六进制数字符串.",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995280029700098",
        "version": 0,
        "type": 3,
        "title": "关于文件的读取,readline()表示每次读取文件的一行,而使用read()和readlines()的结果是相同的.( )",
        "answer": "0",
        "analyzeContent": "readline()表示每次读取文件中的一行;read()表示每次读取整个文件,且整个文件内容以字符串形式返回,而readlines()表示每次按行读取整个文件内容,以列表类型返回数据.",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995407465619458",
        "version": 0,
        "type": 3,
        "title": "向CSV文件中写入数据时,write()函数只能写入一行,而writelines()可以写入多行.( )",
        "answer": "0",
        "analyzeContent": "write()函数的参数是字符串,可向文件中写入一行或多行数据(字符串中包含换行符)",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995451923419137",
        "version": 0,
        "type": 3,
        "title": "有如下程序代码: import csv with open (\"fruits.csv\",'w')as f: wrt=csv.writer(f) wrt.writerows(['苹果','香蕉','西瓜','哈密瓜','桔子','香梨']) 这段代码中,writerows()实现了向'fruits.csv'进行多行输入.( )",
        "answer": "1",
        "analyzeContent": "writerow()函数以单行形式写入文件,writerows()以多行方式写入文件.",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995520137207809",
        "version": 0,
        "type": 3,
        "title": "请仔细阅读下面6行代码,请判断,代码运行后打印的结果应该是No,对吗?( ) a = all([1,2,3]) b = any([3,2,1]) if a == b : print('Yes') else: print('No')",
        "answer": "0",
        "analyzeContent": "all()与any()两个函数,只要内部元素不为空,则都返回True,所以代码运行结果应该为Yes.判断应该选择\"错误\".",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995616857477122",
        "version": 0,
        "type": 3,
        "title": "max()函数用于获取参数列表中的最大值,所以表达式 max(['1', '2' , '3'])与表达式max([1, 2, 3])运行结果是相同的. 请判断是否正确?( )",
        "answer": "0",
        "analyzeContent": "max(['1', '2' , '3'])运行结果是'3', max([1,2,3])运行结果是3,两个表达式运行的结果不同.",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995666715549698",
        "version": 0,
        "type": 3,
        "title": "有如下所示6行代码,变量a与变量b都有5个元素.代码中两次print()打印出的结果可能不会一样!请判断对否?( ) a = {'1','2','3','4','5'} b = ('1','2','3','4','5') for x in a: print(x) for i in b: print(i)",
        "answer": "1",
        "analyzeContent": "本题答案正确.变量a是集合,b是元组,元组有顺序,每次print()打印出来都一样,而集合无顺序,每次打印出来顺序都可能不同,所以二者打印出来的结果,可能不会一样.",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995849306185730",
        "version": 0,
        "type": 3,
        "title": "执行:print(any(['小陈', 'False', '小李', 'True'])) 得到的结果是:False . 请判断是否正确?( )",
        "answer": "1",
        "analyzeContent": "any的参数都是字符串,全真,所以返回True.",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815995907728646146",
        "version": 0,
        "type": 3,
        "title": "运行下列程序段时输入\"good\",则输出结果是:ok .( ) try: x=eval(input()) print(x) except NameError: print('ok')",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "0",
        "analyzeContent": "输入对象类型错误,执行 print('ok').",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815996014880149506",
        "version": 0,
        "type": 4,
        "title": "字母去重排序 在一列表中产生n个大写字母,删除其中重复字母,并按照A到Z顺序排列输出.同时输出删除字母个数. 例如输入 5  随机产生原始字母:[ \"D\",\"H\",\"K\",\"E\",\"H\"]   输出:去重后字母排序:[\"D\",\"E\",\"H\",\"K\"]  输出:共删除字母个数:1个. 请编写程序实现上述功能,或补全代码. import random #导入随机数模块 maxn=int(input(\"输入生成大写字母个数\")) a=[ ] for i in range(maxn): c=random.randint(1,26)#随机产生1-26之间的整数 numb=chr(64+c) ① print(\"随机产生原始字母:\",a) m,n=0,maxn while m<n: i=n-1 while ② : i=i-1 if i==m: ③ else: a.remove(a[i]) n=n-1 for i in range(n): for j in range(len(a)-1,i,-1): if a[j]<a[j-1]: ④ print(\"去重后字母排序:\",a) print(\"共删除字母个数:\", ⑤ ,\"个\")",
        "analyzeContent": "参考程序: import random maxn=int(input(\"输入生成大写字母个数\")) a=[ ] for i in range(maxn): c=random.randint(1,26) numb=chr(64+c) a.append(numb) print(\"随机产生原始字母:\",a) m,n=0,maxn while m<n: i=n-1 while a[i]!=a[m] : i=i-1 if i==m: m=m+1 else: a.remove(a[i]) n=n-1 for i in range(n): for j in range(len(a)-1,i,-1): if a[j]<a[j-1]: a[j],a[j-1]=a[j-1],a[j] print(\"去重后字母排序:\",a) print(\"共删除字母个数:\", maxn-n ,\"个\") 评分标准: (1)a.append(numb) 或等效答案;(3分) (2)a[i]!=a[m] 或等效答案;(4分) (3)m=m+1 或等效答案;(3分) (4)a[j],a[j-1]=a[j-1],a[j] 或等效答案;(3分) (5)maxn-n 或等效答案.(3分)",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815996308569890818",
        "version": 0,
        "type": 4,
        "title": "植树问题 如下图所示,在\"植树.csv\"中记录着2个班级多次植树的信息(第一列为班级名,第二列为本次植树的数量),输出每个班级植树的总数,请你补全代码. import csv with open(\"/data/植树.csv\") as f: h=list( ① ) s1=0 s2=0 for i in range(len(h)): if int(h[i][0])==1: s1=s1+int(h[i][1]) if int(h[i][0])==2: s2=s2+ ② print(s1,s2) 输出: 368 362",
        "analyzeContent": "标准答案: 参考程序: import csv with open(\"/data/植树.csv\") as f: h=list( csv.reader(f) ) s1=0 s2=0 for i in range(len(h)): if int(h[i][0])==1: s1=s1+int(h[i][1]) if int(h[i][0])==2: s2=s2+ int(h[i][1]) print(s1,s2) 评分标准: (1)csv.reader(f) 或等效答案;(2分) (2)int(h[i][1]) 或等效答案.(2分)",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "1815996535668658178",
        "version": 0,
        "type": 4,
        "title": "合作小组 班里有35位同学,新来的王老师想以随机组合的方式给同学们组建合作小组促进学习,已知同学们的学号范围是1~35号,王老师编写了以下程序来生成5个合作小组,如下图所示,请你帮忙补全代码: import random#导入随机数模块 numbers=35*[0]#创建35个元素值均为0的列表 flags=35*[False]#创建35个元素值均为False的列表 ① while i<=34: n=random.randint(1,35)#随机产生1-35之间的整数 if not flags[n-1]: ② numbers[i]= ③ i+=1 for i in range(5): print(\"第\"+str( ④ )+\"组:\",numbers[i*7:7*(i+1)])",
        "analyzeContent": "参考程序: import random numbers=35*[0] flags=35*[False] i=0 while i<=34: n=random.randint( 1,35 ) if not flags[n-1]: flags[n-1]=True numbers[i]= n i+=1 for i in range(5): print(\"第\"+str( i+1 )+\"组人员:\",numbers[i*7:7*(i+1)]) 评分标准: (1)i=0 或等效答案;(2分) (2)flags[n-1]=True 或等效答案;(3分) (3)n 或等效答案;(3分)",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      }
    ],
    "calculatePercentage": 0.0,
    "completeTime": "3",
    "answerScore": 0.0,
    "title": "202406Python三级真题",
    "averageScore": 16
  },
  "code": 200,
  "msg": "操作成功"
}