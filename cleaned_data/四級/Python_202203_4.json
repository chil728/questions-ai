{
  "data": {
    "averageCompleteTime": 657.0,
    "subjectList": [
      {
        "id": "6163",
        "version": 0,
        "type": 1,
        "title": "关于函数,以下选项中描述错误的是? ( )",
        "optionA": "函数能完成特定的功能,对函数的使用不需要了解函数内部实现原理,只要了解函数的输入输出方式即可.",
        "optionB": "使用函数的主要目的是减低编程难度和代码重用.",
        "optionC": "Python 使用 del 保留字定义一个函数.",
        "optionD": "函数是一段具有特定功能的,可重用的语句组.",
        "answer": "C",
        "analyzeContent": "Python 使用 def 保留字定义一个函数.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6164",
        "version": 0,
        "type": 1,
        "title": "Python机器学习方向的第三方库是? ( )",
        "optionA": "Turtle",
        "optionB": "TensorFlow",
        "optionC": "Pygame",
        "optionD": "Random",
        "answer": "B",
        "analyzeContent": "TensorFlow是人工智能领域类的深度学习库.",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "第三方库(模块)的获取,安装与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6167",
        "version": 0,
        "type": 1,
        "title": "Python可以将形式参数定义为可变参数,即传入函数中的实际参数可以是任意多个,主要有\"*parameter\"以及\"**parameter\"两种形式.以下关于可变参数的定义形式表述错误的是? ( )",
        "optionA": "\"*parameter\"这种形式表示接受任意多个实际参数并将其放到一个列表中",
        "optionB": "如果想要使用一个已经存在的列表作为函数的可变参数,可以在列表的名称前加\"*\"后作为形式参数进行调用",
        "optionC": "\"**parameter\"这种形式表示接受任意多个类似关键字参数一样显示赋值的实际参数并将其放到一个字典中",
        "optionD": "如果想要使用一个已经存在的字典作为函数的可变参数,可以在字典的名称前加\"**\"后作为形式参数进行调用",
        "answer": "A",
        "analyzeContent": "可变参数\"*parameter\"这种形式表示接受任意多个实际参数并将其放到一个元组中,如果想要使用一个已经存在的列表作为函数的可变参数,可以在列表的名称前加\"*\"后作为形式参数进行调用;\"**parameter\"这种形式表示接受任意多个类似关键字参数一样显示赋值的实际参数并将其放到一个字典中,如果想要使用一个已经存在的字典作为函数的可变参数,可以在字典的名称前加\"**\"后作为形式参数进行调用.",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "形参和实参",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6169",
        "version": 0,
        "type": 1,
        "title": "关于以下程序,运行程序输出的结果是? ( ) def demo(a,b): print(a+b) mydict={'a':1,'b':2} demo(**mydict) demo(*mydict)",
        "optionA": "3   3",
        "optionB": "3   ab",
        "optionC": "ab   3",
        "optionD": "ab    ab",
        "answer": "B",
        "analyzeContent": "如果想要使用一个已经存在的列表作为函数的可变参数,可以在列表的名称前加\"*\"后作为形式参数进行调用;如果想要使用一个已经存在的字典作为函数的可变参数,可以在字典的名称前加\"**\"后作为形式参数进行调用.题目中mydict是一个字典,使用\"**\"后进行调用,形参a与b将获得对应键的值,如果使用\"*\"后进行调用,形参a与b将获得的是一个元组中对应的字符a和b,a+b实现字符串的连接.",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6171",
        "version": 0,
        "type": 1,
        "title": "函数调用时通过\"键-值\"形式加以指定实际参数,即使用关键字参数,可以让函数更加清晰,容易使用,关于关键字参数的限制,以下表述中哪一个是错误的? ( )",
        "optionA": "关键字参数之间不存在先后顺序",
        "optionB": "不得重复提供实际参数",
        "optionC": "关键字参数可以位于位置参数之前",
        "optionD": "关键字参数必须位于位置参数之后",
        "answer": "C",
        "analyzeContent": "函数调用时通过\"键-值\"形式加以指定实际参数,即使用关键字参数,可以让函数更加清晰,容易使用,需要注意的是,关键字参数之间不存在先后顺序,但是关键字参数必须位于位置参数之后.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6172",
        "version": 0,
        "type": 1,
        "title": "下列关于函数的说法,错误的是? ( )",
        "optionA": "函数是一种功能抽象的模块",
        "optionB": "使用函数的目的只是为了增加代码复用",
        "optionC": "函数的使用包括定义函数和调用函数",
        "optionD": "函数名可以是任何有效的Python标识符",
        "answer": "B",
        "analyzeContent": "知识点:函数的相关概念",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6173",
        "version": 0,
        "type": 1,
        "title": "下列哪个关键字可用来创建自定义函数? ( )",
        "optionA": "function",
        "optionB": "def",
        "optionC": "class",
        "optionD": "procedure",
        "answer": "B",
        "analyzeContent": "知识点:自定义函数的创建与调用",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "自定义函数的创建与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6174",
        "version": 0,
        "type": 1,
        "title": "关于算法描述正确的是? ( )",
        "optionA": "算法是一种程序设计语言",
        "optionB": "算法每个步骤必须有确切的定义",
        "optionC": "算法就是数值计算方法",
        "optionD": "算法至少要有一个输入",
        "answer": "B",
        "analyzeContent": "知识点:算法基础",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "算法优化",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6175",
        "version": 0,
        "type": 1,
        "title": "以下哪个不是Python中的内建函数? ( )",
        "optionA": "ord(x)",
        "optionB": "abs(x)",
        "optionC": "chr(x)",
        "optionD": "def(x)",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6176",
        "version": 0,
        "type": 1,
        "title": "以下选项中,关于python函数参数的说法错误的是? ( )",
        "optionA": "在调用一个函数时,若函数中修改了实参变量的值,则对应的形参变量的值也被修改",
        "optionB": "函数一定要有参数和返回值",
        "optionC": "位置形参必须在关键字形参的前面",
        "optionD": "函数的形参在函数被调用时获得初始值",
        "answer": "B",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6177",
        "version": 0,
        "type": 1,
        "title": "关于Python的自定义函数的描述,下列哪个选项是错误的? ( )",
        "optionA": "函数名的命名规则与变量名的命名规则相同",
        "optionB": "如果有多个参数,各参数之间使用\",\"隔开",
        "optionC": "函数没有参数,在函数名后面仍然要保留一对空的\"()\",后面不需要加\":\"",
        "optionD": "函数体相对于自定义函数的关键字必须保持一定的缩进",
        "answer": "C",
        "analyzeContent": "自定义函数名的命名规则与变量名的命名规则相同,如果有多个参数,各参数之间使用\",\"隔开,即使函数没有参数,也必须在函数名后面保留一对空的\"()\",冒号不可缺少,函数体相对于自定义函数的关键字必须保持统一的缩进.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "自定义函数的创建与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6178",
        "version": 0,
        "type": 1,
        "title": "执行以下程序,以下选项中哪一项是错误的? ( ) def miao(x,y): z=x+y*2 y=x return z x=2 y=3 z=miao(x,y)+y",
        "optionA": "该函数名称为miao",
        "optionB": "执行该函数后,变量x的值为2",
        "optionC": "执行该函数后,变量y的值为2",
        "optionD": "执行该函数后,变量z的值为11",
        "answer": "C",
        "analyzeContent": "调用时函数返回值局部变量x=2,y=2,z=8,调用结束后返回主程序,全局变量x=2,y=3,c=8+3=11.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "全局变量和局部变量",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6180",
        "version": 0,
        "type": 1,
        "title": "可以通过下列哪一个关键字,通过局部变量修改全局变量的值? ( )",
        "optionA": "nonlocal",
        "optionB": "global",
        "optionC": "nonglobal",
        "optionD": "globall",
        "answer": "B",
        "analyzeContent": "可以通过global关键字,通过局部变量修改全局变量的值.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "全局变量和局部变量",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6182",
        "version": 0,
        "type": 1,
        "title": "设有以下函数,运行程序输出的结果是? ( ) def fun(m,n): m-=n return m a=fun(4,1) print(a)",
        "optionA": "1",
        "optionB": "2",
        "optionC": "3",
        "optionD": "4",
        "answer": "C",
        "analyzeContent": "函数返回4-1的结果.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6183",
        "version": 0,
        "type": 1,
        "title": "有如下 Python 程序,运行该程序后,输出结果为? ( ) def fun(s): st=s[1] for i in range(1,len(s)): if len(st)==0 or s[i]!=st[len(st)-1]: st=st+s[i] else: st=st[0:len(st)-1] print(st) fun(\"xxyyzzxyz\")",
        "optionA": "xyz",
        "optionB": "xyzxyz",
        "optionC": "xyxyz",
        "optionD": "xxyyz",
        "answer": "A",
        "analyzeContent": "i=1,st=\"\";i=2,st=\"y\";i=3,st=\"\";i=4,st=\"z\";i=5,st=\"\";i=6,st=\"x\";i=7,st=\"xy\";i=8,st=\"xyz\"",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6184",
        "version": 0,
        "type": 1,
        "title": "观察下列代码,说法错误的项是? ( ) def fi(n): if n==1 or n==2: s=1 else: s=fi(n-1)+fi(n-2) return s a=int(input(\"请输入a的值:\")) print(fi(a))",
        "optionA": "该程序段用递归算法来实现",
        "optionB": "语句\"def fi(n):\"中的n为形参",
        "optionC": "边界条件为n==1",
        "optionD": "当a=6时,程序输出8",
        "answer": "C",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6187",
        "version": 0,
        "type": 1,
        "title": "以下函数要计算1到100自然数的和,则划线处应补充选项为? ( ) def su(n): s =0 while n > 0: return s print(su(100))",
        "optionA": "n=n-1 s=s+n",
        "optionB": "n=n+1 s=s+n",
        "optionC": "s=s+n n=n-1",
        "optionD": "s=s+n n=n+1",
        "answer": "C",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6189",
        "version": 0,
        "type": 1,
        "title": "下列关于递归的描述不正确的是? ( )",
        "optionA": "递归函数一定包含条件控制语句",
        "optionB": "递归函数一定包含调用自身的语句",
        "optionC": "在调用自身函数时需要明确的边界终止条件",
        "optionD": "递归算法一般代码简洁,执行效率高,空间复杂度低",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6191",
        "version": 0,
        "type": 1,
        "title": "以下关于递归与递推方法的比较,正确的观点是? ( )",
        "optionA": "递推是将复杂问题分解成若干个子问题,依次降解,求出低阶规模的解,代入高阶问题中,直至求出原问题的解",
        "optionB": "递归是构造低阶规模的问题,并求出解,依次推导出高阶的问题以及解,直至求出问题的解",
        "optionC": "数学上的递推关系可以通过递归的方法来实现",
        "optionD": "递归算法代码简洁,运行速度比递推快,因此应该尽量采用递归的方法",
        "answer": "C",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6192",
        "version": 0,
        "type": 1,
        "title": "下列程序段的运行结果为? ( ) def fun(a): if a<=1: return 1 else: return fun(a-1)*2 print(fun(5))",
        "optionA": "4",
        "optionB": "8",
        "optionC": "16",
        "optionD": "25",
        "answer": "C",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6197",
        "version": 0,
        "type": 1,
        "title": "以下函数要实现5的阶乘,则划线处应补充选项为? ( ) def fun(i): if i<=1: return 1 else: return print(fun(5))",
        "optionA": "i*(i-1)*(i-2)*...*2*1",
        "optionB": "(i-1)*fun(i)",
        "optionC": "i*fun(i+1)",
        "optionD": "i*fun(i-1)",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6201",
        "version": 0,
        "type": 1,
        "title": "以下常见算法中,体现分治思想的是? ( )",
        "optionA": "解析算法",
        "optionB": "枚举算法",
        "optionC": "冒泡排序",
        "optionD": "对分查找",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "分治算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6202",
        "version": 0,
        "type": 1,
        "title": "对于序列98,88,76,65,48,24,12,12,8,1,采用\"对分查找\"法查找8,需要查找多少次? ( )",
        "optionA": "5",
        "optionB": "4",
        "optionC": "3",
        "optionD": "2",
        "answer": "C",
        "analyzeContent": "按二分查找法的规律,每次先查找中间值,进行比较.",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "分治算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6204",
        "version": 0,
        "type": 1,
        "title": "分治法所能解决的问题一般具有以下几项特征,下列哪一项描述不正确? ( )",
        "optionA": "该问题的规模缩小到一定的程度就可以容易地解决",
        "optionB": "该问题可以分解为若干个规模较小的相同问题,即该问题具有最优子结构性质",
        "optionC": "利用该问题分解出的子问题的解可以合并为该问题的解",
        "optionD": "该问题所分解出的各个子问题之间包含公共的子子问题",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "分治算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6207",
        "version": 0,
        "type": 1,
        "title": "一般用于安装Python第三方库的工具是? ( )",
        "optionA": "import",
        "optionB": "install",
        "optionC": "setup",
        "optionD": "pip",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "第三方库(模块)的获取,安装与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6211",
        "version": 1,
        "type": 3,
        "title": "如下图代码,运行之后,最终打印出的结果是4,请判断对错.",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "默认参数的值被改变了,所以将计算传入的两个参数的值,结果就是4",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6214",
        "version": 1,
        "type": 3,
        "title": "下图左右两段代码运行之后,打印出的结果不相同!请判断对吗?",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "第一段代码打印出的结果应该是5,第二段代码变量b的值并没有被改动,打印出的结果是3,所以两段代码结果不同.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6217",
        "version": 1,
        "type": 3,
        "title": "为实现下图左边的打印效果,小明编写了如下图右边的代码. 请问,他这代码能正确打印出左边效果来吗?",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "基本的递归,函数通过对自身的调用,实现每将调用参数减1,所以,本题正确.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6218",
        "version": 1,
        "type": 3,
        "title": "为打印出5,4,3,2,1这个数字序列,小明编写了一个递归函数,如下图所示. 请问,他这个程序是正确的吗?",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "0",
        "analyzeContent": "递归在判断之前,程序将永无止境,不会停止,所以,这个程序写错了.正确的写法,应该把n(x-1),放到if判断语句之后.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6219",
        "version": 0,
        "type": 3,
        "title": "1,有abc三个口袋,a袋中有1粒糖,b袋中有2粒糖,c袋中有3粒糖 2,小红与小明两人轮流在任意一袋中取糖出来.每次可以在任意一袋中,取任意颗(比如,可在c袋中取3,2,1任意颗) 3,到最后,谁最后一次取,并将所有糖都取完了,谁就获胜,获胜者将得到所有的糖. 小明让小红先取,自己后取. 小红说:不!先取的人肯定会输! 请判断,小红所说,是正确还是错误?( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "从最简单的开始: 1,如果总共只有1粒糖,则谁先谁胜; 2,如果有两袋,每袋中有1颗,显然谁先谁输: 3,如果有两袋,1袋中1颗,另一袋中有2颗,显然谁先谁胜(只需拿掉2颗中的一颗,剩下条件就变成了上面2,对方先,对方输); 4,如果有两袋,每袋都是2颗,显然谁先谁输(如果一次拿掉2颗,则对方拿剩下的2颗,对方胜;如果只拿某袋中的1颗,则变成了上面3,对方先,也是对方胜) 5,如果有三袋,每袋1颗,则显然谁先谁胜 6,如果有三袋,其中两袋有1颗,一袋2颗,显然谁先谁胜,只需将2颗的拿掉,剩下两个1颗,就是上面2,对方先对方输 7,如果有三袋,其中两袋有2颗,一袋1颗,显然谁先谁胜(只需拿掉1颗的,剩下就变成了上面4,对方先,对方输) 8,如果三袋,分别有1,2,3颗,谁先谁输:如果从3中拿1颗,就变成了上面7,对方先,对方胜;如果从3中拿2,就变成上述6,也是对方胜,如果将3拿完,就变成上述3,也是对方胜.所以,整个游戏,谁先谁输. 本题,是将复杂问题简化,然后逐步增加难度,直到解决整个问题,是典型的分治算法的思想.同时,本问题也可编写成Python游戏.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "分治算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6220",
        "version": 0,
        "type": 3,
        "title": "小明听说,使用pygame模块可以编写很多有趣的小游戏,于是他想在自己的电脑上安装这个模块. 他使用了如下命令进行安装,请问,他下面这条命令正确吗? pip  install  -i  https://pypi.doubanio.com/simple/  pygame",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "这是使用pip命令安装外部模块的基本命令.本题中用法正确.使用了选项 -i ,表示从指定网址进行安装,本题是从豆瓣的python仓库中进行安装的.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "第三方库(模块)的获取,安装与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6221",
        "version": 0,
        "type": 3,
        "title": "匿名函数L(x1,y1,x2,y2)的返回值是(x1-x2)**2 + (y1-y2)**2的计算结果. L = lambda x1,y1,x2,y2:(x1-x2)**2 + (y1-y2)**2",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "匿名函数的返回值是其函数体中的表达式的值",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "匿名函数",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6222",
        "version": 0,
        "type": 3,
        "title": "primenumber(number)函数是判断一个数是否是素数的函数,将函数的循环条件\"for i in range(2,number)\"更改为\"for i in range(2,number//2)\"能够降低primenumber(number)函数的时间复杂度. def primenumber(number): if number < 2: print(number,\"不是素数!\") else: for i in range(2,number): if number % i == 0: print(number,\"不是素数!\") break else: print(number,\"是素数!\")",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "0",
        "analyzeContent": "判断number是否是素数时,如果在:1~number/2范围内存在一个数能够将number整除,那么number就不是素数.例如:number=a×b,当a≥number/2时,b",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "时间复杂度与空间复杂度",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6223",
        "version": 0,
        "type": 3,
        "title": "在一个程序实现过程中,若某一部分的代码功能反复出现了多次,我们可以把这段反复出现的代码定义成一个函数,然后在需要的时候调用,这体现了函数代码的复用性.",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6224",
        "version": 0,
        "type": 3,
        "title": "执行以下代码: def func(list_1): list_1=[5,8] list_1=[20,12,53] func(list_1) t=tuple(list_1) print(t) 程序输出的结果为:(5,8).",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "0",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6226",
        "version": 0,
        "type": 4,
        "title": "7个评委给每个选手打分,评委分数中去掉最高分与最低分,计算所得平均分是每个选手的最后得分,保留2位小数. 根据上述计算规则,编写自定义函数完成程序功能,完善代码. \"\"\" 根据评委分数,计算去掉最高分与最低分后的平均分,保留2位小数 函数名  def getScore(fs): 参数    fs:表示评委的分数,为列表 返回值 :返回选手的得分,保留2位小数. \"\"\" def getScore(fs): maxfs = 0 minfx = 999999 n =   ① for f in fs: if f > maxfs: ② elif f < minfx: minfx = f yxf = sum(fs)-maxfs-minfx avgfs =   ③ return avgfs fs = [9.56,9.68,9.78,9.67,9.81,9.21,9.75] defen =  ④ print(defen)",
        "answer": "<p>参考程序:</p><p><br></p><p>def getScore(fs):</p><p><br></p><p>&nbsp; &nbsp; maxfs = 0</p><p>&nbsp; &nbsp; minfx = 999999</p><p>&nbsp; &nbsp; n = len(fs) - 2</p><p>&nbsp; &nbsp; for f in fs:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if f &gt; maxfs:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; maxfs = f</p><p>&nbsp; &nbsp; &nbsp; &nbsp; elif f &lt; minfx:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; minfx = f&nbsp; &nbsp;</p><p>&nbsp; &nbsp; yxf = sum(fs)-maxfs-minfx</p><p>&nbsp; &nbsp; avgfs = int(yxf / n * 100 +0.5) / 100</p><p>&nbsp; &nbsp; return avgfs</p><p>fs = [9.56,9.68,9.78,9.67,9.81,9.21,9.75]</p><p>defen = getScore(fs)</p><p>print(defen)</p>",
        "examDots": "35,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6227",
        "version": 0,
        "type": 4,
        "title": "素数是只能被1和本身整除的正整数,编写自定义函数,实现判断正整数是否为素数.完善程序代码. \"\"\" 判断正整数n是否为素数,若是返回True;否则返回False 函数名  def prime(n) 参数    n:表示正整数 返回值 :n是素数,返回True;否则返回False \"\"\" def prime(n): if n < 2: return False else: for i in range(  ①   ,n): if   ②   : return False return   ③ n = 7 if   ④  : print(\"{}是素数\".format(n)) else: print(\"{}不是素数\".format(n))",
        "answer": "<p><span>\t</span>标准答案:</p><p>参考程序:</p><p><br></p><p>def prime(n):</p><p><br></p><p>&nbsp; &nbsp; if n &lt; 2:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return False</p><p>&nbsp; &nbsp; else:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for i in range(2,n):</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if n % i == 0:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return False</p><p>&nbsp; &nbsp; return True</p><p>n = 7</p><p>if prime(n):</p><p>&nbsp; &nbsp; print(\"{}是素数\".format(n))</p><p>else:</p><p>&nbsp; &nbsp; print(\"{}不是素数\".format(n))</p>",
        "examDots": "35,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "6228",
        "version": 0,
        "type": 4,
        "title": "编写程序计算n(n<=10)位数中,包含奇数个5的个数.比如1位数中包含奇数个5的个数是1个.利用递推方法计算n位数包含奇数个5的个数.完善划线处的代码. c = [[0 for i in range(2)] for i in range(11)]  #存放奇数个5和偶数个5的二维列表 c[1][0] = 9                           #一位数中包含偶数个5的个数 c[1][1] = 1                           #一位数中包含奇数个5的个数 k = 9 n = 5 for i in range(2,  ①  ): if i == n: k =   ② c[i][0] = c[i-1][1] + k * c[i-1][0] c[i][1] =   ③ print(c[n][1])",
        "answer": "<p>参考程序:</p><p><br></p><p>c = [[0 for i in range(2)] for i in range(11)]&nbsp; #存放奇数个5和偶数个5的二维列表</p><p><br></p><p>c[1][0] = 9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#一位数中包含偶数个5的个数</p><p>c[1][1] = 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#一位数中包含奇数个5的个数</p><p>k = 9</p><p>n = 5</p><p>for i in range(2,n+1):&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>&nbsp; &nbsp; if i == n:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; k = k - 1</p><p>&nbsp; &nbsp; c[i][0] = c[i-1][1] + k * c[i-1][0]</p><p>&nbsp; &nbsp; c[i][1] = k*c[i-1][1] + c[i-1][0]</p><p>print(c[n][1])</p>",
        "examDots": "35,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      }
    ],
    "calculatePercentage": 0.0,
    "completeTime": "1",
    "answerScore": 0.0,
    "title": "202203Python四级真题",
    "averageScore": 13
  },
  "code": 200,
  "msg": "操作成功"
}