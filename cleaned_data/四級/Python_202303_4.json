{
  "data": {
    "averageCompleteTime": 683.0,
    "subjectList": [
      {
        "id": "8873",
        "version": 0,
        "type": 1,
        "title": "运行下列程序,输出的结果是?( ) def wenhao(name = 'zhejiang'): print('hello' + name) wenhao()",
        "optionA": "hello",
        "optionB": "hellozhejiang",
        "optionC": "helloname",
        "optionD": "程序将提示运行错误",
        "answer": "B",
        "analyzeContent": "定义函数时,可以指定形参的默认值.如果在调用函数时给函数提供了实参,Python将使用指定的实参,否则将自动调用形参的默认值.本题中,调用wenhao函数时没有传值,故使用函数的默认值作为函数的调用.因此选B",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8874",
        "version": 0,
        "type": 1,
        "title": "运行下列程序,输出的结果是?( ) rst = lambda a,b=5:a*b print(rst(5))",
        "optionA": "5",
        "optionB": "15",
        "optionC": "25",
        "optionD": "35",
        "answer": "C",
        "analyzeContent": "rst(5)传入一个实参,a被赋值为5,b使用默认值5,因此结果是5*5=25,选C.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "形参和实参",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8875",
        "version": 0,
        "type": 1,
        "title": "运行下列程序,输出的结果是?( ) def jsarea(r, PI = 3.14): area = PI * r * r print(jsarea(1))",
        "optionA": "3.14",
        "optionB": "因缺失参数,不能计算",
        "optionC": "None",
        "optionD": "程序代码有错误",
        "answer": "C",
        "analyzeContent": "函数jsarea中,没有return语句,函数中计算的结果area不能传递给函数调用处,因此调用函数的结果是None.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "自定义函数的创建与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8876",
        "version": 0,
        "type": 1,
        "title": "运行下列程序,输出的结果是?( ) def js(n): s = 0 while n: s = s * 10+n % 10 n //= 10 return s print(js(20230110))",
        "optionA": "20230110",
        "optionB": "01103202",
        "optionC": "2301102",
        "optionD": "1103202",
        "answer": "D",
        "analyzeContent": "函数js的功能是计算n的逆序数,因此选D",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8877",
        "version": 0,
        "type": 1,
        "title": "在传递信息的过程中, 通常会将一些敏感信息进行加密,以下是对数据进行加密的Python程序段,若输入数据为\"cie0108\",则输出的结果是?( ) def jm(t): s = \"\" for ch in t: if \"0\" <= ch <= \"9\": x = int(ch) + 3 if x >= 10: x = x % 10 ch = str(x) s = s + ch return s print(jm('cie0108'))",
        "optionA": "1343eic",
        "optionB": "0108cie",
        "optionC": "cie3431",
        "optionD": "3431cie",
        "answer": "C",
        "analyzeContent": "函数jm中对原文进行处理,若是字母,不变,累加;若是数字, 转为整型加3然后求其个位上的数,因此答案是cie3431,选C.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8878",
        "version": 0,
        "type": 1,
        "title": "运行下列程序,输出的结果是?( ) s = 0 def f(n): global s for i in range(n): s = s + i return s print(f(f(3)))",
        "optionA": "3",
        "optionB": "6",
        "optionC": "9",
        "optionD": "0",
        "answer": "B",
        "analyzeContent": "在函数f中,变量s定义为global全局变量,第一次调用f(3)后返回的结果是3,此时变量s的值变成3,再次调用函数f(3)时,因s的初值已经是3了,因此结果是6.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "全局变量和局部变量",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8879",
        "version": 0,
        "type": 1,
        "title": "运行下列程序后,输出的结果是?( ) def jsh(n): if n == 1: return 1 else: return n + jsh(n-1) print(jsh(10))",
        "optionA": "1",
        "optionB": "35",
        "optionC": "45",
        "optionD": "55",
        "answer": "D",
        "analyzeContent": "递归思想求解1到n之间和,因此答案选D.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8880",
        "version": 0,
        "type": 1,
        "title": "运行下列程序后,输出的结果是?( ) def fun(s): if len(s) == 1: return s else: return fun(s[1:]) + s[0] print(fun('CIE2023'))",
        "optionA": "3202EIC",
        "optionB": "EIC3202",
        "optionC": "3220EIC",
        "optionD": "EIC2023",
        "answer": "A",
        "analyzeContent": "函数fun递归实现字符串s逆序,因此选A.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8881",
        "version": 0,
        "type": 1,
        "title": "下列有关递归的描述中,正确的是?( )",
        "optionA": "递归函数中肯定有循环结构;",
        "optionB": "递归没有体现\"大事化小\"的思想;",
        "optionC": "递归有明确的结束递归的边界条件;",
        "optionD": "递归执行效率较高.",
        "answer": "C",
        "analyzeContent": "递归有明确的结束递归的边界条件以及结束时的边界值,递归体现了\"大事化小\"的思想.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8882",
        "version": 0,
        "type": 1,
        "title": "运行下列程序,运行的结果是?( ) def leijia(x): x += 1 return x x=10 y=leijia(x) print(y)",
        "optionA": "1",
        "optionB": "10",
        "optionC": "11",
        "optionD": "None",
        "answer": "C",
        "analyzeContent": "将实参10传递给函数leijia中的形参x,x加1后得到11,并通过return返回给y,因此选C.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "形参和实参",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8883",
        "version": 0,
        "type": 1,
        "title": "关于分治算法特征的描述中,错误的是?( )",
        "optionA": "当问题的规模缩小到一定的程度就可以容易地解决;",
        "optionB": "问题可以分解为若干个规模较小的相同问题;",
        "optionC": "该问题所分解出的各个子问题是可以相互独立,也可以相互交叉;",
        "optionD": "该问题分解出的子问题的解可以合并为该问题的解.",
        "answer": "C",
        "analyzeContent": "该问题所分解出的各个子问题是相互独立,即该问题具有最优子结构性质.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "分治算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8884",
        "version": 0,
        "type": 1,
        "title": "张老师有n(范围在1到15之间)个礼物分给同学们,他请同学们猜礼物的数量,请问同学们猜几次后肯定知道礼物的数量(不算运气成分第1次或第2次就猜到)?( )",
        "optionA": "15",
        "optionB": "7",
        "optionC": "4",
        "optionD": "3",
        "answer": "C",
        "analyzeContent": "二分查找特征,15个礼物,每次对半猜,4次后肯定知道结果.",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "分治算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8885",
        "version": 0,
        "type": 1,
        "title": "下列排序算法中,时间复杂度最小的是?( )",
        "optionA": "插入排序",
        "optionB": "冒泡排序",
        "optionC": "快速排序",
        "optionD": "选择排序",
        "answer": "C",
        "analyzeContent": "快速排序时间复杂度是O(nlogn),其他都是O(n*n).",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "时间复杂度与空间复杂度",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8886",
        "version": 0,
        "type": 1,
        "title": "小方要在程序中生成[10,99]之间的随机整数,下列程序不能实现的是?( )",
        "optionA": "import random a = random.randint(10,99)",
        "optionB": "import random as t a = t.randint(10,99)",
        "optionC": "from random import randint a = randint(10,99)",
        "optionD": "from random import randint as t a = t.randint(10,99)",
        "answer": "D",
        "analyzeContent": "选项A,B,C均正确.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "第三方库(模块)的获取,安装与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8887",
        "version": 0,
        "type": 1,
        "title": "下列哪个关键字可用来创建自定义函数?( )",
        "optionA": "function;",
        "optionB": "def;",
        "optionC": "class;",
        "optionD": "procedure.",
        "answer": "B",
        "analyzeContent": "def 关键字可用来创建自定义函数",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "自定义函数的创建与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8888",
        "version": 0,
        "type": 1,
        "title": "在 Python 语言中,求列表长度用下列哪个函数?( )",
        "optionA": "size",
        "optionB": "len",
        "optionC": "length",
        "optionD": "str",
        "answer": "B",
        "analyzeContent": "在 Python 语言中,求列表长度用len 函数",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8889",
        "version": 0,
        "type": 1,
        "title": "下列关于函数返回值的描述中,正确的是?( )",
        "optionA": "Python函数的返回值使用很灵活,可以没有返回值,可以有一个或多个返回值.",
        "optionB": "函数定义中最多含有一个return语句.",
        "optionC": "在函数定义中使用return语句时,至少给一个返回值",
        "optionD": "函数只能通过print语句和return语句给出运行结果",
        "answer": "A",
        "analyzeContent": "Python函数的返回值使用很灵活,可以没有返回值,可以有一个或多个返回值,是正确的.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的返回值",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8890",
        "version": 0,
        "type": 1,
        "title": "下列有关自定义函数的描述,正确的是?( )",
        "optionA": "函数的定义必须在程序的开头;",
        "optionB": "函数定义后,其中的程序可以自动执行;",
        "optionC": "函数定义后需要调用才会执行;",
        "optionD": "函数体与关键字必须左对齐.",
        "answer": "C",
        "analyzeContent": "函数定义后需要调用才会执行.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "自定义函数的创建与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8891",
        "version": 0,
        "type": 1,
        "title": "运行下列程序,输出的结果是?( ) Sum=1 for i in range (1,5): Sum=Sum*i print(Sum,i)",
        "optionA": "24;5",
        "optionB": "120;5",
        "optionC": "24;4",
        "optionD": "120;4",
        "answer": "C",
        "analyzeContent": "Sum=1 for i in range (1,5): Sum=Sum*i print(Sum,i) 输出是24, 4",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8892",
        "version": 0,
        "type": 1,
        "title": "关于下列代码的描述,错误的是?( ) def fact(n): s=1 for i in range(1,n+1): s*=i return s",
        "optionA": "s不能在函数外使用",
        "optionB": "range()函数是Python内置函数",
        "optionC": "如果n=4,返回的值为24",
        "optionD": "代码中n是可选参数",
        "answer": "D",
        "analyzeContent": "代码中n是可选参数是错误的.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8893",
        "version": 0,
        "type": 1,
        "title": "某人将自己密码旅行箱的密码遗忘了.当事人记起密码是一个三位自然数,并且密码个位数是8,其它位含1但不能确定是哪一位.请将所有可能的密码遍历出来. 请完成程序并运行?( ) for x in range(100,__ ①__): #三位密码的范围 if ____ ②___ and \"1\" in str(x): #符合条件的密码 print(x)",
        "optionA": "999;x%10=8",
        "optionB": "999:x%10==8",
        "optionC": "1000;x%10=8",
        "optionD": "1000;x%10==8",
        "answer": "D",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8894",
        "version": 0,
        "type": 1,
        "title": "甲同学第一天跳绳100下,第二天开始每天增加5下;乙同学第一天跳绳100下,每隔一天增加10下.计算30天两人的跳绳总数. 甲的跳绳数:100,105,110,115,120...... 乙的跳绳数:100,100,110,110,120...... 请补全程序代码?( ) a=100    #甲同学第一天跳绳次数 b=100    #乙同学第一天跳绳次数 x=a      #甲同学累计跳绳次数,初始值是第一天的次数 y=b      #乙同学累计跳绳次数,初始值是第一天的次数 #从第二天开始迭代计算 for i in range(2,31): a= ① #甲同学每天增加5次 if i%2==1:    #当天数为奇数时 b= ② #乙同学增加10次 x=x+a y=y+b print(\"甲同学30天跳绳\",x,\"下\") print(\"乙同学30天跳绳\",y,\"下\")",
        "optionA": "a+5;b+10",
        "optionB": "+5;+10",
        "optionC": "a+10;b+5",
        "optionD": "+10;+5",
        "answer": "A",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8895",
        "version": 0,
        "type": 1,
        "title": "用递归算法计算10的阶乘10!的值#自定义阶乘函数.自定义函数fact(n)是求n的阶乘. 10!=1×2×3×...×10 请补全程序代码?( ) #自定义函数 def fact(n):      #求阶乘 if(n==1):     #终止条件 return 1  #结束递归 else:         #递归条件 p=__①____  #调用递归(自身) return p  #返回乘积 #主程序 print(\"10!=\",fact(10))  #调用递归",
        "optionA": "n*fact(n-1)",
        "optionB": "n*fact(n)",
        "optionC": "n*fact(n+1)",
        "optionD": "n**fact(n)",
        "answer": "A",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8896",
        "version": 0,
        "type": 1,
        "title": "用分治法查找列表中是否存在指定的数字.给定的列表已升序排序.请补全程序代码?( ) #在列表cards中查找数字x,返回下标值,若未找到,返回-1 def serch(cards=list,x=int): a=0             #定义左端点下标 b=len(cards)-1  #定义右端点下标 #逐级分割查找范围,缩小查找规模 while a<=b: m=(a+b)//2       #定义中点下标 if x==cards[m]:  #x刚好等于中点值 return m elif ① : #x<中点值,说明x位于左段位置 b=m-1        #重新定义右端点 else: a=m+1        #重新定义左端点 return -1            #未找到,返回-1 #主程序 #在列表d中查找用户输入的数字r d=[1,6,16,24,44,46,79,80,81,82,87,102,134,151,156,188,196,202,212,226,228,248,272,274,286,306,321,351,363] print(d)    #显示一下列表d r=int(input(\"请输入要查找的数字:\")) y=serch(d,r)  #调用子函数,d,r是实参 if y>=0: print(\"已找到\",r,\",它是列表中第\",y+1,\"个数字\") else: print(\"未找到\",r)",
        "optionA": "x",
        "optionB": "x<cards[m]",
        "optionC": "x>cards[m-1]",
        "optionD": "x>cards[m]",
        "answer": "B",
        "analyzeContent": "x",
        "examDots": "35,",
        "difficultyLevel": "5",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8897",
        "version": 0,
        "type": 1,
        "title": "下列不属于Python数据分析与可视化第三方库的是?( )",
        "optionA": "pandas",
        "optionB": "matplotlib",
        "optionC": "opencv",
        "optionD": "numpy",
        "answer": "C",
        "analyzeContent": "opencv不属于python数据分析与可视化第三方库",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "第三方库(模块)的获取,安装与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8898",
        "version": 0,
        "type": 3,
        "title": "关键字实参通过\"关键字=值\"的方式传值,不需要考虑函数调用过程中形参的顺序.( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "关键字实参通过\"关键字=值\"的方式传值,不需要考虑函数调用过程中形参的顺序.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8899",
        "version": 0,
        "type": 3,
        "title": "函数是将实现相同功能的代码封装在一起,实现代码复用.( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "函数是将实现相同功能的代码封装在一起,实现代码复用.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8900",
        "version": 0,
        "type": 3,
        "title": "创建自定义函数时,不需要声明函数形参的类型,形参的类型由调用自定义函数时传递的实参类型确定.( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "创建自定义函数时,不需要声明函数形参的类型,形参的类型由调用自定义函数时传递的实参类型确定.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "自定义函数的创建与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8901",
        "version": 0,
        "type": 3,
        "title": "递推是按照一定的规律计算序列中的每一项,通常是通过计算前面的一些项来计算后一项的值.( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "递推是按照一定的规律计算序列中的每一项,通常是通过计算前面的一些项来计算后一项的值.",
        "examDots": "35,",
        "difficultyLevel": "3",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8902",
        "version": 0,
        "type": 3,
        "title": "某同学用天平称量的过程如下:先放置100克砝码,砝码偏重;再将砝码改为50克,砝码偏轻;又将砝码改为75克......通过这种策略,该同学很快完成物品称重工作,这体现了分治思想.( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "该同学称量的过程体现了分治思想.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "分治算法",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8903",
        "version": 0,
        "type": 3,
        "title": "使用\"pip install-upgrade pandas\"命令能够升级pandas库.( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "使用\"pip install-upgrade 包名\" 命令能够更新已经安装的第三方库.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "第三方库(模块)的获取,安装与调用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8904",
        "version": 0,
        "type": 3,
        "title": "Python中调用close()函数可实现对文件内容的读取.( )",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "0",
        "analyzeContent": "Python中调用read()函数可实现对文件内容的读取.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数的相关概念",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8905",
        "version": 0,
        "type": 3,
        "title": "下面的程序会输出两个值.( ) def r(a,b): s=a+b b+=1 return s print(r(3,8))",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "0",
        "analyzeContent": "def r(a,b): s=a+b b+=1 return s print(r(3,8)) 上面的程序不会输出两个值.",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8906",
        "version": 0,
        "type": 3,
        "title": "一般而言,兔子在出生两个月后,就有繁殖能力,一对兔子每个月能生出一对小兔子来.如果所有兔子都不死,那么一年以后可以繁殖多少对兔子? 经分析,从第三个月起,每个月的兔子数是上个月与上上个月兔子之和. 请判读以下程序是否正确.( ) #自定义函数 def fib(n):      #斐波那契数列 if n<=2: return 1 else: return  fib(n-1)+fib(n-2)  #前两个数字之和 #主程序,显示每个月兔子数(斐波那契数列) for i in range(1,13): print(\"第\",i,\"个月兔子对数为:\",fib(i))",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "递归与递推",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8907",
        "version": 0,
        "type": 3,
        "title": "下列两个代码块的功能一样.( ) A．if(year%4)==0: if(year%100)==0: print(year) B.if(year%4)==0 and (year%100)==0: print(year)",
        "optionA": "",
        "optionB": "",
        "optionC": "",
        "optionD": "",
        "answer": "1",
        "analyzeContent": "",
        "examDots": "35,",
        "difficultyLevel": "4",
        "weType": 0,
        "isMySubject": 0,
        "knowledgeNames": "函数使用",
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8908",
        "version": 1,
        "type": 4,
        "title": "换位密码法是将明文中的字符位置通过一定的规则重新排列从而得到密文的一种加密方法.某换位密码法加密方法如下:先把明文按照固定长度(4位一组)进行分组,然后对每一组的字符进行换位操作,从而得到密文.例如, 字符串\"ceit\",使用密钥1432进行加密时,首先将字符串以 4 个字符为一组进行分组,然后对每组的字符进行换位,第1个和第3个字符位置不变,把第2个字符和第4个字符交换位置,从而得到密文\"ctie\".小张编写的程序如下,请完善划线处的代码: def jiami(yw,key): result = '' for i in range(0, ① ,len(key)): s1=yw[i:i+ len(key) ] for j in range( ② ): result = result + ③ return result yw= input('请输入待加密的明文:') key= input('请输入密钥:') mw= ④ print(mw) 运行结果如下图所示:",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p class=\"p\">def jiami(yw,key):</p><p class=\"p\">&nbsp;&nbsp;&nbsp;&nbsp;result = '' &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p class=\"p\">&nbsp;&nbsp;&nbsp;&nbsp;for i in range(0,<span><strong>len(yw)</strong></span>,len(key)):</p><p class=\"p\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s1=yw[i:i+len(key)]</p><p class=\"p\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for j in range(<span><strong>len(key)</strong></span>):</p><p class=\"p\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = result +&nbsp;<span><strong>s1[int(key[j])</strong></span><span><strong>-1]</strong></span></p><p class=\"p\">&nbsp;&nbsp;&nbsp;&nbsp;return result</p><p class=\"p\">yw= input('请输入待加密的明文:')</p><p class=\"p\">key= input('请输入密钥:')</p><p class=\"p\">mw=&nbsp;<span><strong>jiami(yw,key)</strong></span><span><strong>&nbsp;</strong></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p class=\"p\">print(mw)</p>",
        "analyzeContent": "评分标准: (1)len(yw) ;(2分) (2)len(key) ;(3分) (3)s1[int(key[j])-1] ;(4分) (4)jiami(yw,key). (3分)",
        "examDots": "35,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8909",
        "version": 3,
        "type": 4,
        "title": "一张长方形的纸,长m米,宽n米(长宽均为整数),现在要把它刚好裁成一些正方形(边长是整数),有几种裁法,如果要使裁得的正方形面积最大,可以裁多少块.小明学习了递归后,编写程序如下,首先输入长方形的长和宽,计算出结果.请完善划线处的代码: def tj(a,b): c = 0 minn = ① if a > b: minn = b for i in range(1,minn+1): if a % i == 0 and b % i == 0: c = ② return c def gcd(a,b): if b == 0: return a return ③ chang = int(input('输入长方形的长 (单位cm)')) kuan = int(input('输入长方形的宽 (单位cm)')) bianchang = gcd(chang,kuan) total = ④ num = tj(chang,kuan) print('------------结果如下-------------') print('有{}种裁法'.format(num)) print('裁得的正方形面积最大边长是{}cm,可以裁{}块'.format(bianchang,total)) 运行后的结果如下图所示:",
        "answer": "<p><strong>参考程序:<img src=\"https://minio.liankexue.cn/npsc-common-bucket/default/2024-06-16-00-32-20/8490357316489797632.png\" alt=\"undefined\"></strong></p>",
        "analyzeContent": "评分标准: (1)a;(2分) (2)c + 1;(2分) (3)gcd(b,a%b);(3分) (4)(chang // bianchang) * (kuan // bianchang)或等价答案.(3分)",
        "examDots": "35,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      },
      {
        "id": "8910",
        "version": 1,
        "type": 4,
        "title": "商超采用会员制,客户的消费信息如会员号,姓名和积分如下表所示,小方的爸爸想编写一个客户信息管理系统,其中有一个功能是:输入会员号,查询该会员的积分. 小方知道后,就跃跃欲试,他首先从数据库读取客户信息到列表data中,其中data[i][0]存储第i条记录的会员号,data[i][1]存储第i条记录的姓名,data[i][2]存储第i条记录的积分;他首先将数组data中数据按会员号升序排序,然后用二分查找算法查找会员号对应的积分信息.代码如下,完善划线处的代码: def bubble_sort(d): for i in range(len(d)-2): for j in range(len(d)-1, ① ,-1): if d[j][0] < d[j-1][0]: d[j],d[j-1] = d[j-1],d[j] def bin_ search(d, key): i,j = 0, len(d)-1 while i <= j: m=(i +j)//2 if ② : return m if key > d[m][0]: i = m+1 else: j = m-1 return -1 #从数据库读取会员信息存列表data中,代码略 data=[[8011,'张飞',12345],[8012,'李强',34512],[7812,'李好',45321]] bubble_sort(data) key = int(input('输入会员号:')) m = ③ if m!=-1: print (data[m][1],'先生/女士:您的积分是:',data[m][2]) else: print('该会员号不正确')",
        "answer": "<p><span><strong>参考程序:</strong></span></p><p><span><span>def bubble_sort(d):</span><br><span>&nbsp; &nbsp; for i in range(len(d)-2):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; for j in range(len(d)-1,<span>&nbsp;<strong>i</strong></span>,-1):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;<span>d[j][0] &lt; d[j-1][0]</span>:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d[j],d[j-1] = d[j-1],d[j]</span><br><span>def bin_search(d, key):</span><br><span>&nbsp; &nbsp; i,j = 0, len(d)-1</span><br><span>&nbsp; &nbsp; while i &lt;= j:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; m=(i +j)//2</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;<span><strong>d[m][0] == key</strong></span>:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return m</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if key &gt; d[m][0]:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i = m+1</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; j = m-1</span><br><span>&nbsp; &nbsp; return -1</span><br><span>#从数据库读取会员信息存列表data中,代码略</span><br><span>data=[[8011,'张飞',12345],[8012,'李强',34512],[7812,'李好',45321]]</span><br><span>bubble_sort(data)</span><br><span>key = int(input('输入会员号:'))</span><br><span>m =&nbsp;<span><strong>bin_search(data,key)</strong></span></span><br><span>if m!=-1:</span><br><span>&nbsp; &nbsp; print (data[m][1],'先生/女士:您的积分是:',data[m][2])</span><br><span>else:</span><br><span>&nbsp; &nbsp; print('该会员号不正确')</span></span></p>",
        "analyzeContent": "评分标准: (1)i;(2分) (2)d[m][0] == key;(3分) (3)bin_search(data,key).(3分)",
        "examDots": "35,",
        "weType": 0,
        "isMySubject": 0,
        "answerStatus": 0,
        "compileEnvironment": 0
      }
    ],
    "calculatePercentage": 0.0,
    "completeTime": "1",
    "answerScore": 0.0,
    "title": "202303Python四级真题",
    "averageScore": 18
  },
  "code": 200,
  "msg": "操作成功"
}