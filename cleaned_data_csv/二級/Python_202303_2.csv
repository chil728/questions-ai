id,version,type,title,optionA,optionB,optionC,optionD,answer,analyzeContent,examDots,difficultyLevel,weType,isMySubject,knowledgeNames,answerStatus,compileEnvironment
8798,0,1,下列说法正确的是?( ),"{123:'a','a':123}不是一个合法的字典","数字,字符串,列表和元组都可以作为字典的键","{(12,34,'a'):'a','a':5678}是一个合法的字典",字典中的内容一经创建就不能再修改,C,"数字,字符串和元组可以作为字典的键,但是列表不能作为字典的键;字典的内容可以在创建后修改","10,",5,0,0,字典,0,0
8799,0,1,下列程序的运行结果是?( ) d1=dict(age=18) print(d1),(age=18),[age=18],age=18,{'age': 18},D,考察字典的创建.,"10,",3,0,0,字典,0,0
8800,0,1,"datas={'Name':'XiaoMing','No':'1001','Age':'14','School':'ShiYan XueXiao'},表达式len(datas)的值是?( )",8,6,4,2,C,,"10,",3,0,0,字典,0,0
8801,0,1,下列哪个是一个合法的列表?( ),"(191,98,1,0)","""1919,810""","[19,19,8,10]","{19,'19',8,10}",C,列表要用中括号括起来;列表可以有重复的元素,"10,",3,0,0,可变序列-列表,0,0
8802,0,1,"运行下列程序,输出的结果是?( ) list4=['1',3,'5',7,'2,3'] list4.append('7') print(len(list4))",4,5,6,7,C,"append()方法给list4列表添加了一个列表项,所以len(list4)的输出结果为6","10,",4,0,0,可变序列-列表,0,0
8803,0,1,"已知list7列表list7=[-3,6,3,7,5,-4,10],执行sort()方法对此列表进行排序之后,list7列表的第二个元素是?( )",-2,-3,2,5,B,"sort()方法会对列表的对象进行排序,默认按从小到大的顺序排序.排序后的结果为[-4,-3,3,5,6,7,10],第二个元素是-3","10,",3,0,0,可变序列-列表,0,0
8804,0,1,"已知列表list9=[11,4,514,191,9,81,0],下列说法错误的是?( )","print(min(list9))可以输出列表的最小值,输出结果为0","print(max(list9))可以输出列表的最大值,输出结果为514","print(list9.index(191))可以输出数值191第一个匹配项的索引位置,输出结果为3",list9.remove()可以移除列表中的最后一个元素,D,移除list9列表中的最后一个元素的方法是list9.pop()而不是list9.remove(),"10,",4,0,0,可变序列-列表,0,0
8805,0,1,下列说法正确的是?( ),'0123456'是一个长度为6的字符串,"在Python中,可以用乘号'*'把两个字符串连接起来",'What's this?'是一个合法的字符串,'*'是一个合法的字符串,D,"'0123456'是一个长度为7的字符串;在Python中,可以用加号'+'把两个字符串连接起来;单引号在字符串中使用时,需要用转义字符进行转义","10,",5,0,0,字符串,0,0
8806,0,1,下列说法错误的是?( ),while语句通常用于重复执行某一段程序,break语句可以跳出for和while的循环体,在Python中可以使用do..while循环,if语句通常用于执行条件判断,C,Python中没有do..while循环,"10,",4,0,0,循环结构,0,0
8807,0,1,"运行下列程序,共计输出了几个banana?( ) for i in range(3,9,3): print(""banana"")",1,2,3,4,B,"3,6,循环共计执行了2次","10,",3,0,0,循环结构,0,0
8808,0,1,"运行下列程序,输出的结果是?( ) x=0;y=0;a=2023 for i in range(a): if ((i%2)==0): x=x-1 else: y=y+1 print(x+y)",-1,1,0,2023,A,"通过观察代码可以发现,当a为大于0的奇数时,x与y的和始终等于-1,当a为大于0的偶数时,x与y的和始终等于0.因为2023是奇数,所以答案为-1","10,",4,0,0,"分支结构,循环结构",0,0
8809,0,1,"已知ls=[20,30,50,10,90],以下选项中,不能删除元素90的是?( )",ls.pop(-1),del ls[-1],ls.remove(ls[-1]),ls.remove(-1),D,"此题考核列表元素删除的几种方法,remove(a)函数中参数a应为列表元素,而不是列表下标","10,",4,0,0,可变序列-列表,0,0
8810,0,1,"下列代码的输出结果是?( ) ls=[2023,'Happy',['Good','Luck']] print(ls[2][1])",Happy,Good,Luck,o,C,"此题考核二维列表元素值的访问,ls[2]的值是['Good','Luck'],ls[2][1]表示引用ls[2]列表的下标为1的元素,因此结果应为Luck","10,",4,0,0,可变序列-列表,0,0
8811,0,1,"下列程序的输出结果是?(注意:0后面是两个单引号'',并非双引号)( ) ls=[0,'',{},None,(),[],'empty'] print(len(ls))",2,3,6,7,D,"空列表,空字符串,空元组,空字典都可以作为列表元素,对应的数据类型值为空,并不意味着不存在,因此也是列表的一个元素,所以列表长度为7","10,",4,0,0,可变序列-列表,0,0
8812,0,1,"ls=['富强','民主','文明','和谐','自由','平等','公正','法治'],下列切片结果为['和谐', '平等']的选项是?( )",ls[-5:-2:-2],ls[-5:-2:2],ls[4:-3:1],ls[4:-2:2],B,"此题考核列表切片,ls[起点:终点:步长],步长为正,从起点到终点的切片方向为从左向右;步长为负,从起点到终点的切片方向为从右向左,步长数值为1表示切片时获取元素为逐个获取,步长为2,表示获取元素时,两个相邻元素下标差为2,(即隔一个取一个),步长为3表示对列表切片时获取列表元素隔2个取1个,以此类推.","10,",5,0,0,可变序列-列表,0,0
8813,0,1,"下列代码的执行结果是?( ) mylist=['Failure','is','the','mother','of','success'] for x in mylist[:]: if len(x)<=3: mylist.append(x) print(mylist)","['Failure','is','the','mother','of','success']","['Failure','is','the','mother','of','success','of','is']","['Failure', 'is', 'the', 'mother', 'of', 'success', 'is', 'of']","['Failure', 'is', 'the', 'mother', 'of', 'success', 'is', 'the', 'of']",D,"此题循环获取列表mylist的全切片后判断每个元素的长度,长度小于并等于3时,添加到mylist中,因此结果为['Failure', 'is', 'the', 'mother', 'of', 'success', 'is', 'the', 'of']","10,",5,0,0,"可变序列-列表,分支结构,循环结构",0,0
8814,0,1,创建元组错误的是?( ),"tp=('a',)","tp=('',[],20) 备注:这里是单引号",tp=(25),"tp=1,2,3",C,tp=(25)等价于tp=25,"10,",3,0,0,不可变序列-元组,0,0
8815,0,1,"列表和元组都是序列对象,列表和元组的区别是?( )","元组的元素只能是不可变数据类型,例如:整型,浮点型,字符串,元组",元组一旦创建不可以修改,"列表可以切片,元组不能切片",元组之间的元素不能用逗号进行分隔,B,"元组是不可变数据类型,一旦创建不可修改","10,",4,0,0,"可变序列-列表,不可变序列-元组",0,0
8816,0,1,"请问下列四个表达式中,哪个表达式的值与其他三个表达式的值不同?( )",'字符串'+'运算',"''.join(['字符串','运算'])",'字符串运算'*1,'字符串'-'运算',D,"'字符串'-'运算'表达式错误,其他选项结果均为""字符串运算""","10,",3,0,0,字符串,0,0
8817,0,1,"Python解释器中执行如下代码: '{2},{0},{1}'.format('You','need','Python') 结果是?( )","'Python, need, You'","'Python,You,need'","'need,You,Python'","'need,Python,You'",B,"format函数输出多个值时,可以通过下标指定占位符的顺序,多个元素下标从0开始编号.","10,",5,0,0,字符串,0,0
8818,0,1,"下列代码执行的结果是?( ) dic={'聊天机器人':'GhatGPT','搜索引擎':'百度','浏览器':'Google'} for x in dic: print(x,end=' ')",GhatGPT 百度 Google,聊天机器人 搜索引擎 浏览器,"['GhatGPT','百度','Google' ]","[('聊天机器人','GhatGPT'),('搜索引擎','百度'),('浏览器','Google' )]",B,"遍历字典,默认遍历字典的键.","10,",5,0,0,"字典,循环结构",0,0
8819,0,1,不能输出0~10之间所有奇数的程序是?( ),"a = 0 while a<10: if a%2 == 0: a = a + 1 continue print(a,end=' ') a = a + 1","for a in range(0,11): if a%2 != 1: continue print(a,end=' ')","for a in range(0,11): if a%2 == 0: continue print(a,end=' ')",a = 0 while a<10: if a%2 == 1: break a = a + 1 print(a),D,"a = 0 while a<10: if a%2 == 1: break a = a + 1 print(a) 输出的结果为1.其他几个选项输出的结果是1,3,5,7,9","10,",5,0,0,计算思维,0,0
8820,0,1,"a=int(input()) if a<10: res=a+2 elif a<50: res=a-2 elif a<80: res=a*2 else: res=a//2 print(res) 程序运行时,输入60,程序执行的结果是?( )",62,58,120,30,C,"输入'60',转换为整数60,满足 60>=50 并且a<80,将60*2的值赋值给res,所以结果是120.","10,",3,0,0,分支结构,0,0
8821,0,1,"n,t=10,0 while n!=0: n=n-1 t=t+n 以上代码运行后t的值是?( )",36,45,50,55,B,,"10,",4,0,0,循环结构,0,0
8822,0,1,"已知元组tup2=(114,5,14,191,9810),下列说法错误的是?( )","print(tup2[1:-2])可以截取元组的一部分,输出的结果为(5,14)","print(tup2[2:])可以截取元组的一部分,输出的结果为(5,14,191,9810)","print(tup2[2:3])可以截取元组的一部分,输出的结果为(14,)","print(tup2[3])可以访问元组的第四个元素,输出的结果为191",B,"print(tup2[2:])可以截取元组的一部分,输出的结果为(14,191,9810)","10,",4,0,0,不可变序列-元组,0,0
8823,0,3,pop()方法可以清空列表.( ),,,,,0,"clear()方法可以清空列表.pop()方法可以移除列表中的一个元素(默认最后一个元素),并且返回该元素的值","10,",3,0,0,可变序列-列表,0,0
8824,0,3,元组要用方括号[]括起来.( ),,,,,0,元组要用圆括号()括起来,"10,",3,0,0,不可变序列-元组,0,0
8825,0,3,"(152,4.06,'20&#!^*3','4.(..$57!')是一个合法的元组.( )</td></tr></tbody></table><p><br></p>",,,,,1,元组中元素的类型可以不同,"10,",3,0,0,不可变序列-元组,0,0
8826,0,3,"执行print(""\'he"" in ""\'hello world\\"")的输出结果为True.( )",,,,,1,"in是成员运算符,如果字符串中包含给定的字符,则返回True","10,",5,0,0,字符串,0,0
8827,0,3,if语句的条件后面要使用花括号{}表示接下来是满足条件后要执行的语句块.( ),,,,,0,if语句的条件后面要使用冒号:表示接下来是满足条件后要执行的语句块,"10,",3,0,0,分支结构,0,0
8828,0,3,break语句不能在循环体之外使用.( ),,,,,1,"在Python中,break语句只能在循环体里使用,不能在循环体之外使用","10,",3,0,0,循环结构,0,0
8829,0,3,"字符串和元组是不可变对象,列表和字典是可变对象.( )",,,,,1,,"10,",3,0,0,基本数据类型,0,0
8830,0,3,"下列程序段中循环一共执行了6次.( ) for i in range(10,-1,-2): print(i)",,,,,1,"循环六次,每次i的值分别为:10,8,6,4,2,0","10,",4,0,0,循环结构,0,0
8831,0,3,"if语句的表达式为空字符串,空列表,空元组,空字典和数字0都等价于False.( )",,,,,1,,"10,",4,0,0,分支结构,0,0
8832,0,3,"字典值可以是任何的 Python 对象,既可以是标准的对象,也可以是用户定义的,但键不行.( )",,,,,1,,"10,",3,0,0,字典,0,0
8833,0,4,"某快递公司对于邮寄的包裹有尺寸要求,必须满足以下条件: 每件包裹的长,宽,高之和须小于或等于200厘米,且任意一边长度必须小于或等于80厘米.(假设所有包裹都是长方体) 编写一个重复执行的程序,可以实现自动判断包裹是否符合要求. 具体要求如下: (1)用户以厘米为单位按顺序分别输入包裹的长,宽,高(用户只输入大于零的数字,不输入长度单位,可以输入小数;分多次输入还是一次输入不做要求); (2)程序自动判断用户输入的包裹尺寸是否满足此快递公司的要求; (3)如果满足要求,就输出""可以邮寄""; (4)如果不满足要求,就输出""不可以邮寄""; (5)重复以上操作.",,,,,<p><strong><span>参考程序1:</span></strong></p><p><span>#使用嵌套if判断</span><br><span>while True:</span><br><span>&nbsp; &nbsp; a=float(input('请输入长(厘米):'))</span><br><span>&nbsp; &nbsp; b=float(input('请输入宽(厘米):'))</span><br><span>&nbsp; &nbsp; c=float(input('请输入高(厘米):'))</span><br><span>&nbsp; &nbsp; sum=a+b+c</span><br><span>&nbsp; &nbsp; if sum&lt;=200:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if a&lt;=80:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if b&lt;=80:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if c&lt;=80:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print('可以邮寄')</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print('不可以邮寄')</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print('不可以邮寄')</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; else:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print('不可以邮寄')</span><br><span>&nbsp; &nbsp; else:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print('不可以邮寄')</span><br></p><p><strong><span>参考程序2:</span></strong></p><p><span>#使用and逻辑运算</span><br><span>while True:</span><br><span>&nbsp; &nbsp; a=float(input('请输入长(厘米):'))</span><br><span>&nbsp; &nbsp; b=float(input('请输入宽(厘米):'))</span><br><span>&nbsp; &nbsp; c=float(input('请输入高(厘米):'))</span><br><span>&nbsp; &nbsp; sum=a+b+c</span><br><span>&nbsp; &nbsp; if sum&lt;=200 and a&lt;=80 and b&lt;=80 and c&lt;=80:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print('可以邮寄')</span><br><span>&nbsp; &nbsp; else:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print('不可以邮寄')</span></p>,"评分标准: (1) 能正确地要求用户分别输入长,宽,高;(2分) (2) 能正确地将用户输入的字符串转换为float或double类型;(1分) (3) 使用至少一个if判断;(2分) (4) 能正确判断包裹尺寸是否符合要求并输出正确的结果;(3分) (5) 程序可循环运行.(2分)","10,",,0,0,,0,0
8834,0,4,"编写程序帮老师对英语试卷中的英文字母,数字和其他字符(注意:包括空格)进行分类并统计每种字符的数量. 输入样例 : **Welcome to 2023~! 输出样例 : 字母: Welcometo,共9个 数字: 2023,共4个 其它字符 :**  ~!,共6个",,,,,"<p><strong><span>参考程序1:</span></strong></p><p>s=input()<br>letter=''<br>number=''<br>other=''<br>for i in s:<br>&nbsp; &nbsp; if i&gt;='a' and i&lt;='z' or i&gt;='A' and i&lt;='Z':<br>&nbsp; &nbsp; &nbsp; &nbsp; letter+=i<br>&nbsp; &nbsp; elif i&gt;='0' and i&lt;='9':<br>&nbsp; &nbsp; &nbsp; &nbsp; number+=i<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; other+=i<br>print('字母:{},共{}个'.format(letter,len(letter)))<br>print('数字:{},共{}个'.format(number,len(number)))<br>print('其它字符:{},共{}个'.format(other,len(other)))</p><p><strong><span>参考程序2:</span></strong></p><p>s=input()<br>letter=''<br>number=''<br>other=''<br>for i in s:<br>&nbsp; &nbsp; if i.isalpha():<br>&nbsp; &nbsp; &nbsp; &nbsp; letter+=i<br>&nbsp; &nbsp; elif i.isdigit():<br>&nbsp; &nbsp; &nbsp; &nbsp; number+=i<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; other+=i<br>print('字母:{},共{}个'.format(letter,len(letter)))<br>print('数字:{},共{}个'.format(number,len(number)))<br>print('其它字符:{},共{}个'.format(other,len(other)))</p>","评分标准: (1)能正确输入字符串;(2分) (2)能正确遍历字符串中的每个字符;(3分) (3)能正确判断字符是否为英文字母;(2分) (4)能正确判断字符是数字字符;(2分) (5)能正确判断字符是除字母和数字字符以外的其他字符;(2分) (6)能正确输出字符串分类的结果,其中每项1分;(3分) (7)能正确统计字母,数字和其他字符个数,其中每项1分;(3分) (8)输出格式正确.(3分)","10,",,0,0,,0,0
