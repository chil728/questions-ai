id,version,type,title,optionA,optionB,optionC,optionD,answer,analyzeContent,examDots,difficultyLevel,weType,isMySubject,knowledgeNames,answerStatus,compileEnvironment
7580,0,1,下列不是评判一个算法优劣的标准是?( ),时间复杂度,空间复杂度,难易度,健壮性,C,"评价算法的优劣是:时间复杂度,空间复杂度,健壮性,正确性,可读性.因此选C.","35,",5,0,0,"函数的相关概念,时间复杂度与空间复杂度",0,0
7584,0,1,"某自定义函数中使用了3个变量,其中2个变量都指定了默认值,调用该函数时,参数的个数最少为几个?( )",0,2,3,1,D,"在调用函数时,如果用户不传递或者少传递参数,则会采用默认值.2个变量有默认值,还有1个变量没有实际参数值,所以至少传递1个.","35,",4,0,0,函数的相关概念,0,0
7585,0,1,Python中用于字符与其ASCII码相互转换的内置函数是?( ),float() abs(),pow() format(),ord() chr(),round() import(),C,用于ASCII码相互转换的内置函数.,"35,",5,0,0,算法优化,0,0
7586,0,1,"Python中,可以将数字类字符串转换成整数的函数是?( )",int( ),float( ),bool( ),class( ),A,Python将数字类字符串转换成整数的函数是int.,"35,",3,0,0,算法优化,0,0
7588,0,1,"运行下列这段程序,正确的输出结果是?( ) LS = [""apple"", ""red"", ""orange""] def funb(a): LS.append(a) funb(""yellow"") print(LS)","[""apple"",""red"",""orange""]","[""apple"",""red"",""orange"",""yellow""]",[],"[""yellow""]",B,该函数作用是添加列表元素.,"35,",4,0,0,函数使用,0,0
7595,0,1,"下列代码的输出结果是?( ) def func(a, b): c=a**2+b b=a return c a=10 b=2 c=func(b,a)+a print(c,b)",102 2,24 10,24 2,102 10,C,函数形参和实参.,"35,",4,0,0,形参和实参,0,0
7597,0,1,下列关于函数返回值的描述正确的是?( ),"函数可以没有返回值,也可以有一个或多个返回值",函数定义中最多含有一个return语句,"在函数定义中用return语句时,至少给一个返回值",函数中 return语句只能放在函数定义的最后,A,Python函数可以没有返回值.,"35,",3,0,0,函数的返回值,0,0
7602,0,1,"运行下列这段程序,正确的输出结果是?( ) def reverseA(s): t="""" for i in range(0,len(s)): t=s[i]+t return t print(reverseA(""reverse""))",esrever,reverse,rsereve,rseveer,A,"依次读取字符串,倒置字符串内容","35,",4,0,0,算法优化,0,0
7604,0,1,下列导入pandas模块的方法不正确的是?( ),import pandas,import pandas as p,import pandas *,from pandas import *,C,from pandas import *是正确的.,"35,",4,0,0,"第三方库(模块)的获取,安装与调用",0,0
7606,0,1,"Python中提供了大量的标准库模块,比如利用time模块可以获取计算机的时钟信息,包括日期和时间,若想要实现延时1分钟,则应该使用的语句是?( )",sleep(3600),time.time(60),time.asctime(1),time.sleep(60),D,Python调用函数的格式.,"35,",4,0,0,函数的相关概念,0,0
7609,0,1,使用分治算法的基本步骤是?( ),"分解,解决,合并","分解,解决","合并,解决","合并,解决,分解",A,"使用分治算法的基本步骤是分解,解决,合并.","35,",4,0,0,分治算法,0,0
7610,0,1,二分查找法是运用哪种策略实现的算法?( ),分治法,贪心法,回溯法,动态规划法,A,"二分查找法,也叫折半查找法.每次都通过跟区间的中间元素对比,将待查找的区间缩小为之前的一半,直到找到要查找的元素.属于分治算法的思想.","35,",4,0,0,分治算法,0,0
7611,0,1,"下列程序是分治算法的典型应用,其运行结果是?( ) def dividAndConquer(arr,left,right): if (right == left + 1) or (right == left): return max(arr[left],arr[right]) mid = int((left + right) / 2) leftMax = dividAndConquer(arr,left,mid) rightMax = dividAndConquer(arr,mid,right) return max(leftMax,rightMax) arr1 = [8, 1, 14, 19, 5] print(dividAndConquer(arr1,0,4))",1,19,8,5,B,分治算法求数组最大元素的值.,"35,",5,0,0,分治算法,0,0
7612,0,1,"列程序输出的结果是?( ) def change(a,b): a=10 b+=a a=4 b=5 change(a,b) print(a,b)",4 5,10 5,4 15,10 15,A,"函数内为局部变量,所以主程序的a,b值并未改变.","35,",4,0,0,全局变量和局部变量,0,0
7613,0,1,"下列程序运行的结果是?( ) def a(): print(""here"") b() a() def b(): print(""there"") a() b()",出错,死循环,here,here there,A,"第一次调用b的时候,b还未被定义.","35,",4,0,0,函数使用,0,0
7614,0,1,设函数f定义如下:,"f(,2)","f(1,2)",f(1),"f(1,)",A,"不指定形参名称的话,参数只能省略后面的.","35,",4,0,0,形参和实参,0,0
7616,0,1,"下列程序段运行的结果是?( ) def check(x = 2,y = 3): print(x,y) check(y=6,x=5)",5 6,6 5,2 3,3 2,A,按形参名称传递参数.,"35,",4,0,0,形参和实参,0,0
7619,0,1,def AddApple(fruit=None): if fruit is None: fruit=[] fruit.append('Apple') return fruit AddApple() AddApple() print(AddApple(['Pear'])) 以上程序段运行的结果是?( ),"['Pear','Apple']","['Pear','Apple','Apple']","['Apple','Pear','Apple','Apple']",['Apple'],A,"第一,二次调用AddApple,虽然都会返回值,但并没有对返回值做任何处理. 第三次调用AddApple,程序直接用print语句把返回值输出.","35,",4,0,0,"函数的相关概念,自定义函数的创建与调用",0,0
7622,0,1,"def ThankYou(name): print(""感谢%s对公司的贡献!"" %name) ThankYou('张三') ThankYou() 以上程序运行的结果是?( )",打印输出:感谢张三对公司的贡献!,打印输出: 感谢张三对公司的贡献! 感谢对公司的贡献!,无法输出.,需要增加main函数才能正确运行.,A,"ThankYou第一次正常调用,第二次没带参数,所以报错.","35,",4,0,0,函数使用,0,0
7625,0,1,"编写程序计算1+1/2+1/3+......+1/n的结果,可以使用哪种调用函数自身的算法?( )",枚举,递归,解析,分治,B,递归算法的基本思想,"35,",3,0,0,递归与递推,0,0
7626,0,1,"用下面的程序求解计算s=1+3+5+7+9的值,请选择横线处应填写的代码?( ) def Sum(n): if n<=1: return 1 else: return ________ print(Sum(9))",n+Sum(n-1),n+Sum(n+1),n+Sum(n+2),n+Sum(n-2),D,算式的步长为2.,"35,",4,0,0,函数使用,0,0
7627,0,1,"下列选项中,哪一项不是递归函数必须要具备的条件?( )",明确的边界条件,边界值,循环语句,终止条件,C,递归函数中不一定有循环语句.,"35,",3,0,0,递归与递推,0,0
7628,0,1,"用递归算法实现5的阶乘,则下方的程序中横线上需要的代码是?( )def func(n): if n<_______: return func(n+1)*n else: return 1print(func(1))",4,5,6,7,C,"if的判断表达式为n<a+1时,程序才能执行到n=a的情况.","35,",4,0,0,递归与递推,0,0
7629,0,1,"执行以下代码,程序的输出结果是?( ) def weight(n): if n==1: return 100 else: return weight(n-1) +10 print(weight(3))",100,110,120,130,C,100+10+10,"35,",4,0,0,函数使用,0,0
7630,0,1,"以下关于递归与递推的说法,错误的是?( )","递归算法不涉及高深的数学知识,比较容易理解.",递归过程一般通过函数或子过程来实现.,"递归算法是递推分解问题,然后再将最简单情况的解回归成大问题的解.","存在既可以用递归算法解决,也可以用递推算法解决的问题.",A,"递归算法虽然不涉及高深的数学知识,但是递归思想和模型并不容易理解.","35,",4,0,0,递归与递推,0,0
7631,0,3,函数中return语句只能放在函数定义的最后.( ),,,,,0,"return语句只要在函数体内都可以,一旦执行,退出函数体.","35,",4,0,0,函数的返回值,0,0
7633,0,3,"Python定义函数时如果没有参数,也不能省略后面的空括号.( )",,,,,1,Python定义函数时空括号不可以省略.,"35,",3,0,0,函数的相关概念,0,0
7634,0,3,"函数的参数分为形参和实参两种,函数调用中实参和形参的值可以互相传递.( )",,,,,0,"函数调用时,实参和形参之间的数据是单向的值传递,实参传递给形参是单向传递.","35,",4,0,0,形参和实参,0,0
7635,0,3,"导入模块中指定成员时,可采用的语句是:import  成员名1,成员名2   from  模块名.( )",,,,,0,"导入模块中指定成员时,可采用的语句是:from  模块名    import   成员名1,成员名2","35,",4,0,0,"第三方库(模块)的获取,安装与调用",0,0
7636,0,3,"二分搜索,快速排序可以使用分治算法进行求解.( )",,,,,1,"二分搜索,快速排序是分治算法的典型案例.","35,",3,0,0,分治算法,0,0
7637,0,3,"调用带有默认值参数的函数时,不能为默认值参数传递任何值,只能使用函数定义时设定的默认值.( )",,,,,0,"调用带有默认值参数的函数时,可以为默认值参数传递其它值.","35,",4,0,0,函数的相关概念,0,0
7639,0,3,"在Python中,可以在自定义函数中再定义函数.( )",,,,,1,函数可以嵌套,"35,",4,0,0,自定义函数的创建与调用,0,0
7640,0,3,"在定义一个函数时,如果出现调用自身的成分,则称为递推.( )",,,,,0,调用自身的成分是递归的特征.,"35,",3,0,0,递归与递推,0,0
7647,0,3,"递归算法通常显得很简洁,因为多次调用自身,所以运行效率较高,应该大力提倡用递归算法设计程序.( )",,,,,0,"递归算法的效率不高,并不是首选算法,应该优先选择其他效率更高的算法.","35,",3,0,0,递归与递推,0,0
7648,0,3,"同样的问题使用不同的算法编程解决,其时间复杂度可能不一样.( )",,,,,1,"不同的算法,时间复杂度可能不一样.","35,",4,0,0,时间复杂度与空间复杂度,0,0
7649,0,4,"验证哥德巴赫猜想:任意一个大于等于4的偶数总可以分解为两个素数之和.请在下面的横线上补全代码,使得通过键盘输入一个偶数x(x<1000,输出这两个素数.如果有多组解,只需要输出一组,并且第一个素数要尽可能地小.例如,输入""10"",输出""3  7"";输入""18"",输出""5  13"". def prime(x): for i in range(2, x): if x%i == 0: return ① return 1 x=int(input(""输入一个偶数x:"")) for k in range( ② ,x//2+1): if prime(k) and prime( ③ ): print( ④ ) break",,,,,"<p><span><strong>参考程序:</strong></span></p><p><span>def prime(x):</span></p><p><span>&nbsp; &nbsp; for i in range(2, x):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if x%i == 0:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return</span><span>&nbsp;</span><span><strong>&nbsp;0</strong></span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; return 1</span><br><span>x=int(input(""输入一个数x:""))</span><br><span>for k in range(<span><strong>2</strong></span>,x//2+1):</span><br><span>&nbsp; &nbsp; if prime(k) and prime(<span><strong>x-k</strong></span>):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print(<span><strong>k,x-k</strong></span>)</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; break</span></p>","评分标准: (1) 0 或等效答案 ;(3分) (2) 2 或等效答案 ;(3分) (3) x-k 或等效答案 ;  (3分) (4) k,x-k 或等效答案 .  (3分)","35,",,0,0,,0,0
7651,0,4,"回文数是指正序(从左向右)和倒序(从右向左)读都是一样的整数,例如12321,765567就是回文数.请补全下列代码,编程实现用分治的方法判断一个整数是否是回文数. def ispel(s): num = len( ① ) if num == 0: return False if num == 1: return True if num == 2: return s[0] == ② else: return s[0] == s[num - 1] and ispel(s[1: ③ ]) st = input(""请输入一个整数:"") if ④ == True: print(""输入的是回文数"") else: print(""输入的不是回文数"")",,,,,"<p><strong><span>参考程序:</span></strong></p><p>def ispel(s):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;num = len(<span>s</span>)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 0:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return False</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 1:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return True</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 2:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return s[0] ==&nbsp;<span>s[1]</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;else:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return s[0] == s[num - 1] and ispel(s[1:<span>num - 1</span>])</p><p>st = input(""请输入一个整数:"")</p><p>if&nbsp;<span>ispel(st)</span>&nbsp;== True:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;print(""输入的是回文数"")</p><p>else:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;print(""输入的不是回文数"")</p>",评分标准: ①  s或等效答案 ; ( 2分) ②  s[1]或等效答案 ; (2分) ③  num-1或等效答案 ; ( 2分) ④  ispel(st) 或等效答案. ( 2分),"35,",,0,0,,0,0
7652,0,4,"小青蛙爬楼梯.楼梯有n级.小青蛙每次只能爬1级或2级. 当楼梯只有1级时,青蛙只有1种爬法. 当楼梯有2级时,青蛙有2种爬法:一次爬2级;一次爬1级,爬2次. 请从键盘上接收楼梯级数n,输出青蛙有几种爬法. 示例输入 请输入楼梯级数:8 示例输出 8级楼梯共有34种爬法. 程序如下: def Climb(n): if ① : return 1 elif n==2: ② else: return ③ n=int(input(""请输入楼梯级数:"")) if n>0: print(""%d级楼梯共有%d种爬法.""%( ④ , ⑤ ))","参考程序: def Climb(n): if n==1: return 1 elif n==2: return 2 else: return Climb(n-1)+Climb(n-2) n=int(input(""请输入楼梯级数:"")) if n>0: print(""%d级楼梯共有%d种爬法.""%(n,Climb(n)))",,,,"<p><span><strong>参考程序:</strong></span></p><p>def Climb(n):<br>&nbsp; &nbsp; if n==1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; elif n==2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 2<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return Climb(n-1)+Climb(n-2)<br>n=int(input(""请输入楼梯级数:""))<br>if n&gt;0:<br>&nbsp; &nbsp; print(""%d级楼梯共有%d种爬法.""%(n,Climb(n)))</p>",评分标准: ( 1)n==1;  ( 2 分) ( 2)return 2; ( 2 分) ( 3)Climb(n-1)+Climb(n-2); (2分) ( 4)n; (2分) ( 5 ) Climb(n).(2分),"35,",,0,0,,0,0
