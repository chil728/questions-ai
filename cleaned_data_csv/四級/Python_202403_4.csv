id,version,type,title,optionA,optionB,optionC,optionD,answer,analyzeContent,examDots,difficultyLevel,weType,isMySubject,knowledgeNames,answerStatus,compileEnvironment
10873,4,1,"运行如下代码,若输入整数 3 ,则最终输出的结果为?( ) def f(x): if x==1: s=1 else: s=f(x-1)*x return s n=int(input("" 请输入一个大于 1 的整数: "")) print(f(n)+f(n-1))",2,4,8,16,C,"由于 f(3)=f(2)*3,f(2)=f(1)*2,f(1)=1, 所以 f(3)+f(2)=6+2=8 .","35,",4,0,0,函数使用,0,0
10874,4,1,"运行下列程序,输出的结果是?( ) def fun(x): if x > 3: return x * fun(x-1) else: return x print(fun(6))",120,360,720,60,B,"递归函数求解,根据递归函数 6*5*4*3=360","35,",3,0,0,递归与递推,0,0
10875,4,1,下列关于递归的描述不正确的是?( ),递归函数一定包含 if 语句,递归函数体内一定包含调用自身的语句,在调用自身函数时需要明确的边界终止条件与边界值,"递归算法一般代码简洁,执行效率高,空间复杂度低",D,"递归算法一般代码简洁,易于理解,但执行效率较低,空间复杂度高.","35,",3,0,0,递归与递推,0,0
10876,4,1,"运行下列程序,输出的结果是?( ) def fun(a, n): s = 0 for i in range(1, n+1): temp = str(a)*i s += int(temp) return s print(fun(1, 3))",3,6,12,123,D,"递推函数求解,本题是求 1+11+111 之和.","35,",4,0,0,函数使用,0,0
10877,4,1,"运行下列程序,输出的结果是?( ) def fun(a, b): s = 0 a = a[::-1] for i in range(len(a)): s += int(a[i])*b**i return s print(fun('45', 16))",69,45,64,61,A,"递推函数求解,本题是根据一个字符串和进制,转换成对应的十进制.","35,",4,0,0,函数使用,0,0
10878,4,1,"一个荷花池,第一天荷花开放得很少,第二天开放的数量是第一天的两倍,之后的每一天,荷花都会以前一天两倍的数量开放.如果到第 30 天,荷花就开满了整个池塘,设第一天开一朵,编程求第 30 天共开了多少朵荷花.下面空白处的代码填写正确的是?( ) s = 0 t = 1 for i in range(1, ① ): s += t ② print(s)","30, t = t*2","31, t = t*2","31, t+=2","30, t*=2",B,"递推函数求解,本题递推关系是 t = t*2, 循环次数是 30 次.","35,",5,0,0,"函数使用,递归与递推",0,0
10879,4,1,"解决下列问题时,时间复杂度最大的是?( )","输入 n 个不同的包含两位小数的实数,计算这 n 个数的和","在 n 个数据中,查找数据 k",将 n 个数据用冒泡排序实现排序,"计算算式 1-2+3-4+...-n 的结果, n 为偶数",C,算法优化.,"35,",5,0,0,"时间复杂度与空间复杂度,算法优化",0,0
10880,4,1,以下关于分治算法的描述正确的是?( ),各个子问题既相互独立又相互联系,问题可以分解成若干个规模较小的相同问题,可以直接对问题进行求解,子问题的解不能合并成原问题的解,B,"分治算法的特征,各个子问题相互独立,子问题的求解可以合并成原问题的解.","35,",3,0,0,分治算法,0,0
10881,4,1,下列选项中哪一项使用了分治算法?( ),二分搜索,选择搜索,插入搜索,顺序搜索,A,二分查找体现了分治算法.,"35,",4,0,0,分治算法,0,0
10882,7,1,"不超过 20 个元素的降序数列,使用对分查找能找到指定的元素,可能的查找次数不包括?( )",3,4,5,6,D,,"35,",5,0,0,分治算法,0,0
10883,4,1,下面程序段的输出结果是?( ) def add_Run(L=None): if L is None: L = ['Lying'] else: L.append('Run') return L add_Run() print(add_Run()) print(add_Run(['Lying'])),'Lying'] ['Run'],"['Lying'] ['Lying'] ['Lying', 'Run']","['Lying'] ['Lying', 'Run']","[] ['Lying', 'Run']",C,"if 分支定义列表, else 分支添加列表元素.","35,",4,0,0,算法优化,0,0
10884,4,1,"下面关于计数器的程序,输出结果正确的是?( ) count = 0 def increment(): global count count += 1 print("" 计数器的值: "", count) increment() increment() increment()",计数器的值: 1 计数器的值: 2 计数器的值: 3,计数器的值: 0 计数器的值: 1 计数器的值: 2,计数器的值: 1 计数器的值: 1 计数器的值: 1,计数器的值: 3,A,在函数内部可以通过关键字 global 来定义全局变量.,"35,",4,0,0,全局变量和局部变量,0,0
10885,4,1,"下列程序段的输出结果是?( ) L = [] x = 3 def  test(x): L.append(x) x = 5 test(x) print('L = {}, x = {}'.format(L, x))","L = [3], x = 3","L = [5], x = 5","L = [3], x = 5","L = 3, x = 5",A,"函数内部定义变量 x 的值为 5 ,只能作用于函数内部.","35,",4,0,0,函数使用,0,0
10886,4,1,"以下程序,运行程序输出结果正确的是?( ) def demo(x): return x*2 print(demo(demo(1)))",return  None,2,4,8,C,"调用二次, 1 乘以二次 2 ,因此结果为 4 .","35,",4,0,0,"函数使用,自定义函数的创建与调用",0,0
10887,4,1,Python 使用下列哪个函数接收用户输入的数据?( ),accept(),input(),print(),login(),B,"在 Python 中 , 用于获取用户输入的函数是 input() .","35,",3,0,0,算法优化,0,0
10888,4,1,"下面程序段的输出结果正确的是?( ) def  power(): x ='python' y = 'world' z = x + "" "" + y return z print(power())",z,"x + "" "" + y",python world,"python"" ""world",C,该函数作用为连接字符串.,"35,",4,0,0,函数使用,0,0
10889,4,1,"下列关于 Python 函数的描述中,不正确的是?( )",自定义函数时用到的关键字是 def,"在 python 函数中,至少有一条 return 语句","函数 print ()可以一次输出多个参数,如 print('1',""2"",3,[4])","用函数 eval ()可以用于求字符串里表达式的值,如 eval ( '3+5-1' )",B,"函数可以有返回值,也可以没有返回值.需要返回值的函数,可以包含一条或者多条 return 语句;没有返回值的函数,不需要包含 return 语句.","35,",3,0,0,自定义函数的创建与调用,0,0
10890,4,1,"关于以下代码的描述中,正确的是?( ) # 求两个正方形的面积差 def MianJiCha(a,b): s=a**2-b**2 return s a=5 b=10 c=MianJiCha(b,a)+a","代码运行后,变量 c 的值是 80","函数名是 MianJiCha(a,b)",可以用 MianJiCha(100) 的形式调用此函数,代码运行时会报错,A,s=10**2-5**2+5=100-25+5=80,"35,",4,0,0,函数使用,0,0
10891,4,1,"下列关于 Python 函数的说法中,错误的是?( )","利用函数可以降低编程复杂度,增加代码可读性",函数可以重复调用,函数可以降低修改代码的工作量,"调用函数时,每次都必须输入相同的参数值",D,"有些函数需要输入参数才能调用,有些不需要.需要输入参数的函数在多次调用时,允许输入合法的不同参数.这也正是函数可复用的实现形式.","35,",4,0,0,函数的相关概念,0,0
10892,4,1,"下列选项中,调用下列代码定义的函数时,程序会报错的是?( ) def ShuChu(a,b,c): print(c,b,a)","ShuChu('1','2','3')","ShuChu('1','2','3,4')","ShuChu(1,2,3)","ShuChu(1,2,3,4)",D,"在使用位置实参的方式传值时,传入的实参个数必须与形参相同,否则运行程序会报错.","35,",4,0,0,函数的相关概念,0,0
10893,4,1,"下列选项中,调用以下代码定义的函数时,程序会报错的是?( ) def kp(a,b,c): print(a,b,c)","kp(1,b=2,3)","kp(a=3,b=1,c=2)","kp(1,2,3)","kp(1,b=2,c=3)",A,"在函数调用时,采用位置实参与关键字实参混合传入参数时,位置实参必须放在关键字实参之前.","35,",3,0,0,"函数的相关概念,自定义函数的创建与调用",0,0
10894,4,1,"下列代码的输出结果是?( ) >>>s=lambda m,n:m*n >>>s(6,6)",6,"6,6",36,12,C,"匿名函数中,冒号前面是参数列表,冒号后面是函数的返回值. m=6,n=6,s=m*n=6*6=36","35,",4,0,0,匿名函数,0,0
10895,4,1,以下函数定义错误的选项是?( ),"def aFunc(m,n): print(m,n)","def aFunc(m,n=2): print(m,n)","def aFunc(*m,n): print(m,n)","def aFunc(m,*n): print(m,n)",C,"*m 表示是可变参数,可传入值的个数不确定.可变参数只能放在不可变参数的后面,不然解释器将不能识别哪些值传给可变参数,哪些值传给不可变参数.","35,",4,0,0,自定义函数的创建与调用,0,0
10896,4,1,用于安装 Python 第三方库的工具是?( ),install,pip,Wheel,setup,B,pip 是 Python 自带的第三方库的安装工具.,"35,",3,0,0,"第三方库(模块)的获取,安装与调用",0,0
10897,4,1,"编程时,如果只需要导入某第三方库中的某个成员,需要使用到的关键字是?( )",from,as,into,inport,A,"导入外部模块的某个成员,使用 from 关键字.","35,",3,0,0,"第三方库(模块)的获取,安装与调用",0,0
10898,4,3,"若某个问题既能用递归算法求解,又能用递推算法求解,则使用递归方法求解更容易,效率也高得多.( )",,,,,0,递归求解效率要低.,"35,",3,0,0,递归与递推,0,0
10899,4,3,"如下代码因为递归的边界条件设置错误,产生了无限递归程序报错.( ) def fun(n): if n > 10: return 0 else: return n + fun(n-1) print(fun(10))",,,,,1,"递归的边界条件设置错误,产生了无限递归程序报错.","35,",4,0,0,递归与递推,0,0
10900,4,3,算法的时间复杂度与空间复杂度没有必然关系.( ),,,,,1,算法的时间复杂度与空间复杂度没有必然关系.,"35,",3,0,0,时间复杂度与空间复杂度,0,0
10901,4,3,"已知有 n 本按照书名拼音排序好的图书,使用对分查找法搜索其中任何一本书,最多查找次数为 4 次,则 n 的值有可能为 10 .( )",,,,,1,根据二分查找最坏查找次数可得.,"35,",5,0,0,分治算法,0,0
10902,4,3,"函数定义语句 def  f(c=1,d=2,a,b): 是正确的,因为默认值形参要放在前面.( )",,,,,0,"函数定义,默认值形参要放在后面.","35,",4,0,0,函数的相关概念,0,0
10903,4,3,"return 语句可以返回任何数据类型的值,包括整数,浮点数,字符串,列表,元组,字典等.( )",,,,,1,"return 语句可以用于在函数执行结束后返回一个值.这个值可以是任何类型 , 例如整数,浮点数,字符串,列表等等.","35,",4,0,0,函数的返回值,0,0
10904,4,3,"def ZiDian(**kwargs): print(kwargs) ZiDian(a=1) 运行上面的代码后,输出结果为 {'a':1} .( )",,,,,1,"当不确定需要传入的值是多少时,在定义形参时,可以使用 *args (列表), **kwargs (字典)来表示.在元素前加上 ** 后,传入的值以字典的形式显示出来.","35,",4,0,0,函数使用,0,0
10905,4,3,"以下代码可以正常运行 , 输出 8 .( ) def qh(a,b=3): print(a+b) qh(b=2,6)",,,,,0,"在形参列表中必须先列出没有默认值的形参,再列出有默认值的形参.不然,程序会报错.","35,",4,0,0,函数使用,0,0
10906,4,3,"代码 >>>lambda:x=2,y=3:x+y 的运行结果是 5 .( )",,,,,0,"匿名函数中冒号前面的部分表示参数列表,不能有赋值语句,不然会报"" can't assign to lambda ""错误.","35,",5,0,0,匿名函数,0,0
10907,4,3,使用 pip install --upgrade numpy 命令能够升级 numpy 科学计算库.( ),,,,,1,pip 的 install --upgrade numpy 指令用来升级外部模块.,"35,",4,0,0,"第三方库(模块)的获取,安装与调用",0,0
10908,4,4,"数的分解 给出一个正整数 a ,要求分解成若干个正整数的乘积,即 a=a1 × a2 × a3 × ... × an ,并且 1<a1 ≤ a2 ≤ a3 ≤ ... ≤ an ,问这样分解的种类有多少.注意到 a=a 也是一种分解. 例如, 8 可以分解成 8=2*2*2,8=2*4,8=8 总共 3 种. 代码如下,完善划线处的代码: def fun(x, y=2): if x == 1: global ans ① for i in range(y, x+1): if ② : fun(x//i,i) lst = [2, 8, 9, 20] # 测试数据 for i in lst: ans = 0 ③ print(ans) 程序运行结果如下: 1 3 2 4",,,,,"<p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span>参考程序:</span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">def fun(x, y=2):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; if x == 1:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; global ans</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;ans += 1</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; for i in range(y, x+1):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;x % i == 0:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fun(x//i, i)</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">lst = [2, 8, 9, 20]&nbsp;#</font><font face=""宋体"">测试数据</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">for i in lst:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; ans = 0</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp;&nbsp;fun(i)</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; print(ans)&nbsp;</font></span><span><o:p></o:p></span></p>",评分标准: ( 1 ) ans += 1 或等效答案;( 2 分) ( 2 ) x % i == 0 或等效答案;( 3 分) ( 3 ) fun(i) 或等效答案.( 3 分),"35,",,0,0,,0,0
10909,3,4,"购物组合 小明单位发了 100 元的购物卡,小明到超市买三类洗化用品:洗发水( 15 元),香皂( 2 元),牙刷( 5 元).要把 100 元正好花掉,可有哪些购买组合? def  gouwu(money): for i in range(0,money//15+1): for j in range(0,money//2+1): for  k  in  range(0, ① ): if ② : print(' 可选择的购买组合 :\t 购买洗发水 {} 瓶,香皂 {} 块,牙刷 {} 个. '.format( ③ )) gouwu(100)",,,,,"<p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span>参考程序:</span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">def&nbsp; gouwu(money):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; for i in range(0,money//15+1):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for j in range(0,money//2+1):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for&nbsp; k&nbsp; in&nbsp; range(0,money//5+1):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;i*15+j*2+k*5==money:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print('</font><font face=""宋体"">可选择的购买组合</font><font face=""Calibri"">:\t</font><font face=""宋体"">购买洗发水 </font><font face=""Calibri"">{} </font><font face=""宋体"">瓶,香皂 </font><font face=""Calibri"">{} </font><font face=""宋体"">块,牙刷 </font><font face=""Calibri"">{}</font><font face=""宋体"">个.</font><font face=""Calibri"">'.format(i,j,k))</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">gouwu(100)</font></span><span><o:p></o:p></span></p>","评分标准: ( 1 ) money//5+1 或等效答案;( 3 分) ( 2 ) i*15+j*2+k*5==money 或等效答案;( 4 分) ( 3 ) i,j,k 或等效答案.( 3 分)","35,",,0,0,,0,0
10910,3,4,"回文素数 回文素数是指一个不小于 11 的自然数 n 从左向右和从右向左读,其结果值相同且是素数,即称 n 为回文素数.一种求解的方法是先判断一个自然数是否为回文数,再判断它是否为素数.如果两个判断都成立,则该自然数是回文素数.请补全代码,找出自然数 1000 以内的所有回文素数. # 判断是否为素数 def ① (n): for i in range(2,n): if ② : break else: return True # 判断是否为回文数 def HuiWenShu(n): n=str(n) if n== ③ : return True else: return False for i in range(11,1001): if ZhiShu(i)==True ④ : print('{} 是回文素数! '.format(i))",,,,,"<p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span>参考程序:</span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">#</font><font face=""宋体"">判断是否为素数</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">def&nbsp;ZhiShu(n):&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; for i in range(2,n):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;n%i==0:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; else:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; return True</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span>&nbsp;</span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">#</font><font face=""宋体"">判断是否为回文数</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">def HuiWenShu(n):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; n=str(n)</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; if n==n[::-1]:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; return True</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; else:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; return False</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">for i in range(11,1001):</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; if ZhiShu(i)==True&nbsp;and HuiWenShu(i)==True:</font></span><span><o:p></o:p></span></p><p class=""MsoNormal"" align=""justify"" style=""text-align: justify;""><span><font face=""Calibri"">&nbsp; &nbsp; &nbsp; &nbsp; print('{}</font><font face=""宋体"">是回文素数!</font><font face=""Calibri"">'.format(i))</font></span><span><o:p></o:p></span></p>",评分标准: ( 1 ) ZhiShu 或等效答案;( 2 分) ( 2 ) n%i==0 或等效答案;( 2 分) ( 3 ) n[::-1] 或等效答案;( 4 分) ( 4 ) and HuiWenShu(i)==True 或等效答案.( 4 分),"35,",,0,0,,0,0
