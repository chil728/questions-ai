id,version,type,title,optionA,optionB,optionC,optionD,answer,analyzeContent,weType,isMySubject,answerStatus,compileEnvironment
1872521343197433858,0,1,"以下有关位置实参和关键字实参的表述中,错误的选项是?( )",位置实参和关键字实参可以混用,形参不占用内存地址,"调用函数时,如给函数提供了实参,则优先使用实参,同时更改形参的默认值,便于下次调用","形参设定默认值,是为了简化函数的调用",C,使用实参不会改变形参的默认值.,0,0,0,0
1872521459398254593,0,1,"Python中,无需导入math库,可以直接使用的函数是?( )",ceil(),floor(),round(),sqrt(),C,"round()函数是Python内置函数,无需导入第三方库.",0,0,0,0
1872521556012224513,0,1,"如下代码,运行之后,最终打印结果是?( ) def P(a,b=3): a=2 return a*b print(P(3,4))",6,8,4,12,B,"a=3,b=4,传递给函数P,a重置为2,返回2*4=8.",0,0,0,0
1872521941049331714,0,1,"调用以下自定义函数时,将实参与形参进行关联,方式错误的是?( ) def f(a,b,c): print(a,b,c)","f(1,2,3)","f(b=2,a=1,c=3)","f(1,b=2,3)","f(1,2,c=3)",C,"位置实参要在关键字实参的前面,不然会报错.",0,0,0,0
1872522032109113346,0,1,"以下选项中,关于python函数参数的说法正确的是?( )",定义函数时不能省略参数,"在调用函数之前,需对函数进行定义","可以给函数形参设置默认值,当函数调用时给定实参新的数值时,函数将使用默认值","函数中允许位置实参和关键字实参混用,没有先后顺序",B,"定义函数时,可以省略参数.有默认值和实参的时候,优先使用实参,位置实参和关键字实参混用,位置实参必须在关键字实参前面.",0,0,0,0
1872522172068843521,0,1,"关于计算圆锥体积的匿名函数的定义和使用,以下哪一个语法格式是正确的?( )","lambda r,h:3.14*r*r*h/3 print(lambda(5,10))","lambda r,h=9,3.14*r*r*h/3 print(lambda(5))","V=lambda r,h=9:3.14*r*r*h/3 print(V(5,10))","V=lambda r,h=9,3.14*r*r*h/3 print(V(5))",C,"匿名函数,冒号之前表示的是这个函数的参数,冒号之后表示返回值,可以使用默认值,使用时需要将它赋值给一个变量,设置默认值不是必须,如无传入实参则使用默认值,如有传入实参则使用实参.",0,0,0,0
1872522311167299585,0,1,以下关于列表p内元素排序程序的时间复杂度为?( ) for a in range(n-1): for b in range(n-1-i): if(p[b]<p[b+1]): tmp=p[b] p[b]=p[b+1] p[b+1]=tmp,O(n),O(nlogn),O(n^2),O(n^3),C,"内循环的作用是比较相邻两个数的值,如果前数小于后数,就交换两个数.所以双重循环的时间复杂度是O(n^2).",0,0,0,0
1872522465396051970,0,1,下列哪个命令能显示电脑上已安装的Python库?( ),pip list,pip dir,pip print,pip config,A,查看已经安装的库命令是pip list.,0,0,0,0
1872522587328663554,0,1,"Python中导入math模块中的sqrt(x)函数,下列程序段错误的是?( )",import math math.sqrt(x),from math import sqrt as sq sq(x),import math as m m.sqrt(x),import math sqrt(x),D,第三方库的导入方法.,0,0,0,0
1872522736847212545,0,1,"有如下Python程序,执行该程序后输出的结果是?( ) def jc(a): if a ==1 : return 1 else: return a * jc(a-1) print(jc(jc(3)))",3,6,120,720,D,递归思想.,0,0,0,0
1872522809052155906,0,1,"下列程序用递推的方法求数列的值,执行该程序后输出结果是?( ) def fib(n): a=b=1 for i in range(3,n+1): c=a+b a=b b=c print(c) fib(7)",21,13,8,5,B,fib函数是递推思想求斐波那契数列第n项数列.,0,0,0,0
1872522887116541954,0,1,"阅读下列程序,运行结果正确的是?( ) def f(x): if x==1: return 0 else: return (x*x-1)+f(x-1) print(f(3))",10,11,12,13,B,"通过递归求前n项平方减1的和,前3项分别是0,3,8,求和后答案为11.",0,0,0,0
1872522992516648961,0,1,下列关于递推算法思想的描述正确的是?( ),"将一个大问题分解为若干子问题,且子问题与大问题是相同的问题,构成递推算法思想",递推算法思想需要有明确的终止条件,递推算法思想需要有明确的递推公式,任何问题都可以用递推算法解决,C,递推算法思想需要有明确的递推公式.,0,0,0,0
1872523106193428481,0,1,"某农户养了若干只鸡.第一天卖掉其中一半加一只,以后每天都卖掉剩下的一半加一只.到第8天的时候发现只剩一只鸡了.请问该农户一开始有多少只鸡? 这个问题用下列什么算法解决?( )",递推,解析,枚举,分治,A,这个问题体现了递推思想.,0,0,0,0
1872523204965093378,0,1,以下关于global关键字表述正确的是?( ),global关键字只能在程序最开始初定义,global关键字只能在变量使用前定义,global关键字通过局部变量修改全局变量的值,global关键字通过全局变量修改局部变量的值,C,Python中global关键字的基础知识.,0,0,0,0
1872523291264339970,0,1,"运行下列代码,输出结果为?( ) def fun(x, y, z): print(z, x) fun(1, 2, 3)",1 2,3 2,3 1,1 3,C,"在调用函数时,通过位置实参的方式,将实参映射到形参,一一对应.",0,0,0,0
1872523390703280129,0,1,"以下是比较两个数的大小的函数,输出结果为?( ) def fun(a, b, c): if a > b: c = a else: c = b print(fun(1, 2, 3))",1,2,3,None,D,"函数用return语句将值返回调用函数的代码行,这里没有return语句,所以返回None.",0,0,0,0
1872523615272882177,0,1,"小明的妈妈在超市里买了一些商品,商品的价格放在列表里,现在超市对商品进行打折处理,请运行如下代码输出结果?( ) def fun(lst): total = 0 for x in lst: if x >= 100: total += x * 0.5 else: total += x return total goods = [140, 90, 120, 60] print(fun(goods))",390.0,280.0,260.0,150.0,B,"列表作为函数参数使用,这里对列表中大于等于100的数字除2相加,否则原数相加,所以结果为280.0.",0,0,0,0
1872523690717650945,0,1,"运行以下代码,请输出结果?( ) def fun(n): s = 0 for i in range(n): s += i return s print(fun(10)",55,45,50,60,B,"range()函数是左闭右开.n在这里没有被取到,所以此题是1+2+3+...+9=45.",0,0,0,0
1872523768362225665,0,1,"运行以下代码,请输出结果?( ) def fun(x): return x * x print(fun(fun(fun(2))))",16,32,128,256,D,"函数被调用了3次,2*2, 4*4, 16*16,所以答案是256.",0,0,0,0
1872524232311349249,0,1,"运行以下代码,请输出结果?( ) x = 0 def fun(): global x x += 10 print(x) fun() print(x)",0 0,0 10,10 10,10 0,B,"在函数中使用global关键字,在定义局部变量的同时也修改了全局变量的值.",0,0,0,0
1872524384295768065,0,1,"小明喜欢画画,他有一张大画布,画布上有一个大正方形.他想知道如果把这个大正方形分成4个小正方形,然后再把这4个小正方形各自再分成4个更小的正方形,这样一直分下去,最后会得到多少个正方形?根据解题思路请在下面横线上填上正确代码?( ) def fun(n): if n == 0: return 1 else: return _________ print(fun(4))",fun(n-4) * 4,fun(n-1) * 4,fun(n-1) * 2,fun(n-2) * 2,B,"这个问题可以用分治算法来解决.每次分割都会把当前的正方形数量乘以4(因为每个正方形都会被分成4个更小的正方形).所以,如果我们从1个正方形开始,分割n次,最后得到的正方形数量就是 4^n.",0,0,0,0
1872524491208957954,0,1,"下面关于递归函数的说法,正确的是?( )","一般来说,递归函数的执行效率高于非递归函数","递归算法一般代码简洁,执行效率高,空间复杂度低",递归函数必须明确嵌套调用的次数,递归函数必须有明确的边界终止条件,D,"递归算法的优点是代码简洁,容易验证正确性.缺点是运行需要较多次数的函数调用,如果调用层数比较深,需要增加额外的堆栈处理,空间复杂度较高,会对执行效率有影响.同时递归函数的调用不需要明确次数,但是要有明确的边界条件.",0,0,0,0
1872524670821257217,0,1,"现有24颗药丸,重量都是0.1g,其中一颗药丸不小心被污染了,外观没有变化,但是重量变重了.如果有一架天平,最多只能称重四次,要把这个被污染的药丸找出来.这个问题可以用下列哪种算法思想解决?( )",枚举,分治,递归,递推,B,"这个问题可以用二分法解决,先将24颗药丸平均分为两组,天平找出偏重的一组;接着将这组继续平均分为两组,依次类推,到第四次时,剩三颗药丸,用天平称量其中两颗,如果一边重,则找到被污染的药丸;如果两边一样重,则第三颗药丸就是被污染的.",0,0,0,0
1872524748998889473,0,1,"物理实验课的电路故障分析,有一块电路板的AB两点间串联线路不通,是由于其中一处焊口脱落造成的.假设AB线路间有100个焊接点,现用二分法检测,找出焊口脱落点,至多需要检测多少次?( )",7,8,9,10,A,"用二分法分析,查找100个点所需次数,用公式log 2 100+1,取整求得7.",0,0,0,0
1872524926749298690,0,3,"在混合使用位置实参,关键字实参时,对应函数中有默认值的形参与没有默认值的形参位置没有要求,都可以通过关键字实参传值.( )",,,,,0,"有默认值的形参应该在没有默认值的形参后面,不然会报错.",0,0,0,0
1872524972864229378,0,3,"时间复杂度是用来衡量算法效率的重要指标,可以反应数据规模和代码执行时间之间关系.( )",,,,,1,"时间复杂度是衡量算法效率的指标,指出算法解决问题执行的计算工作量和问题规模的关系.",0,0,0,0
1872525029567025153,0,3,"定义函数或过程时,如果函数在内部调用函数本身,这个函数就是递归函数.( )",,,,,1,递归函数.,0,0,0,0
1872525064033062913,0,3,"求斐波那契数列第n项可以用递归思想解决,也可以用递推思想解决.( )",,,,,1,递归与递推思想.,0,0,0,0
1872525130861289474,0,3,安装Python第三方库只能使用pip命令.( ),,,,,0,安装第三方库有三种方法.,0,0,0,0
1872525171638312962,0,3,"运行如下代码: fun = lambda x, y = 10 : y - x print(fun(5, 8)) 运行结果为:5.( )",,,,,0,"本题考核匿名函数的定义,使用方法以及默认参数.y默认值为10,但传入x=5,y=8所以y的默认值为8,结果y-x=3.",0,0,0,0
1872525226247770114,0,3,"Python3.5之后的版本新增了对函数参数和返回值的类型指定和检查,新建变量时也可以指定类型.以下代码,只能接受str类型的参数,否则就会报错.( ) def say(name:str, greet:str)->str: return name + greet print(say(""小明"", ""你好!""))",,,,,0,"虽然python在新建变量时可以指定类型,但python本质上还是动态类型语言,所以参数类型不匹配也不会报错.",0,0,0,0
1872525265967828994,0,3,"运行如下代码,输出结果为5.( ) x = 1 y = 5 def fun(): global x x = 4 y = 3 if y > x: return y else: return x print(fun())",,,,,0,"global关键字可以在函数内修改同名全局变量,所以此时x=4,函数内y是局部变量会屏蔽全局变量y=3,所以最后返回x的值4.",0,0,0,0
1872525303154909185,0,3,"将一个难以直接解决的大问题,分类整理成几种规模较小的不同类问题,再分别击破的方法,就是分治算法.( )",,,,,0,"分治算法是将一个大问题,分解成一些规模较小的同类问题,以便各个击破.",0,0,0,0
1872525334497120257,0,3,"函数中return语句可以有任意个,但是在函数运行过程中只会执行其中一个.( )",,,,,1,"函数内部return语句数量没有限制,一旦执行,退出函数体.",0,0,0,0
1872525545422102529,0,4,"时钟问题 小明上学时间是8:00,放学时间不固定,他很想知道从上学到放学,时钟的时针,分针和秒针一共有多少次指向了3点钟的位置.他尝试编写了如下程序,请你完善划线处的代码,计算出在h点s分放学时,三个时针分别经过3点位置的次数,用一个元组表示各指针经过3点位置的次数 (时针次数,分针次数,秒针次数) ,并输出. def fn(h1, m1 ,h2 ,m2 ): if(h2<15): ① else: hc=1 th=         ② if(         ③        ): mc= th+1 else: mc=th sc=        ④ return (hc,mc,sc) h=int(input(""h="")) s=int(input(""s="")) print(fn(8,0,h,s))",,,,,,"参考程序: def fn(h1, m1 ,h2 ,m2 ): if(h2<15): hc=0 else: hc=1 th= h2-h1 if( m2>=15 ): mc= th+1 else: mc=th sc= th*60+(m2-m1) return (hc,mc,sc) h=int(input(""h="")) s=int(input(""s="")) print(fn(8,0,h,s)) 试题解析: 评分标准: (1)hc=0 或等效答案;(3分) (2)h2-h1 或等效答案;(3分) (3)m2>=15 或等效答案;(3分) (4)th*60+(m2-m1) 或等效答案.(3分)",0,0,0,0
1872525908682383361,0,4,"对称字符串 对称字符串是指从左往右读和从右往左读是一样的字符串.小方同学学习了递归思想后,利用递归思想来解决对称问题.在一串包含大小写字符和数字等字符组成的字符串中,他首先筛选出只包含大小写字符组成的字符串,然后判断该字符串是否是对称字符串.他编写的代码如下,请完善划线处的代码. def getzf(yw):   #筛选出原始字符串yw中大写小写字符组成的字符串 rst = '' for i in yw: if 'z'>=i >='a' or 'Z'>=i >='A': ① return rst def nxzf(data):  #生成字符串data的逆序字符串 if len(data) == 1: return data[0] return ② yw =input('请输入字符串') yw = getzf(yw) nxzfc = nxzf(yw) if ③ : print('原字符串中存在对称字符串',yw) else: print('不存在对称字符串')",,,,,,"参考程序: def getzf(yw):   #筛选出原始字符串yw中大写小写字符组成的字符串 rst = '' for i in yw: if 'z'>=i >='a' or 'Z'>=i >='A': rst+=i return rst def nxzf(data):  #生成字符串data的逆序字符串 if len(data) == 1: return data[0] return nxzf(data[1:])+data[0] yw =input('请输入字符串') yw = getzf(yw) nxzfc = nxzf(yw) if nxzfc == yw : print('原字符串中存在对称字符串',yw) else: print('不存在对称字符串') 评分标准: (1)rst += i 或 rst= rst +i 或等效答案;(2分) (2)nxzf(data[1:])+data[0] 或等效答案;(3分) (3)nxzfc == yw 或等效答案.(3分)",0,0,0,0
1872526038596755458,0,4,"角谷猜想 所谓角谷猜想,是指对于任意一个正整数,如果是奇数,则乘3加1,如果是偶数,则除以2,得到的结果再按照上述规则重复处理,最终总能够得到1.如,假定初始整数为5,计算过程分别为16,8,4,2,1.程序要求输入一个整数,求经过多少次可得到自然数1. 根据题意,请完善划线处的代码. def fun(n, cnt): if         ①        : print(cnt) return else: if n % 2 == 0: n //=2 ② else: ③ fun(n, cnt+1) fun(5,         ④        )",,,,,,"参考程序: def fun(n, cnt): if n == 1 : print(cnt) return else: if n % 2 == 0: n //=2 fun(n, cnt+1) else: n = n * 3 + 1 fun(n, cnt+1) fun(5, 0 ) 试题解析: 评分标准: (1)n == 1 或等效答案;(3分) (2)fun(n, cnt+1) 或等效答案;(2分) (3)n = n * 3 + 1 或等效答案;(3分) (4)0 或等效答案.(2分)",0,0,0,0
