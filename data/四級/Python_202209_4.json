{
    "data": {
        "averageCompleteTime": 522.0,
        "subjectList": [
            {
                "id": "7580",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>下列不是评判一个算法优劣的标准是？（ ）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">时间复杂度<br><br></td></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">空间复杂度<br><br></td></tr></tbody></table><p><br></p>",
                "optionC": "<p>难易度</p>",
                "optionD": "<p>健壮性</p>",
                "optionE": "<p><br></p>",
                "answer": "C",
                "userAnswer": "",
                "analyzeContent": "<p>评价算法的优劣是：时间复杂度，空间复杂度，健壮性，正确性，可读性。因此选C。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "5",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的相关概念,时间复杂度与空间复杂度",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7584",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>某自定义函数中使用了3个变量,其中2个变量都指定了默认值,调用该函数时,参数的个数最少为几个？（ ）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><p>0</p></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><p>2</p></tr></tbody></table><p><br></p>",
                "optionC": "<p>3</p>",
                "optionD": "<p>1</p>",
                "optionE": "<p><br></p>",
                "answer": "D",
                "userAnswer": "",
                "analyzeContent": "<p>在调用函数时，如果用户不传递或者少传递参数，则会采用默认值。2个变量有默认值，还有1个变量没有实际参数值，所以至少传递1个。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的相关概念",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7585",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">Python中用于字符与其ASCII码相互转换的内置函数是？（ ）</td></tr></tbody></table><p><br></p>",
                "optionA": "<p>float() abs()</p>",
                "optionB": "<p>pow() format()</p>",
                "optionC": "<p>ord() chr()</p>",
                "optionD": "<p>round() import()</p>",
                "optionE": "<p><br></p>",
                "answer": "C",
                "userAnswer": "",
                "analyzeContent": "<p>用于ASCII码相互转换的内置函数。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "5",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "算法优化",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7586",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<table style=\"width: auto;\"><tbody><tr><p>Python中，可以将数字类字符串转换成整数的函数是？（ ）</p></tr></tbody></table><p><br></p>",
                "optionA": "<p>int( )</p>",
                "optionB": "<p>float( )</p>",
                "optionC": "<p>bool( )</p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">class( )<br><br></td></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>Python将数字类字符串转换成整数的函数是int。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "算法优化",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7588",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>运行下列这段程序，正确的输出结果是？（ ）<br>LS = [\"apple\", \"red\", \"orange\"]<br>def funb(a):<br> &nbsp; &nbsp;LS.append(a)<br>funb(\"yellow\")<br>print(LS)</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">[\"apple\",\"red\",\"orange\"]<br><br></td></tr></tbody></table><p><br></p>",
                "optionB": "<p>[\"apple\",\"red\",\"orange\",\"yellow\"]</p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">[]</td></tr></tbody></table><p><br></p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">[\"yellow\"]<br><br></td></tr></tbody></table></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "B",
                "userAnswer": "",
                "analyzeContent": "<p>该函数作用是添加列表元素。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数使用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7595",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>下列代码的输出结果是？（ ）<br>def func(a, b):<br> &nbsp; &nbsp;c=a**2+b<br> &nbsp; &nbsp;b=a<br> &nbsp; &nbsp;return c<br>a=10<br>b=2<br>c=func(b,a)+a<br>print(c,b)</p>",
                "optionA": "<p>102 2</p>",
                "optionB": "<p>24 10</p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><p>24 2</p></tr></tbody></table><p><br></p>",
                "optionD": "<p>102 10</p>",
                "optionE": "<p><br></p>",
                "answer": "C",
                "userAnswer": "",
                "analyzeContent": "<p>函数形参和实参。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "形参和实参",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7597",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>下列关于函数返回值的描述正确的是？（ ）</p>",
                "optionA": "<p>函数可以没有返回值，也可以有一个或多个返回值</p>",
                "optionB": "<p>函数定义中最多含有一个return语句</p>",
                "optionC": "<p>在函数定义中用return语句时，至少给一个返回值</p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">函数中 return语句只能放在函数定义的最后<br><br></td></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>Python函数可以没有返回值。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的返回值",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7602",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>运行下列这段程序，正确的输出结果是？（ ）</p><p>def reverseA(s):<br> &nbsp; &nbsp;t=\"\"<br> &nbsp; &nbsp;for i in range(0,len(s)):<br> &nbsp; &nbsp; &nbsp; &nbsp;t=s[i]+t<br> &nbsp; &nbsp;return t<br>print(reverseA(\"reverse\"))</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">esrever</td></tr></tbody></table><p><br></p>",
                "optionB": "<p>reverse</p>",
                "optionC": "<p>rsereve</p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">rseveer</td></tr></tbody></table></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>依次读取字符串，倒置字符串内容</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "算法优化",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7604",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>下列导入pandas模块的方法不正确的是？（ ）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">import pandas</td></tr></tbody></table></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">import pandas as p</td></tr></tbody></table><p><br></p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">import pandas *</td></tr></tbody></table><p><br></p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><p>from pandas import *</p></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "C",
                "userAnswer": "",
                "analyzeContent": "<p>from pandas import *是正确的。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "第三方库(模块)的获取、安装与调用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7606",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>Python中提供了大量的标准库模块，比如利用time模块可以获取计算机的时钟信息，包括日期和时间，若想要实现延时1分钟，则应该使用的语句是？（　）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">sleep(3600)<br><br></td></tr></tbody></table></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><p>time.time(60)</p></tr></tbody></table><p><br></p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">time.asctime(1)</td></tr></tbody></table></tr></tbody></table><p><br></p>",
                "optionD": "<p>time.sleep(60)</p>",
                "optionE": "<p><br></p>",
                "answer": "D",
                "userAnswer": "",
                "analyzeContent": "<p>Python调用函数的格式。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的相关概念",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7609",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>使用分治算法的基本步骤是？（ ）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><p>分解、解决、合并</p></tr></tbody></table><p><br></p>",
                "optionB": "<p>分解、解决</p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><p>合并、解决</p></tr></tbody></table><p><br></p>",
                "optionD": "<p>合并、解决、分解</p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>使用分治算法的基本步骤是分解、解决、合并。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "分治算法",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7610",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>二分查找法是运用哪种策略实现的算法？（ ）</p>",
                "optionA": "<p>分治法</p>",
                "optionB": "<p>贪心法</p>",
                "optionC": "<p>回溯法</p>",
                "optionD": "<p>动态规划法</p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>二分查找法，也叫折半查找法。每次都通过跟区间的中间元素对比，将待查找的区间缩小为之前的一半，直到找到要查找的元素。属于分治算法的思想。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "分治算法",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7611",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>下列程序是分治算法的典型应用，其运行结果是？（ ）</p><p>def dividAndConquer(arr,left,right): </p><p> &nbsp; &nbsp;if (right == left + 1) or (right == left): </p><p> &nbsp; &nbsp; &nbsp; &nbsp;return max(arr[left],arr[right]) </p><p> &nbsp; &nbsp;mid = int((left + right) / 2) </p><p> &nbsp; &nbsp;leftMax = dividAndConquer(arr,left,mid) </p><p> &nbsp; &nbsp;rightMax = dividAndConquer(arr,mid,right) </p><p> &nbsp; &nbsp;return max(leftMax,rightMax) </p><p>arr1 = [8, 1, 14, 19, 5] </p><p>print(dividAndConquer(arr1,0,4))</p>",
                "optionA": "<p>1</p>",
                "optionB": "<p>19</p>",
                "optionC": "<p>8</p>",
                "optionD": "<p>5</p>",
                "optionE": "<p><br></p>",
                "answer": "B",
                "userAnswer": "",
                "analyzeContent": "<p>分治算法求数组最大元素的值。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "5",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "分治算法",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7612",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>列程序输出的结果是？（ ）</p><p>def change(a,b):<br> &nbsp; &nbsp;a=10<br> &nbsp; &nbsp;b+=a<br>a=4<br>b=5<br>change(a,b)<br>print(a,b)</p>",
                "optionA": "<p>4 5</p>",
                "optionB": "<p>10 5</p>",
                "optionC": "<p>4 15</p>",
                "optionD": "<p>10 15</p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>函数内为局部变量，所以主程序的a、b值并未改变。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "全局变量和局部变量",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7613",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>下列程序运行的结果是？（ ）</p><p>def a():<br> &nbsp; &nbsp;print(\"here\")<br>b()<br>a()<br>def b():<br> &nbsp; &nbsp;print(\"there\")<br>a()<br>b()</p>",
                "optionA": "<p>出错</p>",
                "optionB": "<p>死循环</p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">here</td></tr></tbody></table><p><br></p>",
                "optionD": "<p>here</p><p>there</p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>第一次调用b的时候，b还未被定义。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数使用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7614",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">设函数f定义如下：<br></td></tr></tbody></table><p><br></p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">f(,2)<br><br></td></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">f(1,2)<br><br></td></tr></tbody></table><p><br></p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><p>f(1)</p></tr></tbody></table><p><br></p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">f(1,)</td></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>不指定形参名称的话，参数只能省略后面的。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "形参和实参",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7616",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<table style=\"width: auto;\"><tbody><tr><p>下列程序段运行的结果是？（ ）</p><p>def check(x = 2,y = 3):<br> &nbsp; &nbsp;print(x,y) <br>check(y=6,x=5)</p></tr></tbody></table><p><br></p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><p>5 6</p></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><p>6 5</p></tr></tbody></table><p><br></p>",
                "optionC": "<p>2 3</p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><p>3 2</p></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>按形参名称传递参数。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "形参和实参",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7619",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>def AddApple(fruit=None):<br> &nbsp; &nbsp;if fruit is None:<br> &nbsp; &nbsp; &nbsp; &nbsp;fruit=[]<br> &nbsp; &nbsp;fruit.append('Apple')<br> &nbsp; &nbsp;return fruit<br>AddApple()<br>AddApple()<br>print(AddApple(['Pear']))</p><p>以上程序段运行的结果是？（ ）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">['Pear','Apple']<br><br></td></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">['Pear','Apple','Apple']</td></tr></tbody></table><p><br></p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">['Apple','Pear','Apple','Apple']<br><br></td></tr></tbody></table><p><br></p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">['Apple']<br><br></td></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>第一、二次调用AddApple，虽然都会返回值，但并没有对返回值做任何处理。 第三次调用AddApple，程序直接用print语句把返回值输出。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的相关概念,自定义函数的创建与调用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7622",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>def ThankYou(name):<br> &nbsp; &nbsp;print(\"感谢%s对公司的贡献！\" %name)<br><br>ThankYou('张三')<br>ThankYou()<br>以上程序运行的结果是？（ ）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">打印输出：感谢张三对公司的贡献！<br></td></tr></tbody></table></tr></tbody></table><p><br></p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><p>打印输出：</p><p>感谢张三对公司的贡献！</p><p>感谢对公司的贡献！</p></tr></tbody></table><p><br></p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><p>无法输出。</p></tr></tbody></table><p><br></p>",
                "optionD": "<table style=\"width: auto;\"><tbody><tr><p>需要增加main函数才能正确运行。</p></tr></tbody></table><p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>ThankYou第一次正常调用，第二次没带参数，所以报错。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数使用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7625",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>编写程序计算1+1/2+1/3+……+1/n的结果，可以使用哪种调用函数自身的算法？（ ）</p>",
                "optionA": "<table style=\"width: auto;\"><tbody><tr><p>枚举</p></tr></tbody></table><p><br></p>",
                "optionB": "<p>递归</p>",
                "optionC": "<p>解析</p>",
                "optionD": "<p>分治</p>",
                "optionE": "<p><br></p>",
                "answer": "B",
                "userAnswer": "",
                "analyzeContent": "<p>递归算法的基本思想</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "递归与递推",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7626",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>用下面的程序求解计算s=1+3+5+7+9的值，请选择横线处应填写的代码？（ ）</p><p>def Sum(n):<br> &nbsp; &nbsp;if n&lt;=1:<br> &nbsp; &nbsp; &nbsp; &nbsp;return 1<br> &nbsp; &nbsp;else:<br> &nbsp; &nbsp; &nbsp; &nbsp;return ________<br>print(Sum(9))</p>",
                "optionA": "<p>n+Sum(n-1)</p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">n+Sum(n+1)</td></tr></tbody></table><p><br></p>",
                "optionC": "<p>n+Sum(n+2)</p>",
                "optionD": "<p>n+Sum(n-2)</p>",
                "optionE": "<p><br></p>",
                "answer": "D",
                "userAnswer": "",
                "analyzeContent": "<p>算式的步长为2。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数使用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7627",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>下列选项中，哪一项不是递归函数必须要具备的条件？（ ）</p>",
                "optionA": "<p>明确的边界条件</p>",
                "optionB": "<table style=\"width: auto;\"><tbody><tr><p>边界值</p></tr></tbody></table><p><br></p>",
                "optionC": "<p>循环语句</p>",
                "optionD": "<p>终止条件</p>",
                "optionE": "<p><br></p>",
                "answer": "C",
                "userAnswer": "",
                "analyzeContent": "<p>递归函数中不一定有循环语句。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "递归与递推",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7628",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">用递归算法实现5的阶乘，则下方的程序中横线上需要的代码是？（ ）def func(n): if n&lt;_______: return func(n+1)*n else: return 1print(func(1))</td></tr></tbody></table><p><br></p>",
                "optionA": "<p>4</p>",
                "optionB": "<p>5</p>",
                "optionC": "<p>6</p>",
                "optionD": "<p>7</p>",
                "optionE": "<p><br></p>",
                "answer": "C",
                "userAnswer": "",
                "analyzeContent": "<p>if的判断表达式为n&lt;a+1时，程序才能执行到n=a的情况。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "递归与递推",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7629",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<table style=\"width: auto;\"><tbody><tr><p>执行以下代码，程序的输出结果是？（ ）</p><p>def weight(n):<br> &nbsp; &nbsp;if n==1:<br> &nbsp; &nbsp; &nbsp; &nbsp;return 100<br> &nbsp; &nbsp;else:<br> &nbsp; &nbsp; &nbsp; &nbsp;return weight(n-1) +10<br>print(weight(3))</p></tr></tbody></table><p><br></p>",
                "optionA": "<p>100</p>",
                "optionB": "<p>110</p>",
                "optionC": "<p>120</p>",
                "optionD": "<p>130</p>",
                "optionE": "<p><br></p>",
                "answer": "C",
                "userAnswer": "",
                "analyzeContent": "<p>100+10+10</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数使用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7630",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 1,
                "title": "<p>以下关于递归与递推的说法，错误的是？（ ）</p>",
                "optionA": "<p>递归算法不涉及高深的数学知识，比较容易理解。</p>",
                "optionB": "<p>递归过程一般通过函数或子过程来实现。</p>",
                "optionC": "<table style=\"width: auto;\"><tbody><tr><td colSpan=\"1\" rowSpan=\"1\" width=\"auto\">递归算法是递推分解问题，然后再将最简单情况的解回归成大问题的解。<br><br></td></tr></tbody></table><p><br></p>",
                "optionD": "<p>存在既可以用递归算法解决，也可以用递推算法解决的问题。</p>",
                "optionE": "<p><br></p>",
                "answer": "A",
                "userAnswer": "",
                "analyzeContent": "<p>递归算法虽然不涉及高深的数学知识，但是递归思想和模型并不容易理解。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "递归与递推",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7631",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>函数中return语句只能放在函数定义的最后。（　）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "0",
                "userAnswer": "",
                "analyzeContent": "<p>return语句只要在函数体内都可以，一旦执行，退出函数体。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的返回值",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7633",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>Python定义函数时如果没有参数，也不能省略后面的空括号。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "1",
                "userAnswer": "",
                "analyzeContent": "<p>Python定义函数时空括号不可以省略。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的相关概念",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7634",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>函数的参数分为形参和实参两种，函数调用中实参和形参的值可以互相传递。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "0",
                "userAnswer": "",
                "analyzeContent": "<p>函数调用时，实参和形参之间的数据是单向的值传递，实参传递给形参是单向传递。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "形参和实参",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7635",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>导入模块中指定成员时，可采用的语句是：import &nbsp;成员名1，成员名2 &nbsp; from &nbsp;模块名。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "0",
                "userAnswer": "",
                "analyzeContent": "<p>导入模块中指定成员时，可采用的语句是：from &nbsp;模块名 &nbsp; &nbsp;import &nbsp; 成员名1，成员名2 </p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "第三方库(模块)的获取、安装与调用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7636",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>二分搜索、快速排序可以使用分治算法进行求解。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "1",
                "userAnswer": "",
                "analyzeContent": "<p>二分搜索、快速排序是分治算法的典型案例。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "分治算法",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7637",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>调用带有默认值参数的函数时，不能为默认值参数传递任何值，只能使用函数定义时设定的默认值。（　）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "0",
                "userAnswer": "",
                "analyzeContent": "<p>调用带有默认值参数的函数时，可以为默认值参数传递其它值。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "函数的相关概念",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7639",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>在Python中，可以在自定义函数中再定义函数。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "1",
                "userAnswer": "",
                "analyzeContent": "<p>函数可以嵌套</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "自定义函数的创建与调用",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7640",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>在定义一个函数时，如果出现调用自身的成分，则称为递推。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "0",
                "userAnswer": "",
                "analyzeContent": "<p>调用自身的成分是递归的特征。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "递归与递推",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7647",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>递归算法通常显得很简洁，因为多次调用自身，所以运行效率较高，应该大力提倡用递归算法设计程序。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "0",
                "userAnswer": "",
                "analyzeContent": "<p>递归算法的效率不高，并不是首选算法，应该优先选择其他效率更高的算法。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "3",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "递归与递推",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7648",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 3,
                "title": "<p>同样的问题使用不同的算法编程解决，其时间复杂度可能不一样。（ ）</p>",
                "optionA": "<p><br></p>",
                "optionB": "<p><br></p>",
                "optionC": "<p><br></p>",
                "optionD": "<p><br></p>",
                "optionE": "<p><br></p>",
                "answer": "1",
                "userAnswer": "",
                "analyzeContent": "<p>不同的算法，时间复杂度可能不一样。</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": "4",
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": "时间复杂度与空间复杂度",
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7649",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 4,
                "title": "<p><span>验证哥德巴赫猜想：任意一个大于等于4的偶数总可以分解为两个素数之和。请在下面的横线上补全代码，使得通过键盘输入一个偶数x(x&lt;1000，输出这两个素数。如果有多组解，只需要输出一组，并且第一个素数要尽可能地小。例如，输入“10”,输出“3&nbsp; 7“；输入“18”,输出“5&nbsp; 13”。</span><br><span>def prime(x):</span><br><span>&nbsp; &nbsp; for i in range(2, x):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if x%i == 0:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;</span><u><span>&nbsp;    ①   &nbsp; &nbsp;</span></u><br><span>&nbsp; &nbsp; return 1</span><br><span>x=int(input(\"输入一个偶数x:\"))</span><br><span>for k in range(&nbsp;</span><u><span>&nbsp;    ②  &nbsp; &nbsp;</span></u><span>&nbsp;，x//2+1):</span><br><span>&nbsp; &nbsp; if prime(k) and prime(</span><u><span>&nbsp;    ③   &nbsp; &nbsp;</span></u><span>):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print(</span><u><span>&nbsp; &nbsp;   ④&nbsp; &nbsp; &nbsp; &nbsp;</span></u><span>)</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; break</span></p>",
                "optionA": "",
                "optionB": "",
                "optionC": "",
                "optionD": "",
                "optionE": "",
                "answer": "<p><span><strong>参考程序：</strong></span></p><p><span>def prime(x):</span></p><p><span>&nbsp; &nbsp; for i in range(2, x):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if x%i == 0:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return</span><span>&nbsp;</span><span><strong>&nbsp;0</strong></span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; return 1</span><br><span>x=int(input(\"输入一个数x:\"))</span><br><span>for k in range(<span><strong>2</strong></span>,x//2+1):</span><br><span>&nbsp; &nbsp; if prime(k) and prime(<span><strong>x-k</strong></span>):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print(<span><strong>k,x-k</strong></span>)</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; break</span></p>",
                "userAnswer": "",
                "analyzeContent": "<p><span><strong>评分标准:</strong></span></p><p><span>（1）</span>&nbsp;0 或等效答案 ；（3分）<br><span>（2）</span>&nbsp;2<span>&nbsp;或等效答案</span>&nbsp;；（3分）<br><span>（3）</span>&nbsp;x-k<span>&nbsp;或等效答案</span>&nbsp;；&nbsp; （3分）<br><span>（4）</span>&nbsp;k,x-k<span>&nbsp;或等效答案</span>&nbsp;。&nbsp; (3分)</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": null,
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": null,
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7651",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 4,
                "title": "<p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数，例如12321、765567就是回文数。请补全下列代码，编程实现用分治的方法判断一个整数是否是回文数。&nbsp;</p><p>def ispel(s):</p><p>&nbsp; &nbsp; num = len(<u><span>&nbsp;  &nbsp;</span></u><span><u>①</u></span><u><span>&nbsp;  &nbsp;</span></u>)&nbsp;<br>&nbsp; &nbsp; if num == 0:<br>&nbsp; &nbsp; &nbsp; &nbsp; return False<br>&nbsp; &nbsp; if num == 1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return True<br>&nbsp; &nbsp; if num == 2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return s[0] ==<u>   </u><u><span>②</span>&nbsp;  &nbsp;</u><br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return s[0] == s[num - 1] and ispel(s[1:&nbsp;<u>  &nbsp;</u><u><span>③</span>&nbsp;  </u>])<br>st = input(\"请输入一个整数：\")</p><p><br>if&nbsp;<u><span>&nbsp;  &nbsp;</span></u><span><u><span>④  &nbsp;</span>&nbsp;</u></span>&nbsp;== True:<br>&nbsp; &nbsp; print(\"输入的是回文数\")<br>else:<br>&nbsp; &nbsp; print(\"输入的不是回文数\")</p>",
                "optionA": "",
                "optionB": "",
                "optionC": "",
                "optionD": "",
                "optionE": "",
                "answer": "<p><strong><span>参考程序：</span></strong></p><p>def ispel(s):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;num = len(<span>s</span>)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 0:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return False</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 1:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return True</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 2:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return s[0] ==&nbsp;<span>s[1]</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;else:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return s[0] == s[num - 1] and ispel(s[1:<span>num - 1</span>])</p><p>st = input(\"请输入一个整数：\")</p><p>if&nbsp;<span>ispel(st)</span>&nbsp;== True:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;print(\"输入的是回文数\")</p><p>else:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;print(\"输入的不是回文数\")</p>",
                "userAnswer": "",
                "analyzeContent": "<p><span><strong>评分标准：</strong></span></p><p></p><p class=\"p\">①&nbsp;&nbsp;s或等效答案&nbsp;；&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>（</span>2分）</p><p class=\"p\">②&nbsp;&nbsp;s[1]或等效答案&nbsp;<span>；</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（2分）</p><p class=\"p\">③&nbsp;&nbsp;num-1或等效答案&nbsp;；&nbsp;<span>（</span>2分）</p><p class=\"p\">④&nbsp;&nbsp;ispel(st)&nbsp;或等效答案。<span>（</span>2分）</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": null,
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": null,
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            },
            {
                "id": "7652",
                "createUser": null,
                "createTime": null,
                "isDeleted": null,
                "updateUser": null,
                "updateTime": null,
                "version": 0,
                "type": 4,
                "title": "<p>小青蛙爬楼梯。楼梯有n级。小青蛙每次只能爬1级或2级。</p><p>当楼梯只有1级时，青蛙只有1种爬法。</p><p>当楼梯有2级时，青蛙有2种爬法：一次爬2级；一次爬1级，爬2次。</p><p>请从键盘上接收楼梯级数n，输出青蛙有几种爬法。</p><p>示例输入</p><p>请输入楼梯级数：8</p><p>示例输出</p><p>8级楼梯共有34种爬法。</p><p>程序如下：</p><p>def Climb(n):<br>&nbsp; &nbsp; if&nbsp;<u><span>   </span></u><u><u><span>①</span></u><span>   </span></u>:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; elif n==2:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<u><span>   </span><u><span>②</span></u><span>   </span></u><br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return<u><span>   </span><u><span>③&nbsp;  </span></u><span>  </span></u> <br>n=int(input(\"请输入楼梯级数：\"))<br>if n&gt;0:<br>&nbsp; &nbsp; print(\"%d级楼梯共有%d种爬法。\"%(<u><span>   </span><u><span>④ </span></u><span>  </span></u>,<u><span>   </span><u><u><span>⑤ </span></u></u><span>  </span></u>))</p>",
                "optionA": "<p><span><strong>参考程序：</strong></span></p><p>def Climb(n):<br>&nbsp; &nbsp; if n==1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; elif n==2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 2<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return Climb(n-1)+Climb(n-2)<br>n=int(input(\"请输入楼梯级数：\"))<br>if n&gt;0:<br>&nbsp; &nbsp; print(\"%d级楼梯共有%d种爬法。\"%(n,Climb(n)))</p>",
                "optionB": "",
                "optionC": "",
                "optionD": "",
                "optionE": "",
                "answer": "<p><span><strong>参考程序：</strong></span></p><p>def Climb(n):<br>&nbsp; &nbsp; if n==1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; elif n==2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 2<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return Climb(n-1)+Climb(n-2)<br>n=int(input(\"请输入楼梯级数：\"))<br>if n&gt;0:<br>&nbsp; &nbsp; print(\"%d级楼梯共有%d种爬法。\"%(n,Climb(n)))</p>",
                "userAnswer": "",
                "analyzeContent": "<p><span><strong>评分标准：</strong></span></p><p><span></span></p><p class=\"p\"><span>（</span>1）n==1;&nbsp;&nbsp;（<span>2</span>分）</p><p class=\"p\"><span>（</span>2）return 2; （<span>2</span>分）</p><p class=\"p\"><span>（</span>3）Climb(n-1)+Climb(n-2); （2分）</p><p class=\"p\"><span>（</span>4）n; （2分）</p><p class=\"p\">（<span>5</span><span>）</span>Climb(n).（2分）</p>",
                "analyzeVideo": null,
                "subjectId": null,
                "examDots": "35,",
                "previousId": null,
                "sprintId": null,
                "subjectNumber": null,
                "difficultyLevel": null,
                "images": null,
                "weType": 0,
                "wxAnswerType": null,
                "isMySubject": 0,
                "knowledgeNames": null,
                "evaluationScore": null,
                "comment": null,
                "answerStatus": 0,
                "compileEnvironment": 0
            }
        ],
        "calculatePercentage": 0.0,
        "completeTime": "1",
        "answerScore": 0.0,
        "title": "202209Python四级真题",
        "averageScore": 14
    },
    "code": 200,
    "msg": "操作成功"
}